{"version":3,"sources":["webpack:///node_modules/humanize-duration/humanize-duration.js"],"names":["greek","y","c","mo","w","d","h","m","s","ms","decimal","languages","ar","getArabicForm","bg","getSlavicForm","ca","cs","getCzechOrSlovakForm","da","de","el","en","es","fa","fi","fr","gr","hr","mod10","hu","id","is","it","ja","ko","lo","lt","getLithuanianForm","nl","no","pl","getPolishForm","pt","ro","ru","uk","ur","sk","sv","tr","th","vi","zh_CN","zh_TW","humanizer","passedOptions","result","humanizerOptions","options","i","len","piece","Math","abs","dictionary","language","Error","unitName","unitMS","unitCount","pieces","units","length","unitMeasures","floor","push","ratioToLargerUnit","previousPiece","firstOccupiedUnitIndex","round","largest","render","conjunction","join","slice","delimiter","serialComma","doHumanization","extend","spacer","humanizeDuration","count","type","word","countStr","toString","replace","dictionaryValue","destination","source","arguments","prop","hasOwnProperty","getSupportedLanguages","define","amd","module","exports","this"],"mappings":"CAEC,WAKD,IAAAA,EAAA,CACAC,EAAA,SAAAC,GAAqB,WAAAA,EAAA,+EACrBC,GAAA,SAAAD,GAAsB,WAAAA,EAAA,mEACtBE,EAAA,SAAAF,GAAqB,WAAAA,EAAA,6GACrBG,EAAA,SAAAH,GAAqB,WAAAA,EAAA,6DACrBI,EAAA,SAAAJ,GAAqB,WAAAA,EAAA,iDACrBK,EAAA,SAAAL,GAAqB,WAAAA,EAAA,mEACrBM,EAAA,SAAAN,GAAqB,WAAAA,EAAA,uJACrBO,GAAA,SAAAP,GAAsB,WAAAA,EAAA,2SACtBQ,QAAA,KAGAC,EAAA,CACAC,GAAA,CACAX,EAAA,SAAAC,GAAuB,WAAAA,EAAA,uDACvBC,GAAA,SAAAD,GAAwB,WAAAA,EAAA,iDACxBE,EAAA,SAAAF,GAAuB,WAAAA,EAAA,yEACvBG,EAAA,SAAAH,GAAuB,WAAAA,EAAA,iDACvBI,EAAA,SAAAJ,GAAuB,WAAAA,EAAA,6DACvBK,EAAA,SAAAL,GACA,0EAwoBA,SAAAA,GACA,OAAAA,GAAA,EAAiB,EACjBA,EAAA,GAAAA,EAAA,GAA0B,EAC1B,EA3oBAW,CAAAX,KAEAM,EAAA,SAAAN,GAAuB,WAAAA,EAAA,mEACvBO,GAAA,SAAAP,GAAwB,WAAAA,EAAA,uKACxBQ,QAAA,KAEAI,GAAA,CACAb,EAAA,SAAAC,GAAuB,6HAAAa,EAAAb,KACvBC,GAAA,SAAAD,GAAwB,uHAAAa,EAAAb,KACxBE,EAAA,SAAAF,GAAuB,+IAAAa,EAAAb,KACvBG,EAAA,SAAAH,GAAuB,uEAAAa,EAAAb,KACvBI,EAAA,SAAAJ,GAAuB,mFAAAa,EAAAb,KACvBK,EAAA,SAAAL,GAAuB,6HAAAa,EAAAb,KACvBM,EAAA,SAAAN,GAAuB,+IAAAa,EAAAb,KACvBO,GAAA,SAAAP,GAAwB,uNAAAa,EAAAb,KACxBQ,QAAA,KAEAM,GAAA,CACAf,EAAA,SAAAC,GAAuB,iBAAAA,EAAA,SACvBC,GAAA,SAAAD,GAAwB,iBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,oBAAAA,EAAA,WACvBG,EAAA,SAAAH,GAAuB,gBAAAA,EAAA,WACvBI,EAAA,SAAAJ,GAAuB,iBAAAA,EAAA,WACvBK,EAAA,SAAAL,GAAuB,mBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,mBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,uBAAAA,EAAA,SACxBQ,QAAA,KAEAO,GAAA,CACAhB,EAAA,SAAAC,GAAuB,kCAAAgB,EAAAhB,KACvBC,GAAA,SAAAD,GAAwB,gFAAAgB,EAAAhB,KACxBE,EAAA,SAAAF,GAAuB,yDAAAgB,EAAAhB,KACvBG,EAAA,SAAAH,GAAuB,mCAAAgB,EAAAhB,KACvBI,EAAA,SAAAJ,GAAuB,2CAAAgB,EAAAhB,KACvBK,EAAA,SAAAL,GAAuB,2CAAAgB,EAAAhB,KACvBM,EAAA,SAAAN,GAAuB,+CAAAgB,EAAAhB,KACvBO,GAAA,SAAAP,GAAwB,+DAAAgB,EAAAhB,KACxBQ,QAAA,KAEAS,GAAA,CACAlB,EAAA,QACAE,GAAA,SAAAD,GAAwB,sBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,iBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,SACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,mBAAAA,EAAA,WACvBM,EAAA,SAAAN,GAAuB,oBAAAA,EAAA,UACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,UACxBQ,QAAA,KAEAU,GAAA,CACAnB,EAAA,SAAAC,GAAuB,kBAAAA,EAAA,SACvBC,GAAA,SAAAD,GAAwB,mBAAAA,EAAA,SACxBE,EAAA,SAAAF,GAAuB,mBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,SACvBI,EAAA,SAAAJ,GAAuB,oBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,oBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,qBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,0BAAAA,EAAA,SACxBQ,QAAA,KAEAW,GAAArB,EACAsB,GAAA,CACArB,EAAA,SAAAC,GAAuB,kBAAAA,EAAA,SACvBC,GAAA,SAAAD,GAAwB,mBAAAA,EAAA,SACxBE,EAAA,SAAAF,GAAuB,kBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,SACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,oBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,oBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,SACxBQ,QAAA,KAEAa,GAAA,CACAtB,EAAA,SAAAC,GAAuB,oBAAAA,EAAA,SACvBC,GAAA,SAAAD,GAAwB,iBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,oBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,oBAAAA,EAAA,SACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,oBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,qBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,SACxBQ,QAAA,KAEAc,GAAA,CACAvB,EAAA,qBACAE,GAAA,qBACAC,EAAA,2BACAC,EAAA,qBACAC,EAAA,2BACAC,EAAA,iCACAC,EAAA,iCACAC,GAAA,0DACAC,QAAA,KAEAe,GAAA,CACAxB,EAAA,SAAAC,GAAuB,WAAAA,EAAA,kBACvBC,GAAA,SAAAD,GAAwB,WAAAA,EAAA,wBACxBE,EAAA,SAAAF,GAAuB,oBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,yBAAAA,EAAA,YACvBI,EAAA,SAAAJ,GAAuB,mBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,sBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,qBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,0BAAAA,EAAA,SACxBQ,QAAA,KAEAgB,GAAA,CACAzB,EAAA,SAAAC,GAAuB,YAAAA,GAAA,WACvBC,GAAA,OACAC,EAAA,SAAAF,GAAuB,iBAAAA,GAAA,WACvBG,EAAA,SAAAH,GAAuB,cAAAA,GAAA,WACvBI,EAAA,SAAAJ,GAAuB,eAAAA,GAAA,WACvBK,EAAA,SAAAL,GAAuB,gBAAAA,GAAA,WACvBM,EAAA,SAAAN,GAAuB,iBAAAA,GAAA,WACvBO,GAAA,SAAAP,GAAwB,sBAAAA,GAAA,WACxBQ,QAAA,KAEAiB,GAAA3B,EACA4B,GAAA,CACA3B,EAAA,SAAAC,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MACA,SAEA,UAEAC,GAAA,SAAAD,GACA,WAAAA,EACA,SACS,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACT,UAEA,WAEAE,EAAA,SAAAF,GACA,OAAAA,EAAA,YAAAA,EACA,SAEA,UAEAG,EAAA,SAAAH,GAAuB,WAAAA,EAAA,cACvBI,EAAA,SAAAJ,GACA,WAAAA,EACA,MACS,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACT,OAEA,QAEAK,EAAA,SAAAL,GACA,IAAA2B,EAAA3B,EAAA,GACA,WAAA2B,GAAA,IAAAA,GAAA,IAAAA,KAAA3B,EAAA,IAAAA,EAAA,IAGA,SAFA,UAIAM,EAAA,SAAAN,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,KAAA,MACA,UACSA,EAAA,MACT,UACSA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MACT,UAEA,WAEAO,GAAA,SAAAP,GACA,WAAAA,EACA,cACSA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MACT,cAEA,eAEAQ,QAAA,KAEAoB,GAAA,CACA7B,EAAA,QACAE,GAAA,WACAC,EAAA,SACAC,EAAA,MACAC,EAAA,SACAC,EAAA,OACAC,EAAA,eACAC,GAAA,oBACAC,QAAA,KAEAqB,GAAA,CACA9B,EAAA,QACAE,GAAA,QACAC,EAAA,SACAC,EAAA,OACAC,EAAA,MACAC,EAAA,QACAC,EAAA,QACAC,GAAA,YACAC,QAAA,KAEAsB,GAAA,CACA/B,EAAA,QACAE,GAAA,SAAAD,GAAwB,yBAAAA,EAAA,YACxBE,EAAA,SAAAF,GAAuB,iBAAAA,EAAA,WACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,YACvBI,EAAA,SAAAJ,GAAuB,0BAAAA,EAAA,WACvBK,EAAA,SAAAL,GAAuB,yBAAAA,EAAA,WACvBM,EAAA,SAAAN,GAAuB,uBAAAA,EAAA,WACvBO,GAAA,SAAAP,GAAwB,4BAAAA,EAAA,WACxBQ,QAAA,KAEAuB,GAAA,CACAhC,EAAA,SAAAC,GAAuB,iBAAAA,EAAA,UACvBC,GAAA,SAAAD,GAAwB,iBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,sBAAAA,EAAA,UACvBG,EAAA,SAAAH,GAAuB,mBAAAA,EAAA,UACvBI,EAAA,SAAAJ,GAAuB,gBAAAA,EAAA,UACvBK,EAAA,SAAAL,GAAuB,mBAAAA,EAAA,UACvBM,EAAA,SAAAN,GAAuB,oBAAAA,EAAA,UACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,UACxBQ,QAAA,KAEAwB,GAAA,CACAjC,EAAA,SACAE,GAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,eACAC,EAAA,SACAC,EAAA,SACAC,GAAA,qBACAC,QAAA,KAEAyB,GAAA,CACAlC,EAAA,SACAE,GAAA,eACAC,EAAA,eACAC,EAAA,SACAC,EAAA,eACAC,EAAA,SACAC,EAAA,SACAC,GAAA,sBACAC,QAAA,KAEA0B,GAAA,CACAnC,EAAA,eACAE,GAAA,iCACAC,EAAA,iCACAC,EAAA,qBACAC,EAAA,6CACAC,EAAA,2BACAC,EAAA,uCACAC,GAAA,qEACAC,QAAA,KAEA2B,GAAA,CACApC,EAAA,SAAAC,GAAuB,OAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,6BACvBC,GAAA,SAAAD,GAAwB,yDAAAoC,EAAApC,KACxBE,EAAA,SAAAF,GAAuB,4DAAAoC,EAAApC,KACvBG,EAAA,SAAAH,GAAuB,sCAAAoC,EAAApC,KACvBI,EAAA,SAAAJ,GAAuB,4CAAAoC,EAAApC,KACvBK,EAAA,SAAAL,GAAuB,yDAAAoC,EAAApC,KACvBM,EAAA,SAAAN,GAAuB,6DAAAoC,EAAApC,KACvBO,GAAA,SAAAP,GAAwB,yEAAAoC,EAAApC,KACxBQ,QAAA,KAEAD,GAAA,CACAR,EAAA,QACAE,GAAA,QACAC,EAAA,SACAC,EAAA,OACAC,EAAA,MACAC,EAAA,QACAC,EAAA,OACAC,GAAA,WACAC,QAAA,KAEA6B,GAAA,CACAtC,EAAA,OACAE,GAAA,SAAAD,GAAwB,WAAAA,EAAA,mBACxBE,EAAA,SAAAF,GAAuB,WAAAA,EAAA,gBACvBG,EAAA,SAAAH,GAAuB,WAAAA,EAAA,eACvBI,EAAA,MACAC,EAAA,SAAAL,GAAuB,WAAAA,EAAA,oBACvBM,EAAA,SAAAN,GAAuB,WAAAA,EAAA,sBACvBO,GAAA,SAAAP,GAAwB,WAAAA,EAAA,gCACxBQ,QAAA,KAEA8B,GAAA,CACAvC,EAAA,QACAE,GAAA,SAAAD,GAAwB,sBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,iBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,UACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,oBAAAA,EAAA,UACvBM,EAAA,SAAAN,GAAuB,oBAAAA,EAAA,UACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,UACxBQ,QAAA,KAEA+B,GAAA,CACAxC,EAAA,SAAAC,GAAuB,kCAAAwC,EAAAxC,KACvBC,GAAA,SAAAD,GAAwB,uEAAAwC,EAAAxC,KACxBE,EAAA,SAAAF,GAAuB,uDAAAwC,EAAAxC,KACvBG,EAAA,SAAAH,GAAuB,wCAAAwC,EAAAxC,KACvBI,EAAA,SAAAJ,GAAuB,+CAAAwC,EAAAxC,KACvBK,EAAA,SAAAL,GAAuB,2CAAAwC,EAAAxC,KACvBM,EAAA,SAAAN,GAAuB,+CAAAwC,EAAAxC,KACvBO,GAAA,SAAAP,GAAwB,+DAAAwC,EAAAxC,KACxBQ,QAAA,KAEAiC,GAAA,CACA1C,EAAA,SAAAC,GAAuB,iBAAAA,EAAA,SACvBC,GAAA,SAAAD,GAAwB,WAAAA,EAAA,kBACxBE,EAAA,SAAAF,GAAuB,oBAAAA,EAAA,SACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,SACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,SACvBK,EAAA,SAAAL,GAAuB,oBAAAA,EAAA,SACvBM,EAAA,SAAAN,GAAuB,qBAAAA,EAAA,SACvBO,GAAA,SAAAP,GAAwB,0BAAAA,EAAA,SACxBQ,QAAA,KAEAkC,GAAA,CACA3C,EAAA,SAAAC,GAAuB,WAAAA,EAAA,YACvBC,GAAA,SAAAD,GAAwB,WAAAA,EAAA,oBACxBE,EAAA,SAAAF,GAAuB,WAAAA,EAAA,wDACvBG,EAAA,SAAAH,GAAuB,WAAAA,EAAA,aACvBI,EAAA,SAAAJ,GAAuB,WAAAA,EAAA,kBACvBK,EAAA,SAAAL,GAAuB,WAAAA,EAAA,kBACvBM,EAAA,SAAAN,GAAuB,WAAAA,EAAA,0BACvBO,GAAA,SAAAP,GAAwB,WAAAA,EAAA,kCACxBQ,QAAA,KAEAmC,GAAA,CACA5C,EAAA,SAAAC,GAAuB,6EAAAa,EAAAb,KACvBC,GAAA,SAAAD,GAAwB,6HAAAa,EAAAb,KACxBE,EAAA,SAAAF,GAAuB,6HAAAa,EAAAb,KACvBG,EAAA,SAAAH,GAAuB,mFAAAa,EAAAb,KACvBI,EAAA,SAAAJ,GAAuB,yFAAAa,EAAAb,KACvBK,EAAA,SAAAL,GAAuB,uHAAAa,EAAAb,KACvBM,EAAA,SAAAN,GAAuB,yIAAAa,EAAAb,KACvBO,GAAA,SAAAP,GAAwB,mOAAAa,EAAAb,KACxBQ,QAAA,KAEAoC,GAAA,CACA7C,EAAA,SAAAC,GAAuB,yFAAAa,EAAAb,KACvBC,GAAA,SAAAD,GAAwB,mIAAAa,EAAAb,KACxBE,EAAA,SAAAF,GAAuB,6HAAAa,EAAAb,KACvBG,EAAA,SAAAH,GAAuB,mFAAAa,EAAAb,KACvBI,EAAA,SAAAJ,GAAuB,uHAAAa,EAAAb,KACvBK,EAAA,SAAAL,GAAuB,yIAAAa,EAAAb,KACvBM,EAAA,SAAAN,GAAuB,yIAAAa,EAAAb,KACvBO,GAAA,SAAAP,GAAwB,iNAAAa,EAAAb,KACxBQ,QAAA,KAEAqC,GAAA,CACA9C,EAAA,qBACAE,GAAA,SAAAD,GAAwB,WAAAA,EAAA,mEACxBE,EAAA,SAAAF,GAAuB,WAAAA,EAAA,uDACvBG,EAAA,eACAC,EAAA,SAAAJ,GAAuB,WAAAA,EAAA,mEACvBK,EAAA,qBACAC,EAAA,iCACAC,GAAA,oDACAC,QAAA,KAEAsC,GAAA,CACA/C,EAAA,SAAAC,GAAuB,oCAAAgB,EAAAhB,KACvBC,GAAA,SAAAD,GAAwB,gDAAAgB,EAAAhB,KACxBE,EAAA,SAAAF,GAAuB,uFAAAgB,EAAAhB,KACvBG,EAAA,SAAAH,GAAuB,wCAAAgB,EAAAhB,KACvBI,EAAA,SAAAJ,GAAuB,8CAAAgB,EAAAhB,KACvBK,EAAA,SAAAL,GAAuB,uDAAAgB,EAAAhB,KACvBM,EAAA,SAAAN,GAAuB,kDAAAgB,EAAAhB,KACvBO,GAAA,SAAAP,GAAwB,kEAAAgB,EAAAhB,KACxBQ,QAAA,KAEAuC,GAAA,CACAhD,EAAA,QACAE,GAAA,SAAAD,GAAwB,sBAAAA,EAAA,UACxBE,EAAA,SAAAF,GAAuB,kBAAAA,EAAA,WACvBG,EAAA,SAAAH,GAAuB,iBAAAA,EAAA,UACvBI,EAAA,SAAAJ,GAAuB,kBAAAA,EAAA,WACvBK,EAAA,SAAAL,GAAuB,mBAAAA,EAAA,UACvBM,EAAA,SAAAN,GAAuB,oBAAAA,EAAA,UACvBO,GAAA,SAAAP,GAAwB,yBAAAA,EAAA,UACxBQ,QAAA,KAEAwC,GAAA,CACAjD,EAAA,WACAE,GAAA,KACAC,EAAA,QACAC,EAAA,SACAC,EAAA,OACAC,EAAA,SACAC,EAAA,SACAC,GAAA,aACAC,QAAA,KAEAyC,GAAA,CACAlD,EAAA,eACAE,GAAA,iCACAC,EAAA,6CACAC,EAAA,qBACAC,EAAA,6CACAC,EAAA,2BACAC,EAAA,uCACAC,GAAA,qEACAC,QAAA,KAEA0C,GAAA,CACAnD,EAAA,WACAE,GAAA,WACAC,EAAA,YACAC,EAAA,UACAC,EAAA,WACAC,EAAA,UACAC,EAAA,UACAC,GAAA,eACAC,QAAA,KAEA2C,MAAA,CACApD,EAAA,SACAE,GAAA,eACAC,EAAA,SACAC,EAAA,SACAC,EAAA,eACAC,EAAA,eACAC,EAAA,SACAC,GAAA,eACAC,QAAA,KAEA4C,MAAA,CACArD,EAAA,SACAE,GAAA,eACAC,EAAA,SACAC,EAAA,SACAC,EAAA,eACAC,EAAA,eACAC,EAAA,SACAC,GAAA,eACAC,QAAA,MAMA,SAAA6C,EAAAC,GACA,IAAAC,EAAA,SAAAhD,EAAAiD,GAEA,OA6BA,SAAAjD,EAAAkD,GACA,IAAAC,EAAAC,EAAAC,EAIArD,EAAAsD,KAAAC,IAAAvD,GAEA,IAAAwD,EAAAN,EAAAhD,UAAAgD,EAAAO,WAAAvD,EAAAgD,EAAAO,UACA,IAAAD,EACA,UAAAE,MAAA,eAAAF,EAAA,KAGA,IAGAG,EAAAC,EAAAC,EAHAC,EAAA,GAIA,IAAAX,EAAA,EAAAC,EAAAF,EAAAa,MAAAC,OAA2Cb,EAAAC,EAASD,IAEpDS,EAAAV,EAAAe,aADAN,EAAAT,EAAAa,MAAAZ,IAKAU,EADAV,EAAA,IAAAC,EACApD,EAAA4D,EAEAN,KAAAY,MAAAlE,EAAA4D,GAIAE,EAAAK,KAAA,CACAN,YACAF,aAIA3D,GAAA6D,EAAAD,EAGA,IASAQ,EAAAC,EATAC,EAAA,EACA,IAAAnB,EAAA,EAAeA,EAAAW,EAAAE,OAAmBb,IAClC,GAAAW,EAAAX,GAAAU,UAAA,CACAS,EAAAnB,EACA,MAIA,GAAAD,EAAAqB,MAEA,IAAApB,EAAAW,EAAAE,OAAA,EAAiCb,GAAA,KACjCE,EAAAS,EAAAX,IACAU,UAAAP,KAAAiB,MAAAlB,EAAAQ,WAEA,IAAAV,GAJyCA,KASzCE,EAAAQ,WADAO,EAAAlB,EAAAe,cAFAI,EAAAP,EAAAX,EAAA,IAEAQ,UAAAT,EAAAe,aAAAZ,EAAAM,YACA,GAAAT,EAAAsB,SAAAtB,EAAAsB,QAAA,EAAArB,EAAAmB,KACAD,EAAAR,WAAAR,EAAAQ,UAAAO,EACAf,EAAAQ,UAAA,GAKA,IAAAb,EAAA,GACA,IAAAG,EAAA,EAA8BA,EAAAC,KAC9BC,EAAAS,EAAAX,IACAU,WACAb,EAAAmB,KAAAM,EAAApB,EAAAQ,UAAAR,EAAAM,SAAAH,EAAAN,IAGAF,EAAAgB,SAAAd,EAAAsB,SANuCrB,KASvC,OAAAH,EAAAgB,OACAd,EAAAwB,aAAA,IAAA1B,EAAAgB,OAEO,IAAAhB,EAAAgB,OACPhB,EAAA2B,KAAAzB,EAAAwB,aACO1B,EAAAgB,OAAA,EACPhB,EAAA4B,MAAA,MAAAD,KAAAzB,EAAA2B,YAAA3B,EAAA4B,YAAA,QAAA5B,EAAAwB,YAAA1B,EAAA4B,OAAA,QADO,EAHP5B,EAAA2B,KAAAzB,EAAA2B,WAOAJ,EAAA,EAAAvB,EAAAa,MAAAb,EAAAa,MAAAC,OAAA,GAAAR,EAAAN,GA/GA6B,CAAA/E,EADAgF,EAAA,GAA6BhC,EAAAC,GAAA,MAI7B,OAAA+B,EAAAhC,EAAA,CACAS,SAAA,KACAoB,UAAA,KACAI,OAAA,IACAP,YAAA,GACAI,aAAA,EACAf,MAAA,+BACA7D,UAAA,GACAqE,OAAA,EACAN,aAAA,CACAzE,EAAA,SACAE,GAAA,QACAC,EAAA,OACAC,EAAA,MACAC,EAAA,KACAC,EAAA,IACAC,EAAA,IACAC,GAAA,IAEK+C,GAIL,IAAAmC,EAAApC,EAAA,IAyFA,SAAA2B,EAAAU,EAAAC,EAAA5B,EAAAN,GACA,IAAAjD,EAEAA,OADA,IAAAiD,EAAAjD,QACAuD,EAAAvD,QAEAiD,EAAAjD,QAGA,IAGAoF,EAHAC,EAAAH,EAAAI,WAAAC,QAAA,IAAAvF,GAEAwF,EAAAjC,EAAA4B,GAQA,OALAC,EADA,mBAAAI,EACAA,EAAAN,GAEAM,EAGAH,EAAApC,EAAA+B,OAAAI,EAGA,SAAAL,EAAAU,GAEA,IADA,IAAAC,EACAxC,EAAA,EAAmBA,EAAAyC,UAAA5B,OAAsBb,IAEzC,QAAA0C,KADAF,EAAAC,UAAAzC,GAEAwC,EAAAG,eAAAD,KACAH,EAAAG,GAAAF,EAAAE,IAIA,OAAAH,EAIA,SAAAzD,EAAAxC,GACA,WAAAA,EACA,EACK6D,KAAAY,MAAAzE,OACL,EACKA,EAAA,OAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,QACL,EAEA,EAKA,SAAAa,EAAAb,GACA,OAAA6D,KAAAY,MAAAzE,OACA,EACKA,EAAA,QAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MACL,EACKA,EAAA,MACL,EACKA,EAAA,EACL,EAEA,EAKA,SAAAgB,EAAAhB,GACA,WAAAA,EACA,EACK6D,KAAAY,MAAAzE,OACL,EACKA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACL,EAEA,EAKA,SAAAoC,EAAApC,GACA,WAAAA,KAAA,OAAAA,EAAA,OACA,EACK6D,KAAAY,MAAAzE,UAAA,OAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,OACL,EAEA,EAWAyF,EAAAa,sBAAA,WACA,IAAA/C,EAAA,GACA,QAAAS,KAAAvD,EACAA,EAAA4F,eAAArC,IAAA,OAAAA,GACAT,EAAAmB,KAAAV,GAGA,OAAAT,GAGAkC,EAAApC,YAEA,mBAAAkD,eAAAC,IACAD,OAAA,WACA,OAAAd,IAEG,oBAAAgB,eAAAC,QACHD,OAAAC,QAAAjB,EAEAkB,KAAAlB,mBA1rBC","file":"scripts.0e8c25f2eb225f7dc422.js","sourcesContent":["// HumanizeDuration.js - https://git.io/j0HgmQ\n\n;(function () {\n  // This has to be defined separately because of a bug: we want to alias\n  // `gr` and `el` for backwards-compatiblity. In a breaking change, we can\n  // remove `gr` entirely.\n  // See https://github.com/EvanHahn/HumanizeDuration.js/issues/143 for more.\n  var greek = {\n    y: function (c) { return c === 1 ? 'χρόνος' : 'χρόνια' },\n    mo: function (c) { return c === 1 ? 'μήνας' : 'μήνες' },\n    w: function (c) { return c === 1 ? 'εβδομάδα' : 'εβδομάδες' },\n    d: function (c) { return c === 1 ? 'μέρα' : 'μέρες' },\n    h: function (c) { return c === 1 ? 'ώρα' : 'ώρες' },\n    m: function (c) { return c === 1 ? 'λεπτό' : 'λεπτά' },\n    s: function (c) { return c === 1 ? 'δευτερόλεπτο' : 'δευτερόλεπτα' },\n    ms: function (c) { return c === 1 ? 'χιλιοστό του δευτερολέπτου' : 'χιλιοστά του δευτερολέπτου' },\n    decimal: ','\n  }\n\n  var languages = {\n    ar: {\n      y: function (c) { return c === 1 ? 'سنة' : 'سنوات' },\n      mo: function (c) { return c === 1 ? 'شهر' : 'أشهر' },\n      w: function (c) { return c === 1 ? 'أسبوع' : 'أسابيع' },\n      d: function (c) { return c === 1 ? 'يوم' : 'أيام' },\n      h: function (c) { return c === 1 ? 'ساعة' : 'ساعات' },\n      m: function (c) {\n        return ['دقيقة', 'دقائق'][getArabicForm(c)]\n      },\n      s: function (c) { return c === 1 ? 'ثانية' : 'ثواني' },\n      ms: function (c) { return c === 1 ? 'جزء من الثانية' : 'أجزاء من الثانية' },\n      decimal: ','\n    },\n    bg: {\n      y: function (c) { return ['години', 'година', 'години'][getSlavicForm(c)] },\n      mo: function (c) { return ['месеца', 'месец', 'месеца'][getSlavicForm(c)] },\n      w: function (c) { return ['седмици', 'седмица', 'седмици'][getSlavicForm(c)] },\n      d: function (c) { return ['дни', 'ден', 'дни'][getSlavicForm(c)] },\n      h: function (c) { return ['часа', 'час', 'часа'][getSlavicForm(c)] },\n      m: function (c) { return ['минути', 'минута', 'минути'][getSlavicForm(c)] },\n      s: function (c) { return ['секунди', 'секунда', 'секунди'][getSlavicForm(c)] },\n      ms: function (c) { return ['милисекунди', 'милисекунда', 'милисекунди'][getSlavicForm(c)] },\n      decimal: ','\n    },\n    ca: {\n      y: function (c) { return 'any' + (c === 1 ? '' : 's') },\n      mo: function (c) { return 'mes' + (c === 1 ? '' : 'os') },\n      w: function (c) { return 'setman' + (c === 1 ? 'a' : 'es') },\n      d: function (c) { return 'di' + (c === 1 ? 'a' : 'es') },\n      h: function (c) { return 'hor' + (c === 1 ? 'a' : 'es') },\n      m: function (c) { return 'minut' + (c === 1 ? '' : 's') },\n      s: function (c) { return 'segon' + (c === 1 ? '' : 's') },\n      ms: function (c) { return 'milisegon' + (c === 1 ? '' : 's') },\n      decimal: ','\n    },\n    cs: {\n      y: function (c) { return ['rok', 'roku', 'roky', 'let'][getCzechOrSlovakForm(c)] },\n      mo: function (c) { return ['měsíc', 'měsíce', 'měsíce', 'měsíců'][getCzechOrSlovakForm(c)] },\n      w: function (c) { return ['týden', 'týdne', 'týdny', 'týdnů'][getCzechOrSlovakForm(c)] },\n      d: function (c) { return ['den', 'dne', 'dny', 'dní'][getCzechOrSlovakForm(c)] },\n      h: function (c) { return ['hodina', 'hodiny', 'hodiny', 'hodin'][getCzechOrSlovakForm(c)] },\n      m: function (c) { return ['minuta', 'minuty', 'minuty', 'minut'][getCzechOrSlovakForm(c)] },\n      s: function (c) { return ['sekunda', 'sekundy', 'sekundy', 'sekund'][getCzechOrSlovakForm(c)] },\n      ms: function (c) { return ['milisekunda', 'milisekundy', 'milisekundy', 'milisekund'][getCzechOrSlovakForm(c)] },\n      decimal: ','\n    },\n    da: {\n      y: 'år',\n      mo: function (c) { return 'måned' + (c === 1 ? '' : 'er') },\n      w: function (c) { return 'uge' + (c === 1 ? '' : 'r') },\n      d: function (c) { return 'dag' + (c === 1 ? '' : 'e') },\n      h: function (c) { return 'time' + (c === 1 ? '' : 'r') },\n      m: function (c) { return 'minut' + (c === 1 ? '' : 'ter') },\n      s: function (c) { return 'sekund' + (c === 1 ? '' : 'er') },\n      ms: function (c) { return 'millisekund' + (c === 1 ? '' : 'er') },\n      decimal: ','\n    },\n    de: {\n      y: function (c) { return 'Jahr' + (c === 1 ? '' : 'e') },\n      mo: function (c) { return 'Monat' + (c === 1 ? '' : 'e') },\n      w: function (c) { return 'Woche' + (c === 1 ? '' : 'n') },\n      d: function (c) { return 'Tag' + (c === 1 ? '' : 'e') },\n      h: function (c) { return 'Stunde' + (c === 1 ? '' : 'n') },\n      m: function (c) { return 'Minute' + (c === 1 ? '' : 'n') },\n      s: function (c) { return 'Sekunde' + (c === 1 ? '' : 'n') },\n      ms: function (c) { return 'Millisekunde' + (c === 1 ? '' : 'n') },\n      decimal: ','\n    },\n    el: greek,\n    en: {\n      y: function (c) { return 'year' + (c === 1 ? '' : 's') },\n      mo: function (c) { return 'month' + (c === 1 ? '' : 's') },\n      w: function (c) { return 'week' + (c === 1 ? '' : 's') },\n      d: function (c) { return 'day' + (c === 1 ? '' : 's') },\n      h: function (c) { return 'hour' + (c === 1 ? '' : 's') },\n      m: function (c) { return 'minute' + (c === 1 ? '' : 's') },\n      s: function (c) { return 'second' + (c === 1 ? '' : 's') },\n      ms: function (c) { return 'millisecond' + (c === 1 ? '' : 's') },\n      decimal: '.'\n    },\n    es: {\n      y: function (c) { return 'año' + (c === 1 ? '' : 's') },\n      mo: function (c) { return 'mes' + (c === 1 ? '' : 'es') },\n      w: function (c) { return 'semana' + (c === 1 ? '' : 's') },\n      d: function (c) { return 'día' + (c === 1 ? '' : 's') },\n      h: function (c) { return 'hora' + (c === 1 ? '' : 's') },\n      m: function (c) { return 'minuto' + (c === 1 ? '' : 's') },\n      s: function (c) { return 'segundo' + (c === 1 ? '' : 's') },\n      ms: function (c) { return 'milisegundo' + (c === 1 ? '' : 's') },\n      decimal: ','\n    },\n    fa: {\n      y: 'سال',\n      mo: 'ماه',\n      w: 'هفته',\n      d: 'روز',\n      h: 'ساعت',\n      m: 'دقیقه',\n      s: 'ثانیه',\n      ms: 'میلی ثانیه',\n      decimal: '.'\n    },\n    fi: {\n      y: function (c) { return c === 1 ? 'vuosi' : 'vuotta' },\n      mo: function (c) { return c === 1 ? 'kuukausi' : 'kuukautta' },\n      w: function (c) { return 'viikko' + (c === 1 ? '' : 'a') },\n      d: function (c) { return 'päivä' + (c === 1 ? '' : 'ä') },\n      h: function (c) { return 'tunti' + (c === 1 ? '' : 'a') },\n      m: function (c) { return 'minuutti' + (c === 1 ? '' : 'a') },\n      s: function (c) { return 'sekunti' + (c === 1 ? '' : 'a') },\n      ms: function (c) { return 'millisekunti' + (c === 1 ? '' : 'a') },\n      decimal: ','\n    },\n    fr: {\n      y: function (c) { return 'an' + (c >= 2 ? 's' : '') },\n      mo: 'mois',\n      w: function (c) { return 'semaine' + (c >= 2 ? 's' : '') },\n      d: function (c) { return 'jour' + (c >= 2 ? 's' : '') },\n      h: function (c) { return 'heure' + (c >= 2 ? 's' : '') },\n      m: function (c) { return 'minute' + (c >= 2 ? 's' : '') },\n      s: function (c) { return 'seconde' + (c >= 2 ? 's' : '') },\n      ms: function (c) { return 'milliseconde' + (c >= 2 ? 's' : '') },\n      decimal: ','\n    },\n    gr: greek,\n    hr: {\n      y: function (c) {\n        if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {\n          return 'godine'\n        }\n        return 'godina'\n      },\n      mo: function (c) {\n        if (c === 1) {\n          return 'mjesec'\n        } else if (c === 2 || c === 3 || c === 4) {\n          return 'mjeseca'\n        }\n        return 'mjeseci'\n      },\n      w: function (c) {\n        if (c % 10 === 1 && c !== 11) {\n          return 'tjedan'\n        }\n        return 'tjedna'\n      },\n      d: function (c) { return c === 1 ? 'dan' : 'dana' },\n      h: function (c) {\n        if (c === 1) {\n          return 'sat'\n        } else if (c === 2 || c === 3 || c === 4) {\n          return 'sata'\n        }\n        return 'sati'\n      },\n      m: function (c) {\n        var mod10 = c % 10\n        if ((mod10 === 2 || mod10 === 3 || mod10 === 4) && (c < 10 || c > 14)) {\n          return 'minute'\n        }\n        return 'minuta'\n      },\n      s: function (c) {\n        if ((c === 10 || c === 11 || c === 12 || c === 13 || c === 14 || c === 16 || c === 17 || c === 18 || c === 19) || (c % 10 === 5)) {\n          return 'sekundi'\n        } else if (c % 10 === 1) {\n          return 'sekunda'\n        } else if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {\n          return 'sekunde'\n        }\n        return 'sekundi'\n      },\n      ms: function (c) {\n        if (c === 1) {\n          return 'milisekunda'\n        } else if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {\n          return 'milisekunde'\n        }\n        return 'milisekundi'\n      },\n      decimal: ','\n    },\n    hu: {\n      y: 'év',\n      mo: 'hónap',\n      w: 'hét',\n      d: 'nap',\n      h: 'óra',\n      m: 'perc',\n      s: 'másodperc',\n      ms: 'ezredmásodperc',\n      decimal: ','\n    },\n    id: {\n      y: 'tahun',\n      mo: 'bulan',\n      w: 'minggu',\n      d: 'hari',\n      h: 'jam',\n      m: 'menit',\n      s: 'detik',\n      ms: 'milidetik',\n      decimal: '.'\n    },\n    is: {\n      y: 'ár',\n      mo: function (c) { return 'mánuð' + (c === 1 ? 'ur' : 'ir') },\n      w: function (c) { return 'vik' + (c === 1 ? 'a' : 'ur') },\n      d: function (c) { return 'dag' + (c === 1 ? 'ur' : 'ar') },\n      h: function (c) { return 'klukkutím' + (c === 1 ? 'i' : 'ar') },\n      m: function (c) { return 'mínút' + (c === 1 ? 'a' : 'ur') },\n      s: function (c) { return 'sekúnd' + (c === 1 ? 'a' : 'ur') },\n      ms: function (c) { return 'millisekúnd' + (c === 1 ? 'a' : 'ur') },\n      decimal: '.'\n    },\n    it: {\n      y: function (c) { return 'ann' + (c === 1 ? 'o' : 'i') },\n      mo: function (c) { return 'mes' + (c === 1 ? 'e' : 'i') },\n      w: function (c) { return 'settiman' + (c === 1 ? 'a' : 'e') },\n      d: function (c) { return 'giorn' + (c === 1 ? 'o' : 'i') },\n      h: function (c) { return 'or' + (c === 1 ? 'a' : 'e') },\n      m: function (c) { return 'minut' + (c === 1 ? 'o' : 'i') },\n      s: function (c) { return 'second' + (c === 1 ? 'o' : 'i') },\n      ms: function (c) { return 'millisecond' + (c === 1 ? 'o' : 'i') },\n      decimal: ','\n    },\n    ja: {\n      y: '年',\n      mo: '月',\n      w: '週',\n      d: '日',\n      h: '時間',\n      m: '分',\n      s: '秒',\n      ms: 'ミリ秒',\n      decimal: '.'\n    },\n    ko: {\n      y: '년',\n      mo: '개월',\n      w: '주일',\n      d: '일',\n      h: '시간',\n      m: '분',\n      s: '초',\n      ms: '밀리 초',\n      decimal: '.'\n    },\n    lo: {\n      y: 'ປີ',\n      mo: 'ເດືອນ',\n      w: 'ອາທິດ',\n      d: 'ມື້',\n      h: 'ຊົ່ວໂມງ',\n      m: 'ນາທີ',\n      s: 'ວິນາທີ',\n      ms: 'ມິນລິວິນາທີ',\n      decimal: ','\n    },\n    lt: {\n      y: function (c) { return ((c % 10 === 0) || (c % 100 >= 10 && c % 100 <= 20)) ? 'metų' : 'metai' },\n      mo: function (c) { return ['mėnuo', 'mėnesiai', 'mėnesių'][getLithuanianForm(c)] },\n      w: function (c) { return ['savaitė', 'savaitės', 'savaičių'][getLithuanianForm(c)] },\n      d: function (c) { return ['diena', 'dienos', 'dienų'][getLithuanianForm(c)] },\n      h: function (c) { return ['valanda', 'valandos', 'valandų'][getLithuanianForm(c)] },\n      m: function (c) { return ['minutė', 'minutės', 'minučių'][getLithuanianForm(c)] },\n      s: function (c) { return ['sekundė', 'sekundės', 'sekundžių'][getLithuanianForm(c)] },\n      ms: function (c) { return ['milisekundė', 'milisekundės', 'milisekundžių'][getLithuanianForm(c)] },\n      decimal: ','\n    },\n    ms: {\n      y: 'tahun',\n      mo: 'bulan',\n      w: 'minggu',\n      d: 'hari',\n      h: 'jam',\n      m: 'minit',\n      s: 'saat',\n      ms: 'milisaat',\n      decimal: '.'\n    },\n    nl: {\n      y: 'jaar',\n      mo: function (c) { return c === 1 ? 'maand' : 'maanden' },\n      w: function (c) { return c === 1 ? 'week' : 'weken' },\n      d: function (c) { return c === 1 ? 'dag' : 'dagen' },\n      h: 'uur',\n      m: function (c) { return c === 1 ? 'minuut' : 'minuten' },\n      s: function (c) { return c === 1 ? 'seconde' : 'seconden' },\n      ms: function (c) { return c === 1 ? 'milliseconde' : 'milliseconden' },\n      decimal: ','\n    },\n    no: {\n      y: 'år',\n      mo: function (c) { return 'måned' + (c === 1 ? '' : 'er') },\n      w: function (c) { return 'uke' + (c === 1 ? '' : 'r') },\n      d: function (c) { return 'dag' + (c === 1 ? '' : 'er') },\n      h: function (c) { return 'time' + (c === 1 ? '' : 'r') },\n      m: function (c) { return 'minutt' + (c === 1 ? '' : 'er') },\n      s: function (c) { return 'sekund' + (c === 1 ? '' : 'er') },\n      ms: function (c) { return 'millisekund' + (c === 1 ? '' : 'er') },\n      decimal: ','\n    },\n    pl: {\n      y: function (c) { return ['rok', 'roku', 'lata', 'lat'][getPolishForm(c)] },\n      mo: function (c) { return ['miesiąc', 'miesiąca', 'miesiące', 'miesięcy'][getPolishForm(c)] },\n      w: function (c) { return ['tydzień', 'tygodnia', 'tygodnie', 'tygodni'][getPolishForm(c)] },\n      d: function (c) { return ['dzień', 'dnia', 'dni', 'dni'][getPolishForm(c)] },\n      h: function (c) { return ['godzina', 'godziny', 'godziny', 'godzin'][getPolishForm(c)] },\n      m: function (c) { return ['minuta', 'minuty', 'minuty', 'minut'][getPolishForm(c)] },\n      s: function (c) { return ['sekunda', 'sekundy', 'sekundy', 'sekund'][getPolishForm(c)] },\n      ms: function (c) { return ['milisekunda', 'milisekundy', 'milisekundy', 'milisekund'][getPolishForm(c)] },\n      decimal: ','\n    },\n    pt: {\n      y: function (c) { return 'ano' + (c === 1 ? '' : 's') },\n      mo: function (c) { return c === 1 ? 'mês' : 'meses' },\n      w: function (c) { return 'semana' + (c === 1 ? '' : 's') },\n      d: function (c) { return 'dia' + (c === 1 ? '' : 's') },\n      h: function (c) { return 'hora' + (c === 1 ? '' : 's') },\n      m: function (c) { return 'minuto' + (c === 1 ? '' : 's') },\n      s: function (c) { return 'segundo' + (c === 1 ? '' : 's') },\n      ms: function (c) { return 'milissegundo' + (c === 1 ? '' : 's') },\n      decimal: ','\n    },\n    ro: {\n      y: function (c) { return c === 1 ? 'an' : 'ani' },\n      mo: function (c) { return c === 1 ? 'lună' : 'luni' },\n      w: function (c) { return c === 1 ? 'săptămână' : 'săptămâni' },\n      d: function (c) { return c === 1 ? 'zi' : 'zile' },\n      h: function (c) { return c === 1 ? 'oră' : 'ore' },\n      m: function (c) { return c === 1 ? 'minut' : 'minute' },\n      s: function (c) { return c === 1 ? 'secundă' : 'secunde' },\n      ms: function (c) { return c === 1 ? 'milisecundă' : 'milisecunde' },\n      decimal: ','\n    },\n    ru: {\n      y: function (c) { return ['лет', 'год', 'года'][getSlavicForm(c)] },\n      mo: function (c) { return ['месяцев', 'месяц', 'месяца'][getSlavicForm(c)] },\n      w: function (c) { return ['недель', 'неделя', 'недели'][getSlavicForm(c)] },\n      d: function (c) { return ['дней', 'день', 'дня'][getSlavicForm(c)] },\n      h: function (c) { return ['часов', 'час', 'часа'][getSlavicForm(c)] },\n      m: function (c) { return ['минут', 'минута', 'минуты'][getSlavicForm(c)] },\n      s: function (c) { return ['секунд', 'секунда', 'секунды'][getSlavicForm(c)] },\n      ms: function (c) { return ['миллисекунд', 'миллисекунда', 'миллисекунды'][getSlavicForm(c)] },\n      decimal: ','\n    },\n    uk: {\n      y: function (c) { return ['років', 'рік', 'роки'][getSlavicForm(c)] },\n      mo: function (c) { return ['місяців', 'місяць', 'місяці'][getSlavicForm(c)] },\n      w: function (c) { return ['тижнів', 'тиждень', 'тижні'][getSlavicForm(c)] },\n      d: function (c) { return ['днів', 'день', 'дні'][getSlavicForm(c)] },\n      h: function (c) { return ['годин', 'година', 'години'][getSlavicForm(c)] },\n      m: function (c) { return ['хвилин', 'хвилина', 'хвилини'][getSlavicForm(c)] },\n      s: function (c) { return ['секунд', 'секунда', 'секунди'][getSlavicForm(c)] },\n      ms: function (c) { return ['мілісекунд', 'мілісекунда', 'мілісекунди'][getSlavicForm(c)] },\n      decimal: ','\n    },\n    ur: {\n      y: 'سال',\n      mo: function (c) { return c === 1 ? 'مہینہ' : 'مہینے' },\n      w: function (c) { return c === 1 ? 'ہفتہ' : 'ہفتے' },\n      d: 'دن',\n      h: function (c) { return c === 1 ? 'گھنٹہ' : 'گھنٹے' },\n      m: 'منٹ',\n      s: 'سیکنڈ',\n      ms: 'ملی سیکنڈ',\n      decimal: '.'\n    },\n    sk: {\n      y: function (c) { return ['rok', 'roky', 'roky', 'rokov'][getCzechOrSlovakForm(c)] },\n      mo: function (c) { return ['mesiac', 'mesiace', 'mesiace', 'mesiacov'][getCzechOrSlovakForm(c)] },\n      w: function (c) { return ['týždeň', 'týždne', 'týždne', 'týždňov'][getCzechOrSlovakForm(c)] },\n      d: function (c) { return ['deň', 'dni', 'dni', 'dní'][getCzechOrSlovakForm(c)] },\n      h: function (c) { return ['hodina', 'hodiny', 'hodiny', 'hodín'][getCzechOrSlovakForm(c)] },\n      m: function (c) { return ['minúta', 'minúty', 'minúty', 'minút'][getCzechOrSlovakForm(c)] },\n      s: function (c) { return ['sekunda', 'sekundy', 'sekundy', 'sekúnd'][getCzechOrSlovakForm(c)] },\n      ms: function (c) { return ['milisekunda', 'milisekundy', 'milisekundy', 'milisekúnd'][getCzechOrSlovakForm(c)] },\n      decimal: ','\n    },\n    sv: {\n      y: 'år',\n      mo: function (c) { return 'månad' + (c === 1 ? '' : 'er') },\n      w: function (c) { return 'veck' + (c === 1 ? 'a' : 'or') },\n      d: function (c) { return 'dag' + (c === 1 ? '' : 'ar') },\n      h: function (c) { return 'timm' + (c === 1 ? 'e' : 'ar') },\n      m: function (c) { return 'minut' + (c === 1 ? '' : 'er') },\n      s: function (c) { return 'sekund' + (c === 1 ? '' : 'er') },\n      ms: function (c) { return 'millisekund' + (c === 1 ? '' : 'er') },\n      decimal: ','\n    },\n    tr: {\n      y: 'yıl',\n      mo: 'ay',\n      w: 'hafta',\n      d: 'gün',\n      h: 'saat',\n      m: 'dakika',\n      s: 'saniye',\n      ms: 'milisaniye',\n      decimal: ','\n    },\n    th: {\n      y: 'ปี',\n      mo: 'เดือน',\n      w: 'อาทิตย์',\n      d: 'วัน',\n      h: 'ชั่วโมง',\n      m: 'นาที',\n      s: 'วินาที',\n      ms: 'มิลลิวินาที',\n      decimal: '.'\n    },\n    vi: {\n      y: 'năm',\n      mo: 'tháng',\n      w: 'tuần',\n      d: 'ngày',\n      h: 'giờ',\n      m: 'phút',\n      s: 'giây',\n      ms: 'mili giây',\n      decimal: ','\n    },\n    zh_CN: {\n      y: '年',\n      mo: '个月',\n      w: '周',\n      d: '天',\n      h: '小时',\n      m: '分钟',\n      s: '秒',\n      ms: '毫秒',\n      decimal: '.'\n    },\n    zh_TW: {\n      y: '年',\n      mo: '個月',\n      w: '周',\n      d: '天',\n      h: '小時',\n      m: '分鐘',\n      s: '秒',\n      ms: '毫秒',\n      decimal: '.'\n    }\n  }\n\n  // You can create a humanizer, which returns a function with default\n  // parameters.\n  function humanizer (passedOptions) {\n    var result = function humanizer (ms, humanizerOptions) {\n      var options = extend({}, result, humanizerOptions || {})\n      return doHumanization(ms, options)\n    }\n\n    return extend(result, {\n      language: 'en',\n      delimiter: ', ',\n      spacer: ' ',\n      conjunction: '',\n      serialComma: true,\n      units: ['y', 'mo', 'w', 'd', 'h', 'm', 's'],\n      languages: {},\n      round: false,\n      unitMeasures: {\n        y: 31557600000,\n        mo: 2629800000,\n        w: 604800000,\n        d: 86400000,\n        h: 3600000,\n        m: 60000,\n        s: 1000,\n        ms: 1\n      }\n    }, passedOptions)\n  }\n\n  // The main function is just a wrapper around a default humanizer.\n  var humanizeDuration = humanizer({})\n\n  // doHumanization does the bulk of the work.\n  function doHumanization (ms, options) {\n    var i, len, piece\n\n    // Make sure we have a positive number.\n    // Has the nice sideffect of turning Number objects into primitives.\n    ms = Math.abs(ms)\n\n    var dictionary = options.languages[options.language] || languages[options.language]\n    if (!dictionary) {\n      throw new Error('No language ' + dictionary + '.')\n    }\n\n    var pieces = []\n\n    // Start at the top and keep removing units, bit by bit.\n    var unitName, unitMS, unitCount\n    for (i = 0, len = options.units.length; i < len; i++) {\n      unitName = options.units[i]\n      unitMS = options.unitMeasures[unitName]\n\n      // What's the number of full units we can fit?\n      if (i + 1 === len) {\n        unitCount = ms / unitMS\n      } else {\n        unitCount = Math.floor(ms / unitMS)\n      }\n\n      // Add the string.\n      pieces.push({\n        unitCount: unitCount,\n        unitName: unitName\n      })\n\n      // Remove what we just figured out.\n      ms -= unitCount * unitMS\n    }\n\n    var firstOccupiedUnitIndex = 0\n    for (i = 0; i < pieces.length; i++) {\n      if (pieces[i].unitCount) {\n        firstOccupiedUnitIndex = i\n        break\n      }\n    }\n\n    if (options.round) {\n      var ratioToLargerUnit, previousPiece\n      for (i = pieces.length - 1; i >= 0; i--) {\n        piece = pieces[i]\n        piece.unitCount = Math.round(piece.unitCount)\n\n        if (i === 0) { break }\n\n        previousPiece = pieces[i - 1]\n\n        ratioToLargerUnit = options.unitMeasures[previousPiece.unitName] / options.unitMeasures[piece.unitName]\n        if ((piece.unitCount % ratioToLargerUnit) === 0 || (options.largest && ((options.largest - 1) < (i - firstOccupiedUnitIndex)))) {\n          previousPiece.unitCount += piece.unitCount / ratioToLargerUnit\n          piece.unitCount = 0\n        }\n      }\n    }\n\n    var result = []\n    for (i = 0, pieces.length; i < len; i++) {\n      piece = pieces[i]\n      if (piece.unitCount) {\n        result.push(render(piece.unitCount, piece.unitName, dictionary, options))\n      }\n\n      if (result.length === options.largest) { break }\n    }\n\n    if (result.length) {\n      if (!options.conjunction || result.length === 1) {\n        return result.join(options.delimiter)\n      } else if (result.length === 2) {\n        return result.join(options.conjunction)\n      } else if (result.length > 2) {\n        return result.slice(0, -1).join(options.delimiter) + (options.serialComma ? ',' : '') + options.conjunction + result.slice(-1)\n      }\n    } else {\n      return render(0, options.units[options.units.length - 1], dictionary, options)\n    }\n  }\n\n  function render (count, type, dictionary, options) {\n    var decimal\n    if (options.decimal === void 0) {\n      decimal = dictionary.decimal\n    } else {\n      decimal = options.decimal\n    }\n\n    var countStr = count.toString().replace('.', decimal)\n\n    var dictionaryValue = dictionary[type]\n    var word\n    if (typeof dictionaryValue === 'function') {\n      word = dictionaryValue(count)\n    } else {\n      word = dictionaryValue\n    }\n\n    return countStr + options.spacer + word\n  }\n\n  function extend (destination) {\n    var source\n    for (var i = 1; i < arguments.length; i++) {\n      source = arguments[i]\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          destination[prop] = source[prop]\n        }\n      }\n    }\n    return destination\n  }\n\n  // Internal helper function for Polish language.\n  function getPolishForm (c) {\n    if (c === 1) {\n      return 0\n    } else if (Math.floor(c) !== c) {\n      return 1\n    } else if (c % 10 >= 2 && c % 10 <= 4 && !(c % 100 > 10 && c % 100 < 20)) {\n      return 2\n    } else {\n      return 3\n    }\n  }\n\n  // Internal helper function for Russian and Ukranian languages.\n  function getSlavicForm (c) {\n    if (Math.floor(c) !== c) {\n      return 2\n    } else if ((c % 100 >= 5 && c % 100 <= 20) || (c % 10 >= 5 && c % 10 <= 9) || c % 10 === 0) {\n      return 0\n    } else if (c % 10 === 1) {\n      return 1\n    } else if (c > 1) {\n      return 2\n    } else {\n      return 0\n    }\n  }\n\n  // Internal helper function for Slovak language.\n  function getCzechOrSlovakForm (c) {\n    if (c === 1) {\n      return 0\n    } else if (Math.floor(c) !== c) {\n      return 1\n    } else if (c % 10 >= 2 && c % 10 <= 4 && c % 100 < 10) {\n      return 2\n    } else {\n      return 3\n    }\n  }\n\n  // Internal helper function for Lithuanian language.\n  function getLithuanianForm (c) {\n    if (c === 1 || (c % 10 === 1 && c % 100 > 20)) {\n      return 0\n    } else if (Math.floor(c) !== c || (c % 10 >= 2 && c % 100 > 20) || (c % 10 >= 2 && c % 100 < 10)) {\n      return 1\n    } else {\n      return 2\n    }\n  }\n\n  // Internal helper function for Arabic language.\n  function getArabicForm (c) {\n    if (c <= 2) { return 0 }\n    if (c > 2 && c < 11) { return 1 }\n    return 0\n  }\n\n  humanizeDuration.getSupportedLanguages = function getSupportedLanguages () {\n    var result = []\n    for (var language in languages) {\n      if (languages.hasOwnProperty(language) && language !== 'gr') {\n        result.push(language)\n      }\n    }\n    return result\n  }\n\n  humanizeDuration.humanizer = humanizer\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return humanizeDuration\n    })\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humanizeDuration\n  } else {\n    this.humanizeDuration = humanizeDuration\n  }\n})(); // eslint-disable-line semi\n"],"sourceRoot":""}