{"version":3,"sources":["./node_modules/rxjs/internal/operators/filter.js.pre-build-optimizer.js","./src/app/components/pages/system-wrapper/system-wrapper.component.ts","./src/app/modules/system.module.ts","./src/app/components/system/system-graphic-holder/system-graphic-holder.component.ts","./src/app/components/system/system-graphic-holder/system-graphic-holder.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-graphic-holder/system-graphic-holder.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-graphic-holder/system-graphic-holder.component.html","./src/app/components/system/system-scroller/system-scroller.component.ts","./node_modules/rxjs/_esm5/internal/operators/combineLatest.js.pre-build-optimizer.js","./src/app/components/system/system-scroller/system-scroller.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-scroller/system-scroller.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-scroller/system-scroller.component.html","./node_modules/@swimlane/ngx-charts/release/common/area.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/area.component.d.ts.AreaComponent.html","./node_modules/@swimlane/ngx-charts/release/line-chart/line.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/line-chart/line.component.d.ts.LineComponent.html","./node_modules/@swimlane/ngx-charts/release/line-chart/line-series.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/line-chart/line-series.component.d.ts.LineSeriesComponent.html","./node_modules/@swimlane/ngx-charts/release/common/circle.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/circle.component.d.ts.CircleComponent.html","./node_modules/@swimlane/ngx-charts/release/common/circle-series.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/circle-series.component.d.ts.CircleSeriesComponent.html","./node_modules/@swimlane/ngx-charts/release/common/tooltip-area.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/tooltip-area.component.d.ts.TooltipArea.html","./node_modules/@swimlane/ngx-charts/release/common/timeline/timeline.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/timeline/timeline.component.css.ngstyle.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/timeline/timeline.component.d.ts.Timeline.html","./node_modules/@swimlane/ngx-charts/release/line-chart/line-chart.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/line-chart/line-chart.component.d.ts.LineChartComponent.html","./src/app/components/system/system-availability-chart/system-availability-chart.component.ts","./src/app/components/system/system-availability-chart/system-availability-chart.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-availability-chart/system-availability-chart.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-availability-chart/system-availability-chart.component.html","./src/app/components/system/system-availability/system-availability.component.ts","./src/app/components/system/system-availability/system-availability.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-availability/system-availability.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-availability/system-availability.component.html","./src/app/components/system/system-robustness-chart/system-robustness-chart.component.ts","./src/app/components/system/system-robustness-chart/system-robustness-chart.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-robustness-chart/system-robustness-chart.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-robustness-chart/system-robustness-chart.component.html","./src/app/components/system/system-robustness/system-robustness.component.ts","./src/app/components/system/system-robustness/system-robustness.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-robustness/system-robustness.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-robustness/system-robustness.component.html","./node_modules/@swimlane/ngx-charts/release/common/count/count.directive.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/count/count.directive.d.ts.CountUpDirective.html","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell.component.d.ts.TreeMapCellComponent.html","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell-series.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell-series.component.d.ts.TreeMapCellSeriesComponent.html","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map.component.css.ngstyle.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/tree-map/tree-map.component.d.ts.TreeMapComponent.html","./src/app/components/system/system-root-cause/system-root-cause.component.ts","./src/app/components/system/system-root-cause/system-root-cause.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-root-cause/system-root-cause.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-root-cause/system-root-cause.component.html","./node_modules/@swimlane/ngx-charts/release/esm.js.pre-build-optimizer.js","./src/app/components/system/combo-chart/combo-series-vertical.component.ts","./src/app/components/system/combo-chart/combo-series-vertical.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/combo-chart/combo-series-vertical.component.ts.ComboSeriesVerticalComponent.html","./src/app/components/system/combo-chart/combo-chart.component.ts","./src/app/components/system/combo-chart/combo-chart.component.ts.pre-build-optimizer.js","./src/app/components/system/combo-chart/combo-chart.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/combo-chart/combo-chart.component.scss.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/combo-chart/combo-chart.component.ts.ComboChartComponent.html","./src/app/components/system/system-performance/system-performance.component.ts","./src/app/components/system/system-performance/system-performance.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/system-performance/system-performance.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/system-performance/system-performance.component.html","./node_modules/@swimlane/ngx-charts/release/common/grid-panel.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/grid-panel.component.d.ts.GridPanelComponent.html","./node_modules/@swimlane/ngx-charts/release/common/grid-panel-series.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/common/grid-panel-series.component.d.ts.GridPanelSeriesComponent.html","./node_modules/@swimlane/ngx-charts/release/bar-chart/bar-vertical-2d.component.ngfactory.js.pre-build-optimizer.js","./node_modules/@swimlane/ngx-charts/release/bar-chart/bar-vertical-2d.component.d.ts.BarVertical2DComponent.html","./src/app/components/system/overview-management/overview-management.component.ts","./src/app/components/system/overview-management/overview-management.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/system/overview-management/overview-management.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/system/overview-management/overview-management.component.html","./src/app/components/pages/system-wrapper/system-wrapper.component.ngfactory.js.pre-build-optimizer.js","./src/app/components/pages/system-wrapper/system-wrapper.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/components/pages/system-wrapper/system-wrapper.component.html","./src/app/modules/system.module.ngfactory.js.pre-build-optimizer.js"],"names":["Subscriber_1","exports","filter","predicate","thisArg","source","lift","FilterOperator","this","prototype","call","subscriber","subscribe","FilterSubscriber","_super","destination","_this","count","__extends","_next","value","result","err","error","next","Subscriber","titles","BehaviorSubject","click","emitClick","index","name","getValue","length","indexClicked","nameClicked","RenderType_SystemGraphicHolderComponent","encapsulation","styles","data","View_SystemGraphicHolderComponent_2","_l","View_SystemGraphicHolderComponent_1","ad","_v","context","$implicit","View_SystemGraphicHolderComponent_0","_element","bars","enable","barsWidth","ngOnInit","pipe","observables","_i","arguments","project","pop","isArray","slice","from","concat","_","resize","parentWidth","nativeElement","querySelector","offsetWidth","RenderType_SystemScrollerComponent","View_SystemScrollerComponent_0","RenderType_AreaComponent","View_AreaComponent_1","View_AreaComponent_0","RenderType_LineComponent","type","definitions","expr","animation","strokeDasharray","strokeDashoffset","offset","timings","options","View_LineComponent_0","RenderType_LineSeriesComponent","View_LineSeriesComponent_1","View_LineSeriesComponent_2","View_LineSeriesComponent_0","RenderType_CircleComponent","View_CircleComponent_0","RenderType_CircleSeriesComponent","opacity","View_CircleSeriesComponent_2","View_CircleSeriesComponent_1","onFocus","en","onBlur","onMouseEnter","onMouseLeave","$event","target","onMouseClick","onClick","_co","circle","activateCircle","deactivateCircle","View_CircleSeriesComponent_0","RenderType_TooltipArea","View_TooltipArea_2","View_TooltipArea_1","View_TooltipArea_0","tooltipAnchor","mouseMove","hideTooltip","tooltipSpacing","tooltipDisabled","tooltipPlacement","tooltipType","tooltipTemplate","tooltipContext","tooltipImmediateExit","RenderType_Timeline","View_Timeline_0","RenderType_LineChartComponent","View_LineChartComponent_1","updateXAxisHeight","View_LineChartComponent_2","updateYAxisWidth","View_LineChartComponent_3","View_LineChartComponent_5","onActivate","onDeactivate","View_LineChartComponent_4","hideCircles","updateHoveredVertical","View_LineChartComponent_7","View_LineChartComponent_6","updateDomain","View_LineChartComponent_0","_tools","_config","_scroller","minScale","yAxisTicks","chartData","colorScheme","domain","yAxisFormatting","val","xAxisFormatting","parsed","config","system","S2","formatDate","locale","format","newData","map","row","Math","round","reduce","r","a","formattedDate","push","Object","keys","prop","substr","week","startOf","averageByIndex","min","getMin","max","getMax","unitsPast","minValue","series","RenderType_SystemAvailabilityChartComponent","View_SystemAvailabilityChartComponent_0","results","scheme","schemeType","legend","xAxis","yAxis","showXAxisLabel","showYAxisLabel","gradient","showGridLines","xAxisTickFormatting","yAxisTickFormatting","yScaleMin","seriesTooltipTemplate","_data","_holder","percents","SystemAvailabilityRows","view","S1","t0","performance","now","SARows","today","formatPercent","console","log","yesterday","subtract","prev_week","sum","rows","act_week","prev_month","month","act_month","yesterday_up","week_up","month_up","t1","RenderType_SystemAvailabilityComponent","View_SystemAvailabilityComponent_1","View_SystemAvailabilityComponent_2","View_SystemAvailabilityComponent_3","View_SystemAvailabilityComponent_5","show","_handleKeydown","_handleTouchend","View_SystemAvailabilityComponent_4","View_SystemAvailabilityComponent_0","_onFocus","_onBlur","_selectViaInteraction","ngOnChanges","setTimeout","groups","classifiers","monthly","daily","weekly","allTickets","ticket","dateParsed","isValid","date","sort","b","left","right","valueOf","key","group","prop2","classifyByIndex","columns","key2","RenderType_SystemRobustnessChartComponent","View_SystemRobustnessChartComponent_0","RenderType_SystemRobustnessComponent","View_SystemRobustnessComponent_0","RenderType_CountUpDirective","View_CountUpDirective_0","RenderType_TreeMapCellComponent","View_TreeMapCellComponent_1","View_TreeMapCellComponent_3","View_TreeMapCellComponent_4","View_TreeMapCellComponent_2","View_TreeMapCellComponent_0","RenderType_TreeMapCellSeriesComponent","View_TreeMapCellSeriesComponent_1","View_TreeMapCellSeriesComponent_0","RenderType_TreeMapComponent","View_TreeMapComponent_0","valueFormatting","toString","replace","ie","S3","isIE","service","RenderType_SystemRootCauseComponent","View_SystemRootCauseComponent_1","View_SystemRootCauseComponent_2","View_SystemRootCauseComponent_0","SVGElement","contains","HTMLDivElement","colorSets","selectable","VisibilityObserver","element","zone","visible","isVisible","runCheck","destroy","clearTimeout","timeout","onVisibilityChange","run","emit","check","_a","offsetHeight","runOutsideAngular","BaseChartComponent","chartElement","cd","animations","select","ngAfterViewInit","bindWindowResizeEvent","visibilityObserver","update","bind","ngOnDestroy","unbindEvents","unsubscribe","changes","cloneData","width","height","dims","getContainerDims","floor","markForCheck","hostElem","parentNode","getBoundingClientRect","formatDates","i","g","label","Date","toLocaleDateString","j","d","resizeSubscription","subscription","fromEvent","window","debounceTime","e","data_1","item","copy","undefined","_b","seriesItemCopy","assign","JSON","parse","stringify","ColorHelper","customColors","find","cs","colorDomain","scaleType","scale","generateColorScheme","colorScale","range","points","getColor","Error","valueScale","formattedValue_1","found","mapping","toLowerCase","getLinearGradientStops","start","colorValueScale","endColor","startVal","startColor","endVal","currentVal","stops","color","originalOffset","toFixed","bandwidth","stops_1","s","global","noBarWhenZero","activate","deactivate","xScale","total","d0","formattedLabel","toLocaleString","formatLabel","bar","roundEdges","x","y","abs","yScale","offset1","offset0","colors","gradientStops","tooltipLabel","seriesName","getSeriesTooltips","seriesLine","lineValue","tooltipText","isActive","entry","activeEntries","trackBy","RenderType_ComboSeriesVerticalComponent","transform","View_ComboSeriesVerticalComponent_1","View_ComboSeriesVerticalComponent_0","curve","legendTitle","legendPosition","roundDomains","margin","xAxisHeight","yAxisWidth","yOrientLeft","yOrientRight","legendSpacing","barPadding","margins","_c","_d","_e","_f","_g","_h","_j","_k","xOffset","chartWidth","chartHeight","showXAxis","showYAxis","showXLabel","showYLabel","showLegend","legendType","getXScale","getYScale","xDomainLine","getXDomainLine","filteredDomain","yDomainLine","getYDomainLine","seriesDomain","getSeriesDomain","scaleLines","setColors","legendOptions","getLegendOptions","deactivateAll","e_1","entries","e_1_1","done","return","hoveredVertical","xScaleLine","getXScaleLine","yScaleLine","getYScaleLine","combinedSeries","lineChart","yAxisLabel","isDate","getScaleType","values","e_2","num","e_2_1","values_1_1","values_1","e_3","e_4","includes","e_4_1","e_3_1","v","Number","xSet","e_5","e_6","indexOf","e_6_1","e_5_1","yRightAxisScaleFactor","minMax","nice","xDomain","getXDomain","spacing","paddingInner","yDomain","getYDomain","yLeftAxisScaleFactor","colorsLine","colorSchemeLine","opts","title","position","updateLineWidth","findIndex","idx","splice","RenderType_ComboChartComponent","View_ComboChartComponent_1","View_ComboChartComponent_2","View_ComboChartComponent_3","View_ComboChartComponent_4","View_ComboChartComponent_5","View_ComboChartComponent_6","View_ComboChartComponent_0","lineSeriesComponent","_worker","seriesData","innerPadding","lineChartScheme","comboBarScheme","S4","titleChangeSub","csvdata","barData","linesData","RenderType_SystemPerformanceComponent","View_SystemPerformanceComponent_0","RenderType_GridPanelComponent","View_GridPanelComponent_0","RenderType_GridPanelSeriesComponent","View_GridPanelSeriesComponent_1","View_GridPanelSeriesComponent_0","RenderType_BarVertical2DComponent","View_BarVertical2DComponent_1","View_BarVertical2DComponent_2","View_BarVertical2DComponent_3","onDataLabelMaxHeightChanged","View_BarVertical2DComponent_0","S5","distinctUntilChanged","titleChanged","changeData","extra","drill","event","nextDrill","external","classification","description","incidentTickets","sumByIndex","wipTickets","sleepTickets","assignedTickets","RenderType_OverviewManagementComponent","View_OverviewManagementComponent_0","RenderType_SystemWrapperComponent","View_SystemWrapperComponent_0","View_SystemWrapperComponent_Host_0","SystemWrapperComponentNgFactory","SystemModuleNgFactory","path","pathMatch","component"],"mappings":"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","file":"modules-system-module-ngfactory.f777d33cc4476bc24bce.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cism-system-wrapper',\r\n  templateUrl: './system-wrapper.component.html',\r\n  styleUrls: ['./system-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemWrapperComponent {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SystemWrapperComponent } from '@components/pages/system-wrapper/system-wrapper.component';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { SharedModule } from '@modules/shared.module';\r\nimport { SystemAvailabilityComponent } from '@components/system/system-availability/system-availability.component';\r\nimport { OverviewManagementComponent } from '@components/system/overview-management/overview-management.component';\r\nimport { SystemPerformanceComponent } from '@components/system/system-performance/system-performance.component';\r\nimport { SystemScrollerComponent } from '@components/system/system-scroller/system-scroller.component';\r\nimport { SystemAvailabilityChartComponent } from '@components/system/system-availability-chart/system-availability-chart.component';\r\nimport { SystemRobustnessComponent } from '@components/system/system-robustness/system-robustness.component';\r\nimport { SystemRobustnessChartComponent } from '@components/system/system-robustness-chart/system-robustness-chart.component';\r\nimport { SystemTicketColorsComponent } from '@components/system/system-ticket-colors/system-ticket-colors.component';\r\nimport { SystemRootCauseComponent } from '@components/system/system-root-cause/system-root-cause.component';\r\nimport { ComboChartComponent, ComboSeriesVerticalComponent } from '@components/system/combo-chart';\r\n\r\nconst systemRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'prefix',\r\n    component: SystemWrapperComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SystemWrapperComponent,\r\n    SystemGraphicHolderComponent,\r\n    SystemAvailabilityComponent,\r\n    OverviewManagementComponent,\r\n    SystemPerformanceComponent,\r\n    SystemScrollerComponent,\r\n    SystemAvailabilityChartComponent,\r\n    SystemRobustnessComponent,\r\n    SystemRobustnessChartComponent,\r\n    SystemTicketColorsComponent,\r\n    SystemPerformanceComponent,\r\n    OverviewManagementComponent,\r\n    SystemRootCauseComponent,\r\n    ComboChartComponent,\r\n    ComboSeriesVerticalComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(systemRoutes),\r\n    SharedModule,\r\n    CommonModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class SystemModule { }\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { SystemTitleClick } from '@other/interfaces';\r\n\r\n@Component({\r\n  selector: 'cism-system-graphic-holder',\r\n  templateUrl: './system-graphic-holder.component.html',\r\n  styleUrls: ['./system-graphic-holder.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemGraphicHolderComponent {\r\n\r\n  titles = new BehaviorSubject<string[]>([])\r\n\r\n  click = new BehaviorSubject<SystemTitleClick>(null)\r\n\r\n  emitClick(index, name) {\r\n    // Skip emit event if it's the last one, the last one shouldn't be clickable\r\n    if ((index + 1) != this.titles.getValue().length) {\r\n      this.click.next({\r\n        titles: this.titles.getValue(),\r\n        indexClicked: index,\r\n        nameClicked: name\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-graphic-holder.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./system-graphic-holder.component\";\nvar styles_SystemGraphicHolderComponent = [i0.styles];\nvar RenderType_SystemGraphicHolderComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemGraphicHolderComponent, data: {} });\nexport { RenderType_SystemGraphicHolderComponent as RenderType_SystemGraphicHolderComponent };\nfunction View_SystemGraphicHolderComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"div\", [[\"class\", \"breadcrumb\"]], null, null, null, null, null))], null, null); }\nfunction View_SystemGraphicHolderComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, null, null, null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemGraphicHolderComponent_2)), i1.ɵdid(2, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"part\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.emitClick(_v.context.index, _v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var currVal_0 = (_v.context.index > 0); _ck(_v, 2, 0, currVal_0); }, function (_ck, _v) { var currVal_1 = _v.context.$implicit; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_SystemGraphicHolderComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"title\"]], null, null, null, null, null)), i1.ɵprd(512, null, i2.ɵNgClassImpl, i2.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(2, 278528, null, 0, i2.NgClass, [i2.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpod(4, { \"center\": 0 }), (_l()(), i1.ɵand(16777216, null, null, 2, null, View_SystemGraphicHolderComponent_1)), i1.ɵdid(6, 278528, null, 0, i2.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"div\", [[\"class\", \"content\"]], null, null, null, null, null)), i1.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"title\"; var currVal_1 = _ck(_v, 4, 0, (i1.ɵunv(_v, 2, 1, i1.ɵnov(_v, 3).transform(_co.titles)).length > 2)); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = i1.ɵunv(_v, 6, 0, i1.ɵnov(_v, 7).transform(_co.titles)); _ck(_v, 6, 0, currVal_2); }, null); }\nexport function View_SystemGraphicHolderComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-graphic-holder\", [], null, null, null, View_SystemGraphicHolderComponent_0, RenderType_SystemGraphicHolderComponent)), i1.ɵdid(1, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null)], null, null); }\nvar SystemGraphicHolderComponentNgFactory = i1.ɵccf(\"cism-system-graphic-holder\", i3.SystemGraphicHolderComponent, View_SystemGraphicHolderComponent_Host_0, {}, {}, [\"*\"]);\nexport { SystemGraphicHolderComponentNgFactory as SystemGraphicHolderComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{-ms-flex:1 100%;flex:1 100%;width:100%;max-width:100%;padding:20px 20px 30px;box-sizing:border-box;min-height:350px;position:relative;font-size:1.3rem}@-webkit-keyframes slideIn{from{opacity:0;transform:translate3d(-30px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}@keyframes slideIn{from{opacity:0;transform:translate3d(-30px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}.title[_ngcontent-%COMP%]{color:rgba(255,255,255,.7);font-size:1.6rem;margin-bottom:35px;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.title.align[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]{text-align:center}.title[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]{-ms-flex:1 1 0px;flex:1 1 0px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;-webkit-animation:.3s ease-in-out slideIn;animation:.3s ease-in-out slideIn}@media (min-width:600px){[_nghost-%COMP%]{padding:30px 30px 35px}.title[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]{-ms-flex:initial!important;flex:initial!important}}.title[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]:not(:last-child){cursor:pointer}.title[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]:not(:last-child):hover{color:#00bcd4}.title[_ngcontent-%COMP%]   .part[_ngcontent-%COMP%]:not(:last-child):hover + .breadcrumb[_ngcontent-%COMP%]{-ms-transform:rotate(180deg);transform:rotate(180deg)}.title[_ngcontent-%COMP%]   .breadcrumb[_ngcontent-%COMP%]{-ms-flex:0 30px;flex:0 30px;margin:0 20px;background-image:url(assets/img/arrow-right.svg);background-size:contain;background-repeat:no-repeat;background-position:center;opacity:.5;transform:rotateX(180deg);transition:transform .3s ease-in-out;-ms-transform-origin:50% 50%;transform-origin:50% 50%;perspective:50px}\"];\nexport { styles as styles };\n","<div class=\"title\" [ngClass]=\"{'center': (titles | async).length > 2}\">\r\n    <ng-container *ngFor=\"let part of titles | async; let i = index\">\r\n        <div class=\"breadcrumb\" *ngIf=\"i > 0\"></div>\r\n        <span class=\"part\" (click)=\"emitClick(i, part)\">{{ part }}</span>\r\n    </ng-container>\r\n</div>\r\n<div class=\"content\">\r\n    <ng-content></ng-content>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, HostListener, ElementRef, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { combineLatest } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cism-system-scroller',\r\n  templateUrl: './system-scroller.component.html',\r\n  styleUrls: ['./system-scroller.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemScrollerComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _element: ElementRef\r\n  ) { }\r\n\r\n  bars = new BehaviorSubject<number>(0)\r\n\r\n  enable = new BehaviorSubject<boolean>(false)\r\n\r\n  barsWidth = new BehaviorSubject<number>(25)\r\n\r\n  ngOnInit() {\r\n    this.bars.pipe(\r\n      combineLatest(this.barsWidth)\r\n    ).subscribe(_ => this.resize() )\r\n  }\r\n\r\n  @HostListener(\"window:resize\")\r\n  resize() {\r\n    if (true) {\r\n      const parentWidth = this._element.nativeElement.querySelector('.scrollable').offsetWidth\r\n      this.enable.next((parentWidth + 5) <= (this.bars.getValue() * this.barsWidth.getValue() + 50))\r\n    }\r\n  }\r\n\r\n}\r\n","/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nvar none = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineLatest.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-scroller.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./system-scroller.component\";\nvar styles_SystemScrollerComponent = [i0.styles];\nvar RenderType_SystemScrollerComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemScrollerComponent, data: {} });\nexport { RenderType_SystemScrollerComponent as RenderType_SystemScrollerComponent };\nexport function View_SystemScrollerComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 9, \"div\", [[\"class\", \"scrollable\"]], null, null, null, null, null)), i1.ɵprd(512, null, i2.ɵNgClassImpl, i2.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(2, 278528, null, 0, i2.NgClass, [i2.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpod(4, { \"enable\": 0 }), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"content\"]], [[4, \"width\", \"px\"]], null, null, null, null)), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpid(131072, i2.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"scrollable\"; var currVal_1 = _ck(_v, 4, 0, i1.ɵunv(_v, 2, 1, i1.ɵnov(_v, 3).transform(_co.enable))); _ck(_v, 2, 0, currVal_0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = (i1.ɵunv(_v, 5, 0, i1.ɵnov(_v, 6).transform(_co.enable)) ? ((i1.ɵunv(_v, 5, 0, i1.ɵnov(_v, 7).transform(_co.bars)) * i1.ɵunv(_v, 5, 0, i1.ɵnov(_v, 8).transform(_co.barsWidth))) + 50) : null); _ck(_v, 5, 0, currVal_2); }); }\nexport function View_SystemScrollerComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_SystemScrollerComponent_0, RenderType_SystemScrollerComponent)), i1.ɵdid(1, 114688, null, 0, i3.SystemScrollerComponent, [i1.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SystemScrollerComponentNgFactory = i1.ɵccf(\"cism-system-scroller\", i3.SystemScrollerComponent, View_SystemScrollerComponent_Host_0, {}, {}, [\"*\"]);\nexport { SystemScrollerComponentNgFactory as SystemScrollerComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block;height:200px}.scrollable[_ngcontent-%COMP%]{height:100%}.scrollable.enable[_ngcontent-%COMP%]{overflow-y:hidden;scroll-behavior:smooth;height:initial}.scrollable.enable[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin-bottom:20px}.scrollable.enable[_ngcontent-%COMP%]  cism-system-availability-chart{height:200px!important}.content[_ngcontent-%COMP%]{height:100%}\"];\nexport { styles as styles };\n","\r\n<div class=\"scrollable\" [ngClass]=\"{'enable': (enable | async)}\">\r\n    <div class=\"content\" [style.width.px]=\"(enable | async) ? (bars | async) * (barsWidth | async) + 50 : null\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./svg-linear-gradient.component.ngfactory\";\nimport * as i2 from \"./svg-linear-gradient.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./area.component\";\nvar styles_AreaComponent = [];\nvar RenderType_AreaComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AreaComponent, data: {} });\nexport { RenderType_AreaComponent as RenderType_AreaComponent };\nfunction View_AreaComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-svg-linear-gradient\", \"\"], [\"orientation\", \"vertical\"]], null, null, null, i1.View_SvgLinearGradientComponent_0, i1.RenderType_SvgLinearGradientComponent)), i0.ɵdid(2, 573440, null, 0, i2.SvgLinearGradientComponent, [], { orientation: [0, \"orientation\"], name: [1, \"name\"], stops: [2, \"stops\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"vertical\"; var currVal_1 = _co.gradientId; var currVal_2 = _co.gradientStops; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); }, null); }\nexport function View_AreaComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_AreaComponent_1)), i0.ɵdid(1, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 0, \":svg:path\", [[\"class\", \"area\"]], [[1, \"d\", 0], [1, \"fill\", 0], [4, \"opacity\", null]], null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.gradient; _ck(_v, 1, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.areaPath; var currVal_2 = (_co.gradient ? _co.gradientFill : _co.fill); var currVal_3 = _co.opacity; _ck(_v, 2, 0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_AreaComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-area\", \"\"]], null, null, null, View_AreaComponent_0, RenderType_AreaComponent)), i0.ɵdid(1, 573440, null, 0, i4.AreaComponent, [i0.ElementRef], null, null)], null, null); }\nvar AreaComponentNgFactory = i0.ɵccf(\"g[ngx-charts-area]\", i4.AreaComponent, View_AreaComponent_Host_0, { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", activeLabel: \"activeLabel\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, { select: \"select\" }, []);\nexport { AreaComponentNgFactory as AreaComponentNgFactory };\n","\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g ngx-charts-svg-linear-gradient\n        orientation=\"vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"area\"\n      [attr.d]=\"areaPath\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [style.opacity]=\"opacity\"\n    />\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./line.component\";\nvar styles_LineComponent = [];\nvar RenderType_LineComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_LineComponent, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \":enter\", animation: [{ type: 6, styles: { strokeDasharray: 2000, strokeDashoffset: 2000 }, offset: null }, { type: 4, styles: { type: 6, styles: { strokeDashoffset: 0 }, offset: null }, timings: 1000 }], options: null }], options: {} }] } });\nexport { RenderType_LineComponent as RenderType_LineComponent };\nexport function View_LineComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:path\", [[\"class\", \"line\"], [\"stroke-width\", \"1.5px\"]], [[24, \"@animationState\", 0], [1, \"d\", 0], [1, \"fill\", 0], [1, \"stroke\", 0]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = \"active\"; var currVal_1 = _co.initialPath; var currVal_2 = _co.fill; var currVal_3 = _co.stroke; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_LineComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-line\", \"\"]], null, null, null, View_LineComponent_0, RenderType_LineComponent)), i0.ɵdid(1, 573440, null, 0, i1.LineComponent, [i0.ElementRef], null, null)], null, null); }\nvar LineComponentNgFactory = i0.ɵccf(\"g[ngx-charts-line]\", i1.LineComponent, View_LineComponent_Host_0, { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, { select: \"select\" }, []);\nexport { LineComponentNgFactory as LineComponentNgFactory };\n","\n    <svg:path\n      [@animationState]=\"'active'\"\n      class=\"line\"\n      [attr.d]=\"initialPath\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n    />\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../common/svg-linear-gradient.component.ngfactory\";\nimport * as i2 from \"../common/svg-linear-gradient.component\";\nimport * as i3 from \"../common/area.component.ngfactory\";\nimport * as i4 from \"../common/area.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./line.component.ngfactory\";\nimport * as i7 from \"./line.component\";\nimport * as i8 from \"./line-series.component\";\nvar styles_LineSeriesComponent = [];\nvar RenderType_LineSeriesComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_LineSeriesComponent, data: {} });\nexport { RenderType_LineSeriesComponent as RenderType_LineSeriesComponent };\nfunction View_LineSeriesComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-svg-linear-gradient\", \"\"], [\"orientation\", \"vertical\"]], null, null, null, i1.View_SvgLinearGradientComponent_0, i1.RenderType_SvgLinearGradientComponent)), i0.ɵdid(1, 573440, null, 0, i2.SvgLinearGradientComponent, [], { orientation: [0, \"orientation\"], name: [1, \"name\"], stops: [2, \"stops\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"vertical\"; var currVal_1 = _co.gradientId; var currVal_2 = _co.gradientStops; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); }, null); }\nfunction View_LineSeriesComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"class\", \"line-series-range\"], [\"ngx-charts-area\", \"\"]], [[2, \"active\", null], [2, \"inactive\", null]], null, null, i3.View_AreaComponent_0, i3.RenderType_AreaComponent)), i0.ɵdid(1, 573440, null, 0, i4.AreaComponent, [i0.ElementRef], { data: [0, \"data\"], path: [1, \"path\"], fill: [2, \"fill\"], opacity: [3, \"opacity\"], animations: [4, \"animations\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.data; var currVal_3 = _co.outerPath; var currVal_4 = (_co.hasGradient ? _co.gradientUrl : _co.colors.getColor(_co.data.name)); var currVal_5 = _co.rangeFillOpacity; var currVal_6 = _co.animations; _ck(_v, 1, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.isActive(_co.data); var currVal_1 = _co.isInactive(_co.data); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nexport function View_LineSeriesComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 9, \":svg:g\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_LineSeriesComponent_1)), i0.ɵdid(3, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 1, \":svg:g\", [[\"class\", \"line-highlight\"], [\"ngx-charts-area\", \"\"]], [[2, \"active\", null], [2, \"inactive\", null]], null, null, i3.View_AreaComponent_0, i3.RenderType_AreaComponent)), i0.ɵdid(5, 573440, null, 0, i4.AreaComponent, [i0.ElementRef], { data: [0, \"data\"], path: [1, \"path\"], fill: [2, \"fill\"], opacity: [3, \"opacity\"], startOpacity: [4, \"startOpacity\"], gradient: [5, \"gradient\"], stops: [6, \"stops\"], animations: [7, \"animations\"] }, null), (_l()(), i0.ɵeld(6, 0, null, null, 1, \":svg:g\", [[\"class\", \"line-series\"], [\"ngx-charts-line\", \"\"]], [[2, \"active\", null], [2, \"inactive\", null]], null, null, i6.View_LineComponent_0, i6.RenderType_LineComponent)), i0.ɵdid(7, 573440, null, 0, i7.LineComponent, [i0.ElementRef], { path: [0, \"path\"], stroke: [1, \"stroke\"], data: [2, \"data\"], animations: [3, \"animations\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_LineSeriesComponent_2)), i0.ɵdid(9, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.hasGradient; _ck(_v, 3, 0, currVal_0); var currVal_3 = _co.data; var currVal_4 = _co.areaPath; var currVal_5 = (_co.hasGradient ? _co.gradientUrl : _co.colors.getColor(_co.data.name)); var currVal_6 = 0.25; var currVal_7 = 0; var currVal_8 = true; var currVal_9 = _co.areaGradientStops; var currVal_10 = _co.animations; _ck(_v, 5, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_13 = _co.path; var currVal_14 = _co.stroke; var currVal_15 = _co.data; var currVal_16 = _co.animations; _ck(_v, 7, 0, currVal_13, currVal_14, currVal_15, currVal_16); var currVal_17 = _co.hasRange; _ck(_v, 9, 0, currVal_17); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.isActive(_co.data); var currVal_2 = _co.isInactive(_co.data); _ck(_v, 4, 0, currVal_1, currVal_2); var currVal_11 = _co.isActive(_co.data); var currVal_12 = _co.isInactive(_co.data); _ck(_v, 6, 0, currVal_11, currVal_12); }); }\nexport function View_LineSeriesComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-line-series\", \"\"]], null, null, null, View_LineSeriesComponent_0, RenderType_LineSeriesComponent)), i0.ɵdid(1, 573440, null, 0, i8.LineSeriesComponent, [], null, null)], null, null); }\nvar LineSeriesComponentNgFactory = i0.ɵccf(\"g[ngx-charts-line-series]\", i8.LineSeriesComponent, View_LineSeriesComponent_Host_0, { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, {}, []);\nexport { LineSeriesComponentNgFactory as LineSeriesComponentNgFactory };\n","\n    <svg:g>\n      <defs>\n        <svg:g ngx-charts-svg-linear-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n     <svg:g ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./circle.component\";\nvar styles_CircleComponent = [];\nvar RenderType_CircleComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CircleComponent, data: {} });\nexport { RenderType_CircleComponent as RenderType_CircleComponent };\nexport function View_CircleComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:circle\", [], [[1, \"cx\", 0], [1, \"cy\", 0], [1, \"r\", 0], [1, \"fill\", 0], [1, \"stroke\", 0], [1, \"opacity\", 0], [1, \"class\", 0], [1, \"pointer-events\", 0]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.cx; var currVal_1 = _co.cy; var currVal_2 = _co.r; var currVal_3 = _co.fill; var currVal_4 = _co.stroke; var currVal_5 = _co.circleOpacity; var currVal_6 = _co.classNames; var currVal_7 = _co.pointerEvents; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }); }\nexport function View_CircleComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-circle\", \"\"]], null, [[null, \"click\"], [null, \"mouseenter\"], [null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1).onClick() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 1).onMouseEnter() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 1).onMouseLeave() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, View_CircleComponent_0, RenderType_CircleComponent)), i0.ɵdid(1, 573440, null, 0, i1.CircleComponent, [], null, null)], null, null); }\nvar CircleComponentNgFactory = i0.ɵccf(\"g[ngx-charts-circle]\", i1.CircleComponent, View_CircleComponent_Host_0, { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, []);\nexport { CircleComponentNgFactory as CircleComponentNgFactory };\n","\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./svg-linear-gradient.component.ngfactory\";\nimport * as i2 from \"./svg-linear-gradient.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./circle.component.ngfactory\";\nimport * as i5 from \"./tooltip/tooltip.directive\";\nimport * as i6 from \"./tooltip/tooltip.service\";\nimport * as i7 from \"./circle.component\";\nimport * as i8 from \"./circle-series.component\";\nvar styles_CircleSeriesComponent = [];\nvar RenderType_CircleSeriesComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CircleSeriesComponent, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \":enter\", animation: [{ type: 6, styles: { opacity: 0 }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 1 }, offset: null }, timings: 250 }], options: null }], options: {} }] } });\nexport { RenderType_CircleSeriesComponent as RenderType_CircleSeriesComponent };\nfunction View_CircleSeriesComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:rect\", [[\"class\", \"tooltip-bar\"]], [[24, \"@animationState\", 0], [1, \"x\", 0], [1, \"y\", 0], [1, \"width\", 0], [1, \"height\", 0], [1, \"fill\", 0]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = \"active\"; var currVal_1 = (_co.circle.cx - _co.circle.radius); var currVal_2 = _co.circle.cy; var currVal_3 = (_co.circle.radius * 2); var currVal_4 = _co.circle.height; var currVal_5 = _co.gradientFill; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nfunction View_CircleSeriesComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 9, \":svg:g\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-svg-linear-gradient\", \"\"], [\"orientation\", \"vertical\"]], null, null, null, i1.View_SvgLinearGradientComponent_0, i1.RenderType_SvgLinearGradientComponent)), i0.ɵdid(3, 573440, null, 0, i2.SvgLinearGradientComponent, [], { orientation: [0, \"orientation\"], name: [1, \"name\"], stops: [2, \"stops\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CircleSeriesComponent_2)), i0.ɵdid(5, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(6, 16777216, null, null, 3, \":svg:g\", [[\"class\", \"circle\"], [\"ngx-charts-circle\", \"\"], [\"ngx-tooltip\", \"\"]], [[2, \"active\", null]], [[null, \"select\"], [null, \"activate\"], [null, \"deactivate\"], [null, \"focusin\"], [null, \"blur\"], [null, \"mouseenter\"], [null, \"mouseleave\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"focusin\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 7).onFocus() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 7).onBlur() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 7).onMouseEnter() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 7).onMouseLeave($event.target) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"click\" === en)) {\n        var pd_4 = (i0.ɵnov(_v, 7).onMouseClick() !== false);\n        ad = (pd_4 && ad);\n    } if ((\"click\" === en)) {\n        var pd_5 = (i0.ɵnov(_v, 8).onClick() !== false);\n        ad = (pd_5 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_6 = (i0.ɵnov(_v, 8).onMouseEnter() !== false);\n        ad = (pd_6 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_7 = (i0.ɵnov(_v, 8).onMouseLeave() !== false);\n        ad = (pd_7 && ad);\n    } if ((\"select\" === en)) {\n        var pd_8 = (_co.onClick(_co.circle.data) !== false);\n        ad = (pd_8 && ad);\n    } if ((\"activate\" === en)) {\n        var pd_9 = (_co.activateCircle() !== false);\n        ad = (pd_9 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_10 = (_co.deactivateCircle() !== false);\n        ad = (pd_10 && ad);\n    } return ad; }, i4.View_CircleComponent_0, i4.RenderType_CircleComponent)), i0.ɵdid(7, 147456, null, 0, i5.TooltipDirective, [i6.TooltipService, i0.ViewContainerRef, i0.Renderer2], { tooltipTitle: [0, \"tooltipTitle\"], tooltipDisabled: [1, \"tooltipDisabled\"], tooltipPlacement: [2, \"tooltipPlacement\"], tooltipType: [3, \"tooltipType\"], tooltipTemplate: [4, \"tooltipTemplate\"], tooltipContext: [5, \"tooltipContext\"] }, null), i0.ɵdid(8, 573440, null, 0, i7.CircleComponent, [], { cx: [0, \"cx\"], cy: [1, \"cy\"], r: [2, \"r\"], fill: [3, \"fill\"], data: [4, \"data\"], classNames: [5, \"classNames\"], pointerEvents: [6, \"pointerEvents\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }), i0.ɵpod(9, { name: 0 })], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"vertical\"; var currVal_1 = _co.gradientId; var currVal_2 = _co.circle.gradientStops; _ck(_v, 3, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = (_co.barVisible && (_co.type === \"standard\")); _ck(_v, 5, 0, currVal_3); var currVal_5 = (_co.tooltipTemplate ? undefined : _co.getTooltipText(_co.circle)); var currVal_6 = _co.tooltipDisabled; var currVal_7 = \"top\"; var currVal_8 = \"tooltip\"; var currVal_9 = _co.tooltipTemplate; var currVal_10 = _co.circle.data; _ck(_v, 7, 0, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_11 = _co.circle.cx; var currVal_12 = _co.circle.cy; var currVal_13 = _co.circle.radius; var currVal_14 = _co.circle.color; var currVal_15 = _co.circle.value; var currVal_16 = _co.circle.classNames; var currVal_17 = ((_co.circle.value === 0) ? \"none\" : \"all\"); _ck(_v, 8, 0, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17); }, function (_ck, _v) { var _co = _v.component; var currVal_4 = _co.isActive(_ck(_v, 9, 0, _co.circle.seriesName)); _ck(_v, 6, 0, currVal_4); }); }\nexport function View_CircleSeriesComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_CircleSeriesComponent_1)), i0.ɵdid(1, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.circle; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_CircleSeriesComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-circle-series\", \"\"]], null, null, null, View_CircleSeriesComponent_0, RenderType_CircleSeriesComponent)), i0.ɵdid(1, 638976, null, 0, i8.CircleSeriesComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CircleSeriesComponentNgFactory = i0.ɵccf(\"g[ngx-charts-circle-series]\", i8.CircleSeriesComponent, View_CircleSeriesComponent_Host_0, { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, []);\nexport { CircleSeriesComponentNgFactory as CircleSeriesComponentNgFactory };\n","\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./tooltip/tooltip.directive\";\nimport * as i3 from \"./tooltip/tooltip.service\";\nimport * as i4 from \"./tooltip-area.component\";\nvar styles_TooltipArea = [];\nvar RenderType_TooltipArea = i0.ɵcrt({ encapsulation: 2, styles: styles_TooltipArea, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \"inactive => active\", animation: [{ type: 6, styles: { opacity: 0 }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 0.7 }, offset: null }, timings: 250 }], options: null }, { type: 1, expr: \"active => inactive\", animation: [{ type: 6, styles: { opacity: 0.7 }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: 250 }], options: null }], options: {} }] } });\nexport { RenderType_TooltipArea as RenderType_TooltipArea };\nfunction View_TooltipArea_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \":xhtml:div\", [[\"class\", \"tooltip-item\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \":xhtml:span\", [[\"class\", \"tooltip-item-color\"]], [[4, \"background-color\", null]], null, null, null, null)), (_l()(), i0.ɵted(2, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit.color; _ck(_v, 1, 0, currVal_0); var currVal_1 = _co.getToolTipText(_v.context.$implicit); _ck(_v, 2, 0, currVal_1); }); }\nfunction View_TooltipArea_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \":xhtml:div\", [[\"class\", \"area-tooltip-container\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TooltipArea_2)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.model; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_TooltipArea_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { tooltipAnchor: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \":svg:g\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, \":svg:rect\", [[\"class\", \"tooltip-area\"], [\"style\", \"opacity: 0; cursor: 'auto';\"], [\"y\", \"0\"]], [[1, \"x\", 0], [1, \"width\", 0], [1, \"height\", 0]], [[null, \"mousemove\"], [null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mousemove\" === en)) {\n        var pd_0 = (_co.mouseMove($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_1 = (_co.hideTooltip() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(0, [[\"defaultTooltipTemplate\", 2]], null, 0, null, View_TooltipArea_1)), (_l()(), i0.ɵeld(4, 16777216, [[1, 0], [\"tooltipAnchor\", 1]], null, 1, \":svg:rect\", [[\"class\", \"tooltip-anchor\"], [\"ngx-tooltip\", \"\"], [\"y\", \"0\"]], [[24, \"@animationState\", 0], [1, \"x\", 0], [1, \"width\", 0], [1, \"height\", 0], [4, \"opacity\", null], [4, \"pointer-events\", null]], [[null, \"focusin\"], [null, \"blur\"], [null, \"mouseenter\"], [null, \"mouseleave\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"focusin\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 5).onFocus() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 5).onBlur() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 5).onMouseEnter() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 5).onMouseLeave($event.target) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"click\" === en)) {\n        var pd_4 = (i0.ɵnov(_v, 5).onMouseClick() !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, null, null)), i0.ɵdid(5, 147456, null, 0, i2.TooltipDirective, [i3.TooltipService, i0.ViewContainerRef, i0.Renderer2], { tooltipSpacing: [0, \"tooltipSpacing\"], tooltipDisabled: [1, \"tooltipDisabled\"], tooltipPlacement: [2, \"tooltipPlacement\"], tooltipType: [3, \"tooltipType\"], tooltipTemplate: [4, \"tooltipTemplate\"], tooltipContext: [5, \"tooltipContext\"], tooltipImmediateExit: [6, \"tooltipImmediateExit\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_9 = 15; var currVal_10 = _co.tooltipDisabled; var currVal_11 = \"right\"; var currVal_12 = \"tooltip\"; var currVal_13 = (_co.tooltipTemplate ? _co.tooltipTemplate : i0.ɵnov(_v, 3)); var currVal_14 = _co.anchorValues; var currVal_15 = true; _ck(_v, 5, 0, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = 0; var currVal_1 = _co.dims.width; var currVal_2 = _co.dims.height; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = ((_co.anchorOpacity !== 0) ? \"active\" : \"inactive\"); var currVal_4 = _co.anchorPos; var currVal_5 = 1; var currVal_6 = _co.dims.height; var currVal_7 = _co.anchorOpacity; var currVal_8 = \"none\"; _ck(_v, 4, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }); }\nexport function View_TooltipArea_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-tooltip-area\", \"\"]], null, null, null, View_TooltipArea_0, RenderType_TooltipArea)), i0.ɵdid(1, 49152, null, 0, i4.TooltipArea, [], null, null)], null, null); }\nvar TooltipAreaNgFactory = i0.ɵccf(\"g[ngx-charts-tooltip-area]\", i4.TooltipArea, View_TooltipArea_Host_0, { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, { hover: \"hover\" }, []);\nexport { TooltipAreaNgFactory as TooltipAreaNgFactory };\n","\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <xhtml:ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"> </span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </xhtml:ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'right'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./timeline.component.css.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./timeline.component\";\nvar styles_Timeline = [i0.styles];\nvar RenderType_Timeline = i1.ɵcrt({ encapsulation: 2, styles: styles_Timeline, data: {} });\nexport { RenderType_Timeline as RenderType_Timeline };\nexport function View_Timeline_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 6, \":svg:g\", [[\"class\", \"timeline\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:filter\", [], [[1, \"id\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 0, \":svg:feColorMatrix\", [[\"in\", \"SourceGraphic\"], [\"type\", \"matrix\"], [\"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 1, \":svg:g\", [[\"class\", \"embedded-chart\"]], null, null, null, null, null)), i1.ɵncd(null, 0), (_l()(), i1.ɵeld(5, 0, null, null, 0, \":svg:rect\", [[\"class\", \"brush-background\"], [\"x\", \"0\"], [\"y\", \"0\"]], [[1, \"width\", 0], [1, \"height\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 0, \":svg:g\", [[\"class\", \"brush\"]], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.transform; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.filterId; _ck(_v, 1, 0, currVal_1); var currVal_2 = _co.view[0]; var currVal_3 = _co.height; _ck(_v, 5, 0, currVal_2, currVal_3); }); }\nexport function View_Timeline_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-timeline\", \"\"]], null, null, null, View_Timeline_0, RenderType_Timeline)), i1.ɵdid(1, 573440, null, 0, i2.Timeline, [i1.ElementRef, i1.ChangeDetectorRef], null, null)], null, null); }\nvar TimelineNgFactory = i1.ɵccf(\"g[ngx-charts-timeline]\", i2.Timeline, View_Timeline_Host_0, { view: \"view\", state: \"state\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", miniChart: \"miniChart\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, { select: \"select\", onDomainChange: \"onDomainChange\" }, [\"*\"]);\nexport { TimelineNgFactory as TimelineNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".timeline .brush-background{fill:rgba(0,0,0,.05)}.timeline .brush .selection{fill:rgba(0,0,0,.1);stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n/*# sourceMappingURL=timeline.component.css.map*/\"];\nexport { styles as styles };\n","\n    <svg:g\n      class=\"timeline\"\n      [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix in=\"SourceGraphic\"\n            type=\"matrix\"\n            values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\" />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\"\n        [attr.width]=\"view[0]\"\n        y=\"0\"\n        [attr.height]=\"height\"\n        class=\"brush-background\"\n      />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"../common/base-chart.component.css.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../common/axes/x-axis.component.ngfactory\";\nimport * as i3 from \"../common/axes/x-axis.component\";\nimport * as i4 from \"../common/axes/y-axis.component.ngfactory\";\nimport * as i5 from \"../common/axes/y-axis.component\";\nimport * as i6 from \"./line-series.component.ngfactory\";\nimport * as i7 from \"./line-series.component\";\nimport * as i8 from \"../common/circle-series.component.ngfactory\";\nimport * as i9 from \"../common/circle-series.component\";\nimport * as i10 from \"../common/tooltip-area.component.ngfactory\";\nimport * as i11 from \"../common/tooltip-area.component\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"../common/timeline/timeline.component.ngfactory\";\nimport * as i14 from \"../common/timeline/timeline.component\";\nimport * as i15 from \"../common/charts/chart.component.ngfactory\";\nimport * as i16 from \"../common/tooltip/tooltip.service\";\nimport * as i17 from \"../common/tooltip/injection.service\";\nimport * as i18 from \"../common/charts/chart.component\";\nimport * as i19 from \"./line-chart.component\";\nvar styles_LineChartComponent = [i0.styles];\nvar RenderType_LineChartComponent = i1.ɵcrt({ encapsulation: 2, styles: styles_LineChartComponent, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \":leave\", animation: [{ type: 6, styles: { opacity: 1 }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: 500 }], options: null }], options: {} }] } });\nexport { RenderType_LineChartComponent as RenderType_LineChartComponent };\nfunction View_LineChartComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-x-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateXAxisHeight($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_XAxisComponent_0, i2.RenderType_XAxisComponent)), i1.ɵdid(1, 573440, null, 0, i3.XAxisComponent, [], { xScale: [0, \"xScale\"], dims: [1, \"dims\"], trimTicks: [2, \"trimTicks\"], rotateTicks: [3, \"rotateTicks\"], maxTickLength: [4, \"maxTickLength\"], tickFormatting: [5, \"tickFormatting\"], showGridLines: [6, \"showGridLines\"], showLabel: [7, \"showLabel\"], labelText: [8, \"labelText\"], ticks: [9, \"ticks\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.xScale; var currVal_1 = _co.dims; var currVal_2 = _co.trimXAxisTicks; var currVal_3 = _co.rotateXAxisTicks; var currVal_4 = _co.maxXAxisTickLength; var currVal_5 = _co.xAxisTickFormatting; var currVal_6 = _co.showGridLines; var currVal_7 = _co.showXAxisLabel; var currVal_8 = _co.xAxisLabel; var currVal_9 = _co.xAxisTicks; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }, null); }\nfunction View_LineChartComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-y-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateYAxisWidth($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_YAxisComponent_0, i4.RenderType_YAxisComponent)), i1.ɵdid(1, 573440, null, 0, i5.YAxisComponent, [], { yScale: [0, \"yScale\"], dims: [1, \"dims\"], trimTicks: [2, \"trimTicks\"], maxTickLength: [3, \"maxTickLength\"], tickFormatting: [4, \"tickFormatting\"], ticks: [5, \"ticks\"], showGridLines: [6, \"showGridLines\"], showLabel: [7, \"showLabel\"], labelText: [8, \"labelText\"], referenceLines: [9, \"referenceLines\"], showRefLines: [10, \"showRefLines\"], showRefLabels: [11, \"showRefLabels\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.yScale; var currVal_1 = _co.dims; var currVal_2 = _co.trimYAxisTicks; var currVal_3 = _co.maxYAxisTickLength; var currVal_4 = _co.yAxisTickFormatting; var currVal_5 = _co.yAxisTicks; var currVal_6 = _co.showGridLines; var currVal_7 = _co.showYAxisLabel; var currVal_8 = _co.yAxisLabel; var currVal_9 = _co.referenceLines; var currVal_10 = _co.showRefLines; var currVal_11 = _co.showRefLabels; _ck(_v, 1, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }, null); }\nfunction View_LineChartComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \":svg:g\", [], [[24, \"@animationState\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-line-series\", \"\"]], null, null, null, i6.View_LineSeriesComponent_0, i6.RenderType_LineSeriesComponent)), i1.ɵdid(2, 573440, null, 0, i7.LineSeriesComponent, [], { data: [0, \"data\"], xScale: [1, \"xScale\"], yScale: [2, \"yScale\"], colors: [3, \"colors\"], scaleType: [4, \"scaleType\"], curve: [5, \"curve\"], activeEntries: [6, \"activeEntries\"], rangeFillOpacity: [7, \"rangeFillOpacity\"], hasRange: [8, \"hasRange\"], animations: [9, \"animations\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _v.context.$implicit; var currVal_2 = _co.xScale; var currVal_3 = _co.yScale; var currVal_4 = _co.colors; var currVal_5 = _co.scaleType; var currVal_6 = _co.curve; var currVal_7 = _co.activeEntries; var currVal_8 = _co.rangeFillOpacity; var currVal_9 = _co.hasRange; var currVal_10 = _co.animations; _ck(_v, 2, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); }, function (_ck, _v) { var currVal_0 = \"active\"; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_LineChartComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \":svg:g\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-circle-series\", \"\"]], null, [[null, \"select\"], [null, \"activate\"], [null, \"deactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"select\" === en)) {\n        var pd_0 = (_co.onClick($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"activate\" === en)) {\n        var pd_1 = (_co.onActivate($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_2 = (_co.onDeactivate($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i8.View_CircleSeriesComponent_0, i8.RenderType_CircleSeriesComponent)), i1.ɵdid(2, 638976, null, 0, i9.CircleSeriesComponent, [], { data: [0, \"data\"], xScale: [1, \"xScale\"], yScale: [2, \"yScale\"], colors: [3, \"colors\"], scaleType: [4, \"scaleType\"], visibleValue: [5, \"visibleValue\"], activeEntries: [6, \"activeEntries\"], tooltipDisabled: [7, \"tooltipDisabled\"], tooltipTemplate: [8, \"tooltipTemplate\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit; var currVal_1 = _co.xScale; var currVal_2 = _co.yScale; var currVal_3 = _co.colors; var currVal_4 = _co.scaleType; var currVal_5 = _co.hoveredVertical; var currVal_6 = _co.activeEntries; var currVal_7 = _co.tooltipDisabled; var currVal_8 = _co.tooltipTemplate; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, null); }\nfunction View_LineChartComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \":svg:g\", [], null, [[null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mouseleave\" === en)) {\n        var pd_0 = (_co.hideCircles() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-tooltip-area\", \"\"]], null, [[null, \"hover\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"hover\" === en)) {\n        var pd_0 = (_co.updateHoveredVertical($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i10.View_TooltipArea_0, i10.RenderType_TooltipArea)), i1.ɵdid(2, 49152, null, 0, i11.TooltipArea, [], { dims: [0, \"dims\"], xSet: [1, \"xSet\"], xScale: [2, \"xScale\"], yScale: [3, \"yScale\"], results: [4, \"results\"], colors: [5, \"colors\"], tooltipDisabled: [6, \"tooltipDisabled\"], tooltipTemplate: [7, \"tooltipTemplate\"] }, { hover: \"hover\" }), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_LineChartComponent_5)), i1.ɵdid(4, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dims; var currVal_1 = _co.xSet; var currVal_2 = _co.xScale; var currVal_3 = _co.yScale; var currVal_4 = _co.results; var currVal_5 = _co.colors; var currVal_6 = _co.tooltipDisabled; var currVal_7 = _co.seriesTooltipTemplate; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_8 = _co.results; _ck(_v, 4, 0, currVal_8); }, null); }\nfunction View_LineChartComponent_7(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \":svg:g\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-line-series\", \"\"]], null, null, null, i6.View_LineSeriesComponent_0, i6.RenderType_LineSeriesComponent)), i1.ɵdid(2, 573440, null, 0, i7.LineSeriesComponent, [], { data: [0, \"data\"], xScale: [1, \"xScale\"], yScale: [2, \"yScale\"], colors: [3, \"colors\"], scaleType: [4, \"scaleType\"], curve: [5, \"curve\"], hasRange: [6, \"hasRange\"], animations: [7, \"animations\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit; var currVal_1 = _co.timelineXScale; var currVal_2 = _co.timelineYScale; var currVal_3 = _co.colors; var currVal_4 = _co.scaleType; var currVal_5 = _co.curve; var currVal_6 = _co.hasRange; var currVal_7 = _co.animations; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }, null); }\nfunction View_LineChartComponent_6(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \":svg:g\", [[\"ngx-charts-timeline\", \"\"]], [[1, \"transform\", 0]], [[null, \"onDomainChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"onDomainChange\" === en)) {\n        var pd_0 = (_co.updateDomain($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i13.View_Timeline_0, i13.RenderType_Timeline)), i1.ɵdid(1, 573440, null, 0, i14.Timeline, [i1.ElementRef, i1.ChangeDetectorRef], { view: [0, \"view\"], results: [1, \"results\"], scheme: [2, \"scheme\"], customColors: [3, \"customColors\"], legend: [4, \"legend\"], scaleType: [5, \"scaleType\"], height: [6, \"height\"] }, { onDomainChange: \"onDomainChange\" }), i1.ɵpad(2, 2), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_LineChartComponent_7)), i1.ɵdid(4, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _ck(_v, 2, 0, _co.timelineWidth, _co.height); var currVal_2 = _co.results; var currVal_3 = _co.scheme; var currVal_4 = _co.customColors; var currVal_5 = _co.legend; var currVal_6 = _co.scaleType; var currVal_7 = _co.timelineHeight; _ck(_v, 1, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_8 = _co.results; var currVal_9 = _co.trackBy; _ck(_v, 4, 0, currVal_8, currVal_9); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.timelineTransform; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_LineChartComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 16777216, null, null, 18, \"ngx-charts-chart\", [], null, [[null, \"legendLabelClick\"], [null, \"legendLabelActivate\"], [null, \"legendLabelDeactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"legendLabelClick\" === en)) {\n        var pd_0 = (_co.onClick($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"legendLabelActivate\" === en)) {\n        var pd_1 = (_co.onActivate($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"legendLabelDeactivate\" === en)) {\n        var pd_2 = (_co.onDeactivate($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i15.View_ChartComponent_0, i15.RenderType_ChartComponent)), i1.ɵprd(512, null, i16.TooltipService, i16.TooltipService, [i17.InjectionService]), i1.ɵdid(2, 573440, null, 0, i18.ChartComponent, [i1.ViewContainerRef, i16.TooltipService], { view: [0, \"view\"], showLegend: [1, \"showLegend\"], legendOptions: [2, \"legendOptions\"], activeEntries: [3, \"activeEntries\"], animations: [4, \"animations\"] }, { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }), i1.ɵpad(3, 2), (_l()(), i1.ɵeld(4, 0, null, 0, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 1, \":svg:clipPath\", [], [[1, \"id\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 0, \":svg:rect\", [], [[1, \"width\", 0], [1, \"height\", 0], [1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, 0, 9, \":svg:g\", [[\"class\", \"line-chart chart\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_LineChartComponent_1)), i1.ɵdid(9, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_LineChartComponent_2)), i1.ɵdid(11, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(12, 0, null, null, 4, \":svg:g\", [], [[1, \"clip-path\", 0]], null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_LineChartComponent_3)), i1.ɵdid(14, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_LineChartComponent_4)), i1.ɵdid(16, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_LineChartComponent_6)), i1.ɵdid(18, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co.width, _co.height); var currVal_1 = _co.legend; var currVal_2 = _co.legendOptions; var currVal_3 = _co.activeEntries; var currVal_4 = _co.animations; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_10 = _co.xAxis; _ck(_v, 9, 0, currVal_10); var currVal_11 = _co.yAxis; _ck(_v, 11, 0, currVal_11); var currVal_13 = _co.results; var currVal_14 = _co.trackBy; _ck(_v, 14, 0, currVal_13, currVal_14); var currVal_15 = !_co.tooltipDisabled; _ck(_v, 16, 0, currVal_15); var currVal_16 = (_co.timeline && (_co.scaleType != \"ordinal\")); _ck(_v, 18, 0, currVal_16); }, function (_ck, _v) { var _co = _v.component; var currVal_5 = _co.clipPathId; _ck(_v, 5, 0, currVal_5); var currVal_6 = (_co.dims.width + 10); var currVal_7 = (_co.dims.height + 10); var currVal_8 = \"translate(-5, -5)\"; _ck(_v, 6, 0, currVal_6, currVal_7, currVal_8); var currVal_9 = _co.transform; _ck(_v, 7, 0, currVal_9); var currVal_12 = _co.clipPath; _ck(_v, 12, 0, currVal_12); }); }\nexport function View_LineChartComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"ngx-charts-line-chart\", [], null, [[null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; if ((\"mouseleave\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).hideCircles() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_LineChartComponent_0, RenderType_LineChartComponent)), i1.ɵdid(1, 4898816, null, 2, i19.LineChartComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], null, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵqud(603979776, 2, { seriesTooltipTemplate: 0 })], null, null); }\nvar LineChartComponentNgFactory = i1.ɵccf(\"ngx-charts-line-chart\", i19.LineChartComponent, View_LineChartComponent_Host_0, { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, []);\nexport { LineChartComponentNgFactory as LineChartComponentNgFactory };\n","\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-line-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [hasRange]=\"hasRange\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  ","import { Component, OnInit, ChangeDetectionStrategy, Input, Host } from '@angular/core';\r\nimport { SAViewType } from '@other/interfaces';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { ToolsService } from '@services/tools.service';\r\nimport { SystemScrollerComponent } from '@components/system/system-scroller/system-scroller.component';\r\nimport { ConfigService } from '@services/config.service';\r\nimport dayjs from 'dayjs';\r\n\r\n@Component({\r\n  selector: 'cism-system-availability-chart',\r\n  templateUrl: './system-availability-chart.component.html',\r\n  styleUrls: ['./system-availability-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemAvailabilityChartComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _tools: ToolsService,\r\n    private _config: ConfigService,\r\n    @Host() private _scroller: SystemScrollerComponent \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let newData = []\r\n    switch (this.type) {\r\n      case \"daily\":\r\n        newData = this.data.map(row => {\r\n          return {\r\n            name: dayjs(row[1], this._config.config.system.S2.formatDate).format('DD/MM/YYYY'),\r\n            value: Math.round(row[2] * 100) / 100\r\n          }\r\n        })\r\n        // this.translate.next(true)\r\n        // this.xAxisLabels.next(this.getLabelsFor('weeks'))\r\n        break\r\n      case \"weekly\":\r\n      case \"monthly\":\r\n        let formatToBeUnique = this.type == 'weekly' ? 'YYYYw' : 'YYYYMM'\r\n        let formatDate = this.type == 'weekly' ? this._config.config.system.S2.formatDate : 'DD/MM/YYYY'\r\n        // let labels: any = this.type == 'weekly' ? 'weeks' : 'months'\r\n        const grouped_data = this.data.reduce((r, a) => {\r\n          const formattedDate = dayjs(a[1], this._config.config.system.S2.formatDate).format(formatToBeUnique)\r\n          r[formattedDate] = r[formattedDate] || []\r\n          r[formattedDate].push(a)\r\n          return r\r\n        }, {})\r\n        newData = Object.keys(grouped_data).map(prop => {\r\n          return {\r\n            name: this.type == 'weekly' ? dayjs(prop.substr(0, 4), 'YYYY').week(+prop.substr(4, 2)).startOf('week').format(formatDate) : dayjs(prop, formatToBeUnique).format(formatDate),\r\n            value: this._tools.averageByIndex(grouped_data[prop], 2, true),\r\n            min: this._tools.getMin(grouped_data[prop], 2, true),\r\n            max: this._tools.getMax(grouped_data[prop], 2, true)\r\n          }\r\n        })\r\n        // this.xAxisLabels.next(this.getLabelsFor(labels))\r\n        // this.translate.next(false)\r\n        break\r\n      default:\r\n    }\r\n    if (newData.length > this._config.config.system.unitsPast) {\r\n      newData = newData.slice(Math.max(newData.length - this._config.config.system.unitsPast, 1))\r\n    }\r\n    let minValue = Math.round(this._tools.getMin(this.data, 2))\r\n    if (minValue > 5) minValue -= 5\r\n    this.minScale.next(minValue)\r\n    this.yAxisTicks.next([minValue, 100])\r\n    this._scroller.bars.next(newData.length)\r\n    this.chartData.next([\r\n      {\r\n        name: \"System Availability\",\r\n        series: newData\r\n      }\r\n    ])\r\n  }\r\n\r\n  minScale = new BehaviorSubject<number>(0)\r\n  yAxisTicks = new BehaviorSubject<number[]>([])\r\n\r\n  // xAxisLabels = new BehaviorSubject<Date[]>([])\r\n\r\n  // translate = new BehaviorSubject<boolean>(false)\r\n  chartData = new BehaviorSubject<Object[]>([])\r\n\r\n  @Input() data: any[] = []\r\n  @Input() type: SAViewType\r\n\r\n  colorScheme = {\r\n    domain: ['#00bcd4']\r\n  }\r\n\r\n  yAxisFormatting = val => {\r\n    switch (this.type) {\r\n      case \"daily\":\r\n        return `${val} %`\r\n      case \"monthly\":\r\n        return `AVG ${val} %`\r\n      case \"weekly\":\r\n        return `AVG ${val} %`\r\n    }\r\n  }\r\n  xAxisFormatting = val => {\r\n    const parsed = dayjs(val, this._config.config.system.S2.formatDate)\r\n    switch (this.type) {\r\n      case \"daily\":\r\n        return val\r\n      case \"monthly\":\r\n        return parsed.locale('de').format('MMM YYYY')\r\n      case \"weekly\":\r\n        return parsed.locale('de').format('DD/MM/YYYY')\r\n    }\r\n  }\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-availability-chart.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@swimlane/ngx-charts/release/line-chart/line-chart.component.ngfactory\";\nimport * as i3 from \"@swimlane/ngx-charts/release/line-chart/line-chart.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./system-availability-chart.component\";\nimport * as i6 from \"../../../services/tools.service\";\nimport * as i7 from \"../../../services/config.service\";\nimport * as i8 from \"../system-scroller/system-scroller.component\";\nvar styles_SystemAvailabilityChartComponent = [i0.styles];\nvar RenderType_SystemAvailabilityChartComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemAvailabilityChartComponent, data: {} });\nexport { RenderType_SystemAvailabilityChartComponent as RenderType_SystemAvailabilityChartComponent };\nexport function View_SystemAvailabilityChartComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 6, \"ngx-charts-line-chart\", [], null, [[null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; if ((\"mouseleave\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).hideCircles() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_LineChartComponent_0, i2.RenderType_LineChartComponent)), i1.ɵdid(1, 4898816, null, 2, i3.LineChartComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], { results: [0, \"results\"], scheme: [1, \"scheme\"], schemeType: [2, \"schemeType\"], legend: [3, \"legend\"], xAxis: [4, \"xAxis\"], yAxis: [5, \"yAxis\"], showXAxisLabel: [6, \"showXAxisLabel\"], showYAxisLabel: [7, \"showYAxisLabel\"], gradient: [8, \"gradient\"], showGridLines: [9, \"showGridLines\"], xAxisTickFormatting: [10, \"xAxisTickFormatting\"], yAxisTickFormatting: [11, \"yAxisTickFormatting\"], yAxisTicks: [12, \"yAxisTicks\"], yScaleMin: [13, \"yScaleMin\"] }, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵqud(603979776, 2, { seriesTooltipTemplate: 0 }), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 1, 0, i1.ɵnov(_v, 4).transform(_co.chartData)); var currVal_1 = _co.colorScheme; var currVal_2 = \"ordinal\"; var currVal_3 = false; var currVal_4 = true; var currVal_5 = true; var currVal_6 = false; var currVal_7 = false; var currVal_8 = true; var currVal_9 = false; var currVal_10 = _co.xAxisFormatting; var currVal_11 = _co.yAxisFormatting; var currVal_12 = i1.ɵunv(_v, 1, 12, i1.ɵnov(_v, 5).transform(_co.yAxisTicks)); var currVal_13 = i1.ɵunv(_v, 1, 13, i1.ɵnov(_v, 6).transform(_co.minScale)); _ck(_v, 1, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13]); }, null); }\nexport function View_SystemAvailabilityChartComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-availability-chart\", [], null, null, null, View_SystemAvailabilityChartComponent_0, RenderType_SystemAvailabilityChartComponent)), i1.ɵdid(1, 114688, null, 0, i5.SystemAvailabilityChartComponent, [i6.ToolsService, i7.ConfigService, i8.SystemScrollerComponent], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SystemAvailabilityChartComponentNgFactory = i1.ɵccf(\"cism-system-availability-chart\", i5.SystemAvailabilityChartComponent, View_SystemAvailabilityChartComponent_Host_0, { data: \"data\", type: \"type\" }, {}, []);\nexport { SystemAvailabilityChartComponentNgFactory as SystemAvailabilityChartComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block;height:225px;padding-top:5px;box-sizing:border-box}[_nghost-%COMP%]  .ngx-charts .line-highlight{display:block!important}[_nghost-%COMP%]  .ngx-charts .tick text{fill:rgba(255,255,255,.5)!important}\"];\nexport { styles as styles };\n","<ngx-charts-line-chart\r\n    [results]=\"chartData | async\"\r\n    [gradient]=\"true\"\r\n    [xAxis]=\"true\"\r\n    [yAxis]=\"true\"\r\n    [legend]=\"false\"\r\n    [schemeType]=\"'ordinal'\"\r\n    [showGridLines]=\"false\"\r\n    [showXAxisLabel]=\"false\"\r\n    [showYAxisLabel]=\"false\"\r\n    [yAxisTicks]=\"yAxisTicks | async\"\r\n    [yScaleMin]=\"minScale | async\"\r\n    [yAxisTickFormatting]=\"yAxisFormatting\"\r\n    [xAxisTickFormatting]=\"xAxisFormatting\"\r\n    [scheme]=\"colorScheme\">\r\n</ngx-charts-line-chart>","import { Component, OnInit, ChangeDetectionStrategy, Host } from '@angular/core';\r\nimport { DataService } from '@services/data.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { SAPercents, SAViewType } from '@other/interfaces';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { ToolsService } from '@services/tools.service';\r\nimport dayjs from 'dayjs';\r\n\r\n@Component({\r\n  selector: 'cism-system-availability',\r\n  templateUrl: './system-availability.component.html',\r\n  styleUrls: ['./system-availability.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemAvailabilityComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _data: DataService,\r\n    private _config: ConfigService,\r\n    private _tools: ToolsService,\r\n    @Host() private _holder: SystemGraphicHolderComponent\r\n  ) {\r\n    this._holder.titles.next([this._config.config.system.titles.S1])\r\n  }\r\n  \r\n  percents = new BehaviorSubject<SAPercents>(null)\r\n\r\n  SystemAvailabilityRows = new BehaviorSubject<any[]>([])\r\n\r\n  view = new BehaviorSubject<SAViewType>('overview')\r\n\r\n  ngOnInit() {\r\n    // Run WebWorker\r\n    const t0 = performance.now()\r\n    // Filter system rows with System Availability section\r\n    const SARows = this._data.system.filter(row => row[0] == 'S1')\r\n    // Extract today's %\r\n    let today = 0\r\n    try {\r\n      const date = dayjs().format(this._config.config.system.S1.formatDate)\r\n      today = this._tools.formatPercent(SARows.filter(row => row[1] == date)[0][2])\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for today')\r\n      console.error(err)\r\n    }\r\n    // Extract previous day %\r\n    let yesterday = 0\r\n    try {\r\n      const date = dayjs().subtract(1, 'day').format(this._config.config.system.S1.formatDate)\r\n      yesterday = this._tools.formatPercent(SARows.filter(row => row[1] == date)[0][2])\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for yesterday')\r\n      console.error(err)\r\n    }\r\n    // Extract previous week %\r\n    let prev_week = 0\r\n    try {\r\n      const week = dayjs().subtract(1, 'week').week()\r\n      const rows = SARows.filter(row => dayjs(row[1], this._config.config.system.S1.formatDate).week() == week)\r\n      const sum = rows.map(r => r[2]).reduce((r, a) => r + a, 0)\r\n      prev_week = this._tools.formatPercent(sum / rows.length)\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for previous week')\r\n      console.error(err)\r\n    }\r\n    // Extract current week %\r\n    let act_week = 0\r\n    try {\r\n      const week = dayjs().week()\r\n      // @ts-ignore\r\n      const rows = SARows.filter(row => dayjs(row[1], this._config.config.system.S1.formatDate).week() == week)\r\n      const sum = rows.map(r => r[2]).reduce((r, a) => r + a, 0)\r\n      act_week = this._tools.formatPercent(sum / rows.length)\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for actual week')\r\n      console.error(err)\r\n    }\r\n    // Extract previous month %\r\n    let prev_month = 0\r\n    try {\r\n      const month = dayjs().subtract(1, 'month').month()\r\n      // @ts-ignore\r\n      const rows = SARows.filter(row => dayjs(row[1], this._config.config.system.S1.formatDate).month() == month)\r\n      const sum = rows.map(r => r[2]).reduce((r, a) => r + a, 0)\r\n      prev_month = this._tools.formatPercent(sum / rows.length)\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for previous month')\r\n      console.error(err)\r\n    }\r\n    // Extract current month %\r\n    let act_month = 0\r\n    try {\r\n      const month = dayjs().month()\r\n      // @ts-ignore\r\n      const rows = SARows.filter(row => dayjs(row[1], this._config.config.system.S1.formatDate).month() == month)\r\n      const sum = rows.map(r => r[2]).reduce((r, a) => r + a, 0)\r\n      act_month = this._tools.formatPercent(sum / rows.length)\r\n    } catch (err) {\r\n      console.log('System Availability', 'Processing', 'Percent not found for actual month')\r\n      console.error(err)\r\n    }\r\n    // Return obtained stats\r\n    const result = {\r\n      rows: SARows,\r\n      today: today,\r\n      yesterday: yesterday,\r\n      prev_week: prev_week,\r\n      prev_month: prev_month,\r\n      yesterday_up: today > yesterday ? 'up' : 'down',\r\n      week_up: act_week > prev_week ? 'up' : 'down',\r\n      month_up: act_month > prev_month ? 'up' : 'down'\r\n    }\r\n    // Render DOM\r\n    const t1 = performance.now()\r\n    console.log(\"S1 Chart WebWorker took:\", (t1 - t0)+'ms')\r\n    this.percents.next(result)\r\n    this.SystemAvailabilityRows.next(result.rows)\r\n  }\r\n\r\n}","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-availability.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../system-scroller/system-scroller.component.ngfactory\";\nimport * as i3 from \"../system-scroller/system-scroller.component\";\nimport * as i4 from \"../system-availability-chart/system-availability-chart.component.ngfactory\";\nimport * as i5 from \"../system-availability-chart/system-availability-chart.component\";\nimport * as i6 from \"../../../services/tools.service\";\nimport * as i7 from \"../../../services/config.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/cdk/overlay\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nimport * as i12 from \"@angular/cdk/platform\";\nimport * as i13 from \"@angular/cdk/a11y\";\nimport * as i14 from \"@angular/cdk/bidi\";\nimport * as i15 from \"@angular/platform-browser\";\nimport * as i16 from \"../../../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i17 from \"@angular/material/form-field\";\nimport * as i18 from \"@angular/material/core\";\nimport * as i19 from \"@angular/platform-browser/animations\";\nimport * as i20 from \"../../../../../node_modules/@angular/material/select/typings/index.ngfactory\";\nimport * as i21 from \"@angular/material/select\";\nimport * as i22 from \"@angular/forms\";\nimport * as i23 from \"../../../../../node_modules/@angular/material/core/typings/index.ngfactory\";\nimport * as i24 from \"./system-availability.component\";\nimport * as i25 from \"../../../services/data.service\";\nimport * as i26 from \"../system-graphic-holder/system-graphic-holder.component\";\nvar styles_SystemAvailabilityComponent = [i0.styles];\nvar RenderType_SystemAvailabilityComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemAvailabilityComponent, data: {} });\nexport { RenderType_SystemAvailabilityComponent as RenderType_SystemAvailabilityComponent };\nfunction View_SystemAvailabilityComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_SystemScrollerComponent_0, i2.RenderType_SystemScrollerComponent)), i1.ɵdid(1, 114688, null, 0, i3.SystemScrollerComponent, [i1.ElementRef], null, null), (_l()(), i1.ɵeld(2, 0, null, 0, 2, \"cism-system-availability-chart\", [[\"type\", \"daily\"]], null, null, null, i4.View_SystemAvailabilityChartComponent_0, i4.RenderType_SystemAvailabilityChartComponent)), i1.ɵdid(3, 114688, null, 0, i5.SystemAvailabilityChartComponent, [i6.ToolsService, i7.ConfigService, i3.SystemScrollerComponent], { data: [0, \"data\"], type: [1, \"type\"] }, null), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; _ck(_v, 1, 0); var currVal_0 = i1.ɵunv(_v, 3, 0, i1.ɵnov(_v, 4).transform(_co.SystemAvailabilityRows)); var currVal_1 = \"daily\"; _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }\nfunction View_SystemAvailabilityComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_SystemScrollerComponent_0, i2.RenderType_SystemScrollerComponent)), i1.ɵdid(1, 114688, null, 0, i3.SystemScrollerComponent, [i1.ElementRef], null, null), (_l()(), i1.ɵeld(2, 0, null, 0, 2, \"cism-system-availability-chart\", [[\"type\", \"weekly\"]], null, null, null, i4.View_SystemAvailabilityChartComponent_0, i4.RenderType_SystemAvailabilityChartComponent)), i1.ɵdid(3, 114688, null, 0, i5.SystemAvailabilityChartComponent, [i6.ToolsService, i7.ConfigService, i3.SystemScrollerComponent], { data: [0, \"data\"], type: [1, \"type\"] }, null), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; _ck(_v, 1, 0); var currVal_0 = i1.ɵunv(_v, 3, 0, i1.ɵnov(_v, 4).transform(_co.SystemAvailabilityRows)); var currVal_1 = \"weekly\"; _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }\nfunction View_SystemAvailabilityComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_SystemScrollerComponent_0, i2.RenderType_SystemScrollerComponent)), i1.ɵdid(1, 114688, null, 0, i3.SystemScrollerComponent, [i1.ElementRef], null, null), (_l()(), i1.ɵeld(2, 0, null, 0, 2, \"cism-system-availability-chart\", [[\"type\", \"monthly\"]], null, null, null, i4.View_SystemAvailabilityChartComponent_0, i4.RenderType_SystemAvailabilityChartComponent)), i1.ɵdid(3, 114688, null, 0, i5.SystemAvailabilityChartComponent, [i6.ToolsService, i7.ConfigService, i3.SystemScrollerComponent], { data: [0, \"data\"], type: [1, \"type\"] }, null), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; _ck(_v, 1, 0); var currVal_0 = i1.ɵunv(_v, 3, 0, i1.ɵnov(_v, 4).transform(_co.SystemAvailabilityRows)); var currVal_1 = \"monthly\"; _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }\nfunction View_SystemAvailabilityComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 47, \"div\", [[\"class\", \"overview-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"semaphore\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 0, \"div\", [[\"class\", \"status bad\"]], [[2, \"active\", null]], null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 0, \"div\", [[\"class\", \"status medium\"]], [[2, \"active\", null]], null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"div\", [[\"class\", \"status good\"]], [[2, \"active\", null]], null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 42, \"div\", [[\"class\", \"chart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 4, \"div\", [[\"class\", \"today\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 1, \"div\", [[\"class\", \"header\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Today\"])), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"div\", [[\"class\", \"percent\"]], null, null, null, null, null)), (_l()(), i1.ɵted(10, null, [\"\", \" %\"])), (_l()(), i1.ɵeld(11, 0, null, null, 36, \"div\", [[\"class\", \"rest\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 16777216, null, null, 11, \"div\", [[\"class\", \"unit\"], [\"matTooltip\", \"View details\"], [\"matTooltipPosition\", \"below\"]], null, [[null, \"click\"], [null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 13).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 13)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 13)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"click\" === en)) {\n        var pd_3 = (_co.view.next(\"daily\") !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(13, 212992, null, 0, i9.MatTooltip, [i10.Overlay, i1.ElementRef, i11.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i12.Platform, i13.AriaDescriber, i13.FocusMonitor, i9.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i14.Directionality], [2, i9.MAT_TOOLTIP_DEFAULT_OPTIONS], [2, i15.HAMMER_LOADER]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-portrait-up\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Prev. Day\"])), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-mobile\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Pr. Day\"])), (_l()(), i1.ɵeld(18, 0, null, null, 1, \"div\", [[\"class\", \"percent\"]], null, null, null, null, null)), (_l()(), i1.ɵted(19, null, [\"\", \" %\"])), (_l()(), i1.ɵeld(20, 0, null, null, 3, \"div\", [[\"class\", \"difference\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(21, 0, null, null, 2, \"div\", [[\"class\", \"difference-sign\"]], null, null, null, null, null)), i1.ɵprd(512, null, i8.ɵNgClassImpl, i8.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(23, 278528, null, 0, i8.NgClass, [i8.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i1.ɵeld(24, 16777216, null, null, 11, \"div\", [[\"class\", \"unit\"], [\"matTooltip\", \"View details\"], [\"matTooltipPosition\", \"below\"]], null, [[null, \"click\"], [null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 25).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 25)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 25)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"click\" === en)) {\n        var pd_3 = (_co.view.next(\"weekly\") !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(25, 212992, null, 0, i9.MatTooltip, [i10.Overlay, i1.ElementRef, i11.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i12.Platform, i13.AriaDescriber, i13.FocusMonitor, i9.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i14.Directionality], [2, i9.MAT_TOOLTIP_DEFAULT_OPTIONS], [2, i15.HAMMER_LOADER]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(26, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-portrait-up\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Prev. Week\"])), (_l()(), i1.ɵeld(28, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-mobile\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Pr. Week\"])), (_l()(), i1.ɵeld(30, 0, null, null, 1, \"div\", [[\"class\", \"percent\"]], null, null, null, null, null)), (_l()(), i1.ɵted(31, null, [\"\", \" %\"])), (_l()(), i1.ɵeld(32, 0, null, null, 3, \"div\", [[\"class\", \"difference\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(33, 0, null, null, 2, \"div\", [[\"class\", \"difference-sign\"]], null, null, null, null, null)), i1.ɵprd(512, null, i8.ɵNgClassImpl, i8.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(35, 278528, null, 0, i8.NgClass, [i8.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i1.ɵeld(36, 16777216, null, null, 11, \"div\", [[\"class\", \"unit\"], [\"matTooltip\", \"View details\"], [\"matTooltipPosition\", \"below\"]], null, [[null, \"click\"], [null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 37).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 37)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 37)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"click\" === en)) {\n        var pd_3 = (_co.view.next(\"monthly\") !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(37, 212992, null, 0, i9.MatTooltip, [i10.Overlay, i1.ElementRef, i11.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i12.Platform, i13.AriaDescriber, i13.FocusMonitor, i9.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i14.Directionality], [2, i9.MAT_TOOLTIP_DEFAULT_OPTIONS], [2, i15.HAMMER_LOADER]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(38, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-portrait-up\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Prev. Month\"])), (_l()(), i1.ɵeld(40, 0, null, null, 1, \"div\", [[\"class\", \"header show-on-mobile\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Pr. Month\"])), (_l()(), i1.ɵeld(42, 0, null, null, 1, \"div\", [[\"class\", \"percent\"]], null, null, null, null, null)), (_l()(), i1.ɵted(43, null, [\"\", \" %\"])), (_l()(), i1.ɵeld(44, 0, null, null, 3, \"div\", [[\"class\", \"difference\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(45, 0, null, null, 2, \"div\", [[\"class\", \"difference-sign\"]], null, null, null, null, null)), i1.ɵprd(512, null, i8.ɵNgClassImpl, i8.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(47, 278528, null, 0, i8.NgClass, [i8.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null)], function (_ck, _v) { var currVal_4 = \"below\"; var currVal_5 = \"View details\"; _ck(_v, 13, 0, currVal_4, currVal_5); var currVal_7 = \"difference-sign\"; var currVal_8 = _v.context.ngIf.yesterday_up; _ck(_v, 23, 0, currVal_7, currVal_8); var currVal_9 = \"below\"; var currVal_10 = \"View details\"; _ck(_v, 25, 0, currVal_9, currVal_10); var currVal_12 = \"difference-sign\"; var currVal_13 = _v.context.ngIf.week_up; _ck(_v, 35, 0, currVal_12, currVal_13); var currVal_14 = \"below\"; var currVal_15 = \"View details\"; _ck(_v, 37, 0, currVal_14, currVal_15); var currVal_17 = \"difference-sign\"; var currVal_18 = _v.context.ngIf.month_up; _ck(_v, 47, 0, currVal_17, currVal_18); }, function (_ck, _v) { var currVal_0 = (_v.context.ngIf.today < 98); _ck(_v, 2, 0, currVal_0); var currVal_1 = ((_v.context.ngIf.today > 98) && (_v.context.ngIf.today < 99)); _ck(_v, 3, 0, currVal_1); var currVal_2 = (_v.context.ngIf.today > 99); _ck(_v, 4, 0, currVal_2); var currVal_3 = _v.context.ngIf.today; _ck(_v, 10, 0, currVal_3); var currVal_6 = _v.context.ngIf.yesterday; _ck(_v, 19, 0, currVal_6); var currVal_11 = _v.context.ngIf.prev_week; _ck(_v, 31, 0, currVal_11); var currVal_16 = _v.context.ngIf.prev_month; _ck(_v, 43, 0, currVal_16); }); }\nfunction View_SystemAvailabilityComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 2, null, View_SystemAvailabilityComponent_5)), i1.ɵdid(2, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 2, 0, i1.ɵnov(_v, 3).transform(_co.percents)); _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_SystemAvailabilityComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 30, \"mat-form-field\", [[\"appearance\", \"outline\"], [\"class\", \"view-selector mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-has-label\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i16.View_MatFormField_0, i16.RenderType_MatFormField)), i1.ɵdid(1, 7520256, null, 9, i17.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i18.MAT_LABEL_GLOBAL_OPTIONS], [2, i14.Directionality], [2, i17.MAT_FORM_FIELD_DEFAULT_OPTIONS], i12.Platform, i1.NgZone, [2, i19.ANIMATION_MODULE_TYPE]], { appearance: [0, \"appearance\"] }, null), i1.ɵqud(603979776, 1, { _controlNonStatic: 0 }), i1.ɵqud(335544320, 2, { _controlStatic: 0 }), i1.ɵqud(603979776, 3, { _labelChildNonStatic: 0 }), i1.ɵqud(335544320, 4, { _labelChildStatic: 0 }), i1.ɵqud(603979776, 5, { _placeholderChild: 0 }), i1.ɵqud(603979776, 6, { _errorChildren: 1 }), i1.ɵqud(603979776, 7, { _hintChildren: 1 }), i1.ɵqud(603979776, 8, { _prefixChildren: 1 }), i1.ɵqud(603979776, 9, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(11, 0, null, 1, 19, \"mat-select\", [[\"class\", \"mat-select\"], [\"role\", \"listbox\"]], [[1, \"id\", 0], [1, \"tabindex\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [1, \"aria-required\", 0], [1, \"aria-disabled\", 0], [1, \"aria-invalid\", 0], [1, \"aria-owns\", 0], [1, \"aria-multiselectable\", 0], [1, \"aria-describedby\", 0], [1, \"aria-activedescendant\", 0], [2, \"mat-select-disabled\", null], [2, \"mat-select-invalid\", null], [2, \"mat-select-required\", null], [2, \"mat-select-empty\", null]], [[null, \"selectionChange\"], [null, \"keydown\"], [null, \"focus\"], [null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 12)._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 12)._onFocus() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 12)._onBlur() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"selectionChange\" === en)) {\n        var pd_3 = (_co.view.next($event.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, i20.View_MatSelect_0, i20.RenderType_MatSelect)), i1.ɵdid(12, 2080768, null, 3, i21.MatSelect, [i11.ViewportRuler, i1.ChangeDetectorRef, i1.NgZone, i18.ErrorStateMatcher, i1.ElementRef, [2, i14.Directionality], [2, i22.NgForm], [2, i22.FormGroupDirective], [2, i17.MatFormField], [8, null], [8, null], i21.MAT_SELECT_SCROLL_STRATEGY, i13.LiveAnnouncer], { value: [0, \"value\"] }, { selectionChange: \"selectionChange\" }), i1.ɵqud(603979776, 10, { options: 1 }), i1.ɵqud(603979776, 11, { optionGroups: 1 }), i1.ɵqud(603979776, 12, { customTrigger: 0 }), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵprd(2048, [[1, 4], [2, 4]], i17.MatFormFieldControl, null, [i21.MatSelect]), i1.ɵprd(2048, null, i18.MAT_OPTION_PARENT_COMPONENT, null, [i21.MatSelect]), (_l()(), i1.ɵeld(19, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"selected\", \"\"], [\"value\", \"overview\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 20)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 20)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i23.View_MatOption_0, i23.RenderType_MatOption)), i1.ɵdid(20, 8568832, [[10, 4]], 0, i18.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i18.MAT_OPTION_PARENT_COMPONENT], [2, i18.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Overview\"])), (_l()(), i1.ɵeld(22, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"value\", \"daily\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 23)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 23)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i23.View_MatOption_0, i23.RenderType_MatOption)), i1.ɵdid(23, 8568832, [[10, 4]], 0, i18.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i18.MAT_OPTION_PARENT_COMPONENT], [2, i18.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Daily\"])), (_l()(), i1.ɵeld(25, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"value\", \"weekly\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 26)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 26)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i23.View_MatOption_0, i23.RenderType_MatOption)), i1.ɵdid(26, 8568832, [[10, 4]], 0, i18.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i18.MAT_OPTION_PARENT_COMPONENT], [2, i18.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Weekly\"])), (_l()(), i1.ɵeld(28, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"value\", \"monthly\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 29)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 29)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i23.View_MatOption_0, i23.RenderType_MatOption)), i1.ɵdid(29, 8568832, [[10, 4]], 0, i18.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i18.MAT_OPTION_PARENT_COMPONENT], [2, i18.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Monthly\"])), (_l()(), i1.ɵeld(31, 0, null, null, 10, null, null, null, null, null, null, null)), i1.ɵdid(32, 16384, null, 0, i8.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), i1.ɵpid(131072, i8.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemAvailabilityComponent_1)), i1.ɵdid(35, 278528, null, 0, i8.NgSwitchCase, [i1.ViewContainerRef, i1.TemplateRef, i8.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemAvailabilityComponent_2)), i1.ɵdid(37, 278528, null, 0, i8.NgSwitchCase, [i1.ViewContainerRef, i1.TemplateRef, i8.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemAvailabilityComponent_3)), i1.ɵdid(39, 278528, null, 0, i8.NgSwitchCase, [i1.ViewContainerRef, i1.TemplateRef, i8.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemAvailabilityComponent_4)), i1.ɵdid(41, 16384, null, 0, i8.NgSwitchDefault, [i1.ViewContainerRef, i1.TemplateRef, i8.NgSwitch], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_22 = \"outline\"; _ck(_v, 1, 0, currVal_22); var currVal_38 = i1.ɵunv(_v, 12, 0, i1.ɵnov(_v, 16).transform(_co.view)); _ck(_v, 12, 0, currVal_38); var currVal_47 = \"overview\"; _ck(_v, 20, 0, currVal_47); var currVal_56 = \"daily\"; _ck(_v, 23, 0, currVal_56); var currVal_65 = \"weekly\"; _ck(_v, 26, 0, currVal_65); var currVal_74 = \"monthly\"; _ck(_v, 29, 0, currVal_74); var currVal_75 = i1.ɵunv(_v, 32, 0, i1.ɵnov(_v, 33).transform(_co.view)); _ck(_v, 32, 0, currVal_75); var currVal_76 = \"daily\"; _ck(_v, 35, 0, currVal_76); var currVal_77 = \"weekly\"; _ck(_v, 37, 0, currVal_77); var currVal_78 = \"monthly\"; _ck(_v, 39, 0, currVal_78); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 1).appearance == \"standard\"); var currVal_1 = (i1.ɵnov(_v, 1).appearance == \"fill\"); var currVal_2 = (i1.ɵnov(_v, 1).appearance == \"outline\"); var currVal_3 = (i1.ɵnov(_v, 1).appearance == \"legacy\"); var currVal_4 = i1.ɵnov(_v, 1)._control.errorState; var currVal_5 = i1.ɵnov(_v, 1)._canLabelFloat; var currVal_6 = i1.ɵnov(_v, 1)._shouldLabelFloat(); var currVal_7 = i1.ɵnov(_v, 1)._hasFloatingLabel(); var currVal_8 = i1.ɵnov(_v, 1)._hideControlPlaceholder(); var currVal_9 = i1.ɵnov(_v, 1)._control.disabled; var currVal_10 = i1.ɵnov(_v, 1)._control.autofilled; var currVal_11 = i1.ɵnov(_v, 1)._control.focused; var currVal_12 = (i1.ɵnov(_v, 1).color == \"accent\"); var currVal_13 = (i1.ɵnov(_v, 1).color == \"warn\"); var currVal_14 = i1.ɵnov(_v, 1)._shouldForward(\"untouched\"); var currVal_15 = i1.ɵnov(_v, 1)._shouldForward(\"touched\"); var currVal_16 = i1.ɵnov(_v, 1)._shouldForward(\"pristine\"); var currVal_17 = i1.ɵnov(_v, 1)._shouldForward(\"dirty\"); var currVal_18 = i1.ɵnov(_v, 1)._shouldForward(\"valid\"); var currVal_19 = i1.ɵnov(_v, 1)._shouldForward(\"invalid\"); var currVal_20 = i1.ɵnov(_v, 1)._shouldForward(\"pending\"); var currVal_21 = !i1.ɵnov(_v, 1)._animationsEnabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21]); var currVal_23 = i1.ɵnov(_v, 12).id; var currVal_24 = i1.ɵnov(_v, 12).tabIndex; var currVal_25 = i1.ɵnov(_v, 12)._getAriaLabel(); var currVal_26 = i1.ɵnov(_v, 12)._getAriaLabelledby(); var currVal_27 = i1.ɵnov(_v, 12).required.toString(); var currVal_28 = i1.ɵnov(_v, 12).disabled.toString(); var currVal_29 = i1.ɵnov(_v, 12).errorState; var currVal_30 = (i1.ɵnov(_v, 12).panelOpen ? i1.ɵnov(_v, 12)._optionIds : null); var currVal_31 = i1.ɵnov(_v, 12).multiple; var currVal_32 = (i1.ɵnov(_v, 12)._ariaDescribedby || null); var currVal_33 = i1.ɵnov(_v, 12)._getAriaActiveDescendant(); var currVal_34 = i1.ɵnov(_v, 12).disabled; var currVal_35 = i1.ɵnov(_v, 12).errorState; var currVal_36 = i1.ɵnov(_v, 12).required; var currVal_37 = i1.ɵnov(_v, 12).empty; _ck(_v, 11, 1, [currVal_23, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37]); var currVal_39 = i1.ɵnov(_v, 20)._getTabIndex(); var currVal_40 = i1.ɵnov(_v, 20).selected; var currVal_41 = i1.ɵnov(_v, 20).multiple; var currVal_42 = i1.ɵnov(_v, 20).active; var currVal_43 = i1.ɵnov(_v, 20).id; var currVal_44 = i1.ɵnov(_v, 20)._getAriaSelected(); var currVal_45 = i1.ɵnov(_v, 20).disabled.toString(); var currVal_46 = i1.ɵnov(_v, 20).disabled; _ck(_v, 19, 0, currVal_39, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46); var currVal_48 = i1.ɵnov(_v, 23)._getTabIndex(); var currVal_49 = i1.ɵnov(_v, 23).selected; var currVal_50 = i1.ɵnov(_v, 23).multiple; var currVal_51 = i1.ɵnov(_v, 23).active; var currVal_52 = i1.ɵnov(_v, 23).id; var currVal_53 = i1.ɵnov(_v, 23)._getAriaSelected(); var currVal_54 = i1.ɵnov(_v, 23).disabled.toString(); var currVal_55 = i1.ɵnov(_v, 23).disabled; _ck(_v, 22, 0, currVal_48, currVal_49, currVal_50, currVal_51, currVal_52, currVal_53, currVal_54, currVal_55); var currVal_57 = i1.ɵnov(_v, 26)._getTabIndex(); var currVal_58 = i1.ɵnov(_v, 26).selected; var currVal_59 = i1.ɵnov(_v, 26).multiple; var currVal_60 = i1.ɵnov(_v, 26).active; var currVal_61 = i1.ɵnov(_v, 26).id; var currVal_62 = i1.ɵnov(_v, 26)._getAriaSelected(); var currVal_63 = i1.ɵnov(_v, 26).disabled.toString(); var currVal_64 = i1.ɵnov(_v, 26).disabled; _ck(_v, 25, 0, currVal_57, currVal_58, currVal_59, currVal_60, currVal_61, currVal_62, currVal_63, currVal_64); var currVal_66 = i1.ɵnov(_v, 29)._getTabIndex(); var currVal_67 = i1.ɵnov(_v, 29).selected; var currVal_68 = i1.ɵnov(_v, 29).multiple; var currVal_69 = i1.ɵnov(_v, 29).active; var currVal_70 = i1.ɵnov(_v, 29).id; var currVal_71 = i1.ɵnov(_v, 29)._getAriaSelected(); var currVal_72 = i1.ɵnov(_v, 29).disabled.toString(); var currVal_73 = i1.ɵnov(_v, 29).disabled; _ck(_v, 28, 0, currVal_66, currVal_67, currVal_68, currVal_69, currVal_70, currVal_71, currVal_72, currVal_73); }); }\nexport function View_SystemAvailabilityComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-availability\", [], null, null, null, View_SystemAvailabilityComponent_0, RenderType_SystemAvailabilityComponent)), i1.ɵdid(1, 114688, null, 0, i24.SystemAvailabilityComponent, [i25.DataService, i7.ConfigService, i6.ToolsService, i26.SystemGraphicHolderComponent], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SystemAvailabilityComponentNgFactory = i1.ɵccf(\"cism-system-availability\", i24.SystemAvailabilityComponent, View_SystemAvailabilityComponent_Host_0, {}, {}, []);\nexport { SystemAvailabilityComponentNgFactory as SystemAvailabilityComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block}.overview-container[_ngcontent-%COMP%]{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;height:225px;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:600px;margin:0 auto;-ms-flex-align:center;align-items:center}.mat-form-field[_ngcontent-%COMP%]{position:absolute;top:8px;right:20px}@media (min-width:600px){.overview-container[_ngcontent-%COMP%]{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.mat-form-field[_ngcontent-%COMP%]{top:15px}}[_nghost-%COMP%]  .mat-form-field-infix{border-top:0!important}[_nghost-%COMP%]  .mat-form-field-appearance-outline .mat-select-arrow-wrapper{-ms-transform:unset!important;transform:unset!important}[_nghost-%COMP%]  .mat-form-field{width:130px}[_nghost-%COMP%]  .mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(255,255,255,.1)!important}[_nghost-%COMP%]  .mat-form-field .mat-select-arrow{color:rgba(255,255,255,.1)!important}[_nghost-%COMP%]  .mat-form-field .mat-select-value-text span{color:rgba(255,255,255,.6)!important}.semaphore[_ngcontent-%COMP%]{-ms-flex:1 100%;flex:1 100%;max-width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin-top:10px;height:80px}@media (min-width:600px){.semaphore[_ngcontent-%COMP%]{-ms-flex-direction:column;flex-direction:column;-ms-flex:0 100px;flex:0 100px;height:200px;margin-top:0}}.semaphore[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{height:50px;width:50px;margin:0 auto;border-radius:50%;opacity:.2}.semaphore[_ngcontent-%COMP%]   .status.active[_ngcontent-%COMP%]{opacity:1}.semaphore[_ngcontent-%COMP%]   .status.bad[_ngcontent-%COMP%]{background-color:#e53935}.semaphore[_ngcontent-%COMP%]   .status.bad.active[_ngcontent-%COMP%]{box-shadow:0 0 20px #e53935}.semaphore[_ngcontent-%COMP%]   .status.medium[_ngcontent-%COMP%]{background-color:#ffca28}.semaphore[_ngcontent-%COMP%]   .status.medium.active[_ngcontent-%COMP%]{box-shadow:0 0 20px #ffca28}.semaphore[_ngcontent-%COMP%]   .status.good[_ngcontent-%COMP%]{background-color:#4caf50}.semaphore[_ngcontent-%COMP%]   .status.good.active[_ngcontent-%COMP%]{box-shadow:0 0 20px #4caf50}.chart[_ngcontent-%COMP%]{-ms-flex:1 100%;flex:1 100%;max-width:100%;display:-ms-flexbox;display:flex;height:120px}@media (min-width:600px){.chart[_ngcontent-%COMP%]{-ms-flex:0 400px;flex:0 400px;height:150px}}.chart[_ngcontent-%COMP%]   .today[_ngcontent-%COMP%]{-ms-flex:0 30%;flex:0 30%;max-width:30%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;text-align:center;margin-right:15px;padding:7px;box-sizing:border-box}.chart[_ngcontent-%COMP%]   .today[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{-ms-flex:0 50px;flex:0 50px;font-size:1.2rem;color:#00bcd4;white-space:nowrap;font-weight:700}@media (min-width:600px){.chart[_ngcontent-%COMP%]   .today[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-size:1.5rem}}.chart[_ngcontent-%COMP%]   .today[_ngcontent-%COMP%]   .percent[_ngcontent-%COMP%]{-ms-flex:1;flex:1;font-size:1.8rem;white-space:nowrap}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-direction:column;flex-direction:column;padding:10px;box-sizing:border-box;border-radius:3px;cursor:pointer}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]:hover{background-color:rgba(255,255,255,.03)}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{color:#00bcd4;white-space:nowrap;font-weight:700}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]   .percent[_ngcontent-%COMP%]{white-space:nowrap}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{-ms-flex:1;flex:1;position:relative;text-align:center}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]   .difference-sign[_ngcontent-%COMP%]{position:absolute;margin:auto;top:0;bottom:0;left:0;right:0;width:0;height:0;border-left:10px solid transparent;border-right:10px solid transparent}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]   .difference-sign.down[_ngcontent-%COMP%]{border-top:14px solid #e53935}.chart[_ngcontent-%COMP%]   .rest[_ngcontent-%COMP%]   .unit[_ngcontent-%COMP%]   .difference-sign.up[_ngcontent-%COMP%]{border-bottom:14px solid #4caf50}@media (max-width:599px){.show-on-portrait-up[_ngcontent-%COMP%]{display:none}}@media (min-width:600px){.chart[_ngcontent-%COMP%]   .today[_ngcontent-%COMP%]   .percent[_ngcontent-%COMP%]{font-size:2.5rem}.show-on-mobile[_ngcontent-%COMP%]{display:none}}\"];\nexport { styles as styles };\n","<mat-form-field class=\"view-selector\" appearance=\"outline\">\r\n    <mat-select (selectionChange)=\"view.next($event.value)\" [value]=\"view | async\">\r\n        <mat-option value=\"overview\" selected>Overview</mat-option>\r\n        <mat-option value=\"daily\">Daily</mat-option>\r\n        <mat-option value=\"weekly\">Weekly</mat-option>\r\n        <mat-option value=\"monthly\">Monthly</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n<ng-container [ngSwitch]=\"view | async\">\r\n    <cism-system-scroller *ngSwitchCase=\"'daily'\">\r\n        <cism-system-availability-chart [data]=\"SystemAvailabilityRows | async\" type=\"daily\"></cism-system-availability-chart>\r\n    </cism-system-scroller>\r\n    <cism-system-scroller *ngSwitchCase=\"'weekly'\">\r\n        <cism-system-availability-chart [data]=\"SystemAvailabilityRows | async\" type=\"weekly\"></cism-system-availability-chart>\r\n    </cism-system-scroller>\r\n    <cism-system-scroller *ngSwitchCase=\"'monthly'\">\r\n        <cism-system-availability-chart [data]=\"SystemAvailabilityRows | async\" type=\"monthly\"></cism-system-availability-chart>\r\n    </cism-system-scroller>\r\n    <ng-container *ngSwitchDefault>\r\n        <div class=\"overview-container\" *ngIf=\"percents | async as perc\">\r\n            <div class=\"semaphore\">\r\n                <div class=\"status bad\" [class.active]=\"perc.today < 98\"></div>\r\n                <div class=\"status medium\" [class.active]=\"perc.today > 98 && perc.today < 99\"></div>\r\n                <div class=\"status good\" [class.active]=\"perc.today > 99\"></div>\r\n            </div>\r\n            <div class=\"chart\">\r\n                <div class=\"today\">\r\n                    <div class=\"header\">Today</div>\r\n                    <div class=\"percent\">{{ perc.today }} %</div>\r\n                </div>\r\n                <div class=\"rest\">\r\n                    <div class=\"unit\" (click)=\"view.next('daily')\" matTooltip=\"View details\" matTooltipPosition=\"below\">\r\n                        <div class=\"header show-on-portrait-up\">Prev. Day</div>\r\n                        <div class=\"header show-on-mobile\">Pr. Day</div>\r\n                        <div class=\"percent\">{{ perc.yesterday }} %</div>\r\n                        <div class=\"difference\">\r\n                            <div class=\"difference-sign\" [ngClass]=\"perc.yesterday_up\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"unit\" (click)=\"view.next('weekly')\" matTooltip=\"View details\" matTooltipPosition=\"below\">\r\n                        <div class=\"header show-on-portrait-up\">Prev. Week</div>\r\n                        <div class=\"header show-on-mobile\">Pr. Week</div>\r\n                        <div class=\"percent\">{{ perc.prev_week }} %</div>\r\n                        <div class=\"difference\">\r\n                            <div class=\"difference-sign\" [ngClass]=\"perc.week_up\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"unit\" (click)=\"view.next('monthly')\" matTooltip=\"View details\" matTooltipPosition=\"below\">\r\n                        <div class=\"header show-on-portrait-up\">Prev. Month</div>\r\n                        <div class=\"header show-on-mobile\">Pr. Month</div>\r\n                        <div class=\"percent\">{{ perc.prev_month }} %</div>\r\n                        <div class=\"difference\">\r\n                            <div class=\"difference-sign\" [ngClass]=\"perc.month_up\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>","import { Component, Input, OnChanges, Host, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SAViewType } from '@other/interfaces';\r\nimport { DataService } from '@services/data.service';\r\nimport { SystemScrollerComponent } from '@components/system/system-scroller/system-scroller.component';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { ToolsService } from '@services/tools.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport dayjs from 'dayjs';\r\n\r\n@Component({\r\n  selector: 'cism-system-robustness-chart',\r\n  templateUrl: './system-robustness-chart.component.html',\r\n  styleUrls: ['./system-robustness-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemRobustnessChartComponent implements OnChanges {\r\n\r\n  constructor(\r\n    private _data: DataService,\r\n    private _config: ConfigService,\r\n    private _tools: ToolsService,\r\n    @Host() private _scroller: SystemScrollerComponent\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    setTimeout(_ => {\r\n      let groups = {}\r\n      let classifiers = {\r\n        monthly: 'YYYY[M]MM',\r\n        daily: 'YYYY[M]MM[D]DD',\r\n        weekly: 'YYYYw'\r\n      }\r\n      const t0 = performance.now()\r\n      // Get rows classified by month, week, or day\r\n      groups = this._data.allTickets.reduce((r, ticket) => {\r\n        const dateParsed = dayjs(ticket[2], 'DD.MM.YYYY HH:mm')\r\n        if (!dateParsed.isValid()) {\r\n          return r\r\n        }\r\n        const date = dateParsed.format(classifiers[this.type])\r\n        r[date] = r[date] || []\r\n        r[date].push(ticket)\r\n        return r\r\n      }, {})\r\n      // Get keys of classifying indexes\r\n      const keys = Object.keys(groups)\r\n      // Apply sorting, normally it's done by the browser, by just to make sure\r\n      keys.sort((a, b) => {\r\n        const left = this.type == 'weekly' ? dayjs(a.substr(0, 4), 'YYYY').week(+a.substr(4,2)) : dayjs(a, classifiers[this.type])\r\n        const right = this.type == 'weekly' ? dayjs(b.substr(0, 4), 'YYYY').week(+b.substr(4,2)) : dayjs(b, classifiers[this.type])\r\n        return left.valueOf() - right.valueOf()\r\n      })\r\n      let chartData = keys.map( key => {\r\n        const group = groups[key]\r\n        groups[key] = this._tools.classifyByIndex(group, this._config.config.columns.type)\r\n        for (let prop2 in groups[key]) {\r\n          groups[key][prop2] = groups[key][prop2].length\r\n        }\r\n        return {\r\n          name: key,\r\n          series: Object.keys(groups[key]).map( key2 => ({ name: key2, value: groups[key][key2] }) )\r\n        }\r\n      })\r\n      // Take only last 12 units, example: months, weeks, days,...\r\n      chartData = chartData.slice(Math.max(chartData.length - this._config.config.system.unitsPast, 1))\r\n      this._scroller.bars.next(chartData.length)\r\n      this.data.next(chartData)\r\n    }, 200)\r\n  }\r\n  \r\n  @Input() type: SAViewType\r\n\r\n  colorScheme = {\r\n    domain: ['#00bcd4', '#ffb74d', '#7e57c2', '#039be5']\r\n  }\r\n\r\n  data = new BehaviorSubject<any[]>([])\r\n\r\n  xAxisFormatting = (val: string) => {\r\n    switch (this.type) {\r\n      case \"daily\":\r\n        return dayjs(val, 'YYYY[M]MM[D]DD').format('DD/MM/YYYY')\r\n      case \"monthly\":\r\n        return dayjs(val, 'YYYY[M]MM').format('MMM YYYY')\r\n      case \"weekly\":\r\n        return dayjs(val.substr(0, 4), 'YYYY').week(+val.substr(4,2)).format('DD/MM/YYYY')\r\n    }\r\n  }\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-robustness-chart.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@swimlane/ngx-charts/release/bar-chart/bar-vertical-stacked.component.ngfactory\";\nimport * as i3 from \"@swimlane/ngx-charts/release/bar-chart/bar-vertical-stacked.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./system-robustness-chart.component\";\nimport * as i6 from \"../../../services/data.service\";\nimport * as i7 from \"../../../services/config.service\";\nimport * as i8 from \"../../../services/tools.service\";\nimport * as i9 from \"../system-scroller/system-scroller.component\";\nvar styles_SystemRobustnessChartComponent = [i0.styles];\nvar RenderType_SystemRobustnessChartComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemRobustnessChartComponent, data: {} });\nexport { RenderType_SystemRobustnessChartComponent as RenderType_SystemRobustnessChartComponent };\nexport function View_SystemRobustnessChartComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"ngx-charts-bar-vertical-stacked\", [], null, null, null, i2.View_BarVerticalStackedComponent_0, i2.RenderType_BarVerticalStackedComponent)), i1.ɵdid(1, 4898816, null, 1, i3.BarVerticalStackedComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], { results: [0, \"results\"], scheme: [1, \"scheme\"], legend: [2, \"legend\"], xAxis: [3, \"xAxis\"], yAxis: [4, \"yAxis\"], showXAxisLabel: [5, \"showXAxisLabel\"], showYAxisLabel: [6, \"showYAxisLabel\"], gradient: [7, \"gradient\"], showGridLines: [8, \"showGridLines\"], xAxisTickFormatting: [9, \"xAxisTickFormatting\"] }, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 1, 0, i1.ɵnov(_v, 3).transform(_co.data)); var currVal_1 = _co.colorScheme; var currVal_2 = false; var currVal_3 = true; var currVal_4 = true; var currVal_5 = false; var currVal_6 = false; var currVal_7 = false; var currVal_8 = false; var currVal_9 = _co.xAxisFormatting; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }, null); }\nexport function View_SystemRobustnessChartComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-robustness-chart\", [], null, null, null, View_SystemRobustnessChartComponent_0, RenderType_SystemRobustnessChartComponent)), i1.ɵdid(1, 573440, null, 0, i5.SystemRobustnessChartComponent, [i6.DataService, i7.ConfigService, i8.ToolsService, i9.SystemScrollerComponent], null, null)], null, null); }\nvar SystemRobustnessChartComponentNgFactory = i1.ɵccf(\"cism-system-robustness-chart\", i5.SystemRobustnessChartComponent, View_SystemRobustnessChartComponent_Host_0, { type: \"type\" }, {}, []);\nexport { SystemRobustnessChartComponentNgFactory as SystemRobustnessChartComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block;height:230px;padding:20px 5px 0;box-sizing:border-box}[_nghost-%COMP%]  .ngx-charts .tick text{fill:rgba(255,255,255,.5)!important}\"];\nexport { styles as styles };\n","<ngx-charts-bar-vertical-stacked\n    [results]=\"data | async\"\n    [gradient]=\"false\"\n    [xAxis]=\"true\"\n    [yAxis]=\"true\"\n    [legend]=\"false\"\n    [showXAxisLabel]=\"false\"\n    [showYAxisLabel]=\"false\"\n    [scheme]=\"colorScheme\"\n    [xAxisTickFormatting]=\"xAxisFormatting\"\n    [showGridLines]=\"false\">\n</ngx-charts-bar-vertical-stacked>\n","import { Component, ChangeDetectionStrategy, Host } from '@angular/core';\r\nimport { SAViewType } from '@other/interfaces';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\n\r\n@Component({\r\n  selector: 'cism-system-robustness',\r\n  templateUrl: './system-robustness.component.html',\r\n  styleUrls: ['./system-robustness.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemRobustnessComponent {\r\n\r\n  constructor(\r\n    private _config: ConfigService,\r\n    @Host() private _holder: SystemGraphicHolderComponent\r\n  ) {\r\n    this._holder.titles.next([this._config.config.system.titles.S2])\r\n  }\r\n  \r\n  view = new BehaviorSubject<SAViewType>('monthly')\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-robustness.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/platform-browser/animations\";\nimport * as i8 from \"../../../../../node_modules/@angular/material/select/typings/index.ngfactory\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/cdk/scrolling\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/cdk/a11y\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"../../../../../node_modules/@angular/material/core/typings/index.ngfactory\";\nimport * as i15 from \"../system-scroller/system-scroller.component.ngfactory\";\nimport * as i16 from \"../system-scroller/system-scroller.component\";\nimport * as i17 from \"../system-robustness-chart/system-robustness-chart.component.ngfactory\";\nimport * as i18 from \"../system-robustness-chart/system-robustness-chart.component\";\nimport * as i19 from \"../../../services/data.service\";\nimport * as i20 from \"../../../services/config.service\";\nimport * as i21 from \"../../../services/tools.service\";\nimport * as i22 from \"./system-robustness.component\";\nimport * as i23 from \"../system-graphic-holder/system-graphic-holder.component\";\nvar styles_SystemRobustnessComponent = [i0.styles];\nvar RenderType_SystemRobustnessComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemRobustnessComponent, data: {} });\nexport { RenderType_SystemRobustnessComponent as RenderType_SystemRobustnessComponent };\nexport function View_SystemRobustnessComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 27, \"mat-form-field\", [[\"appearance\", \"outline\"], [\"class\", \"view-selector mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-has-label\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatFormField_0, i2.RenderType_MatFormField)), i1.ɵdid(1, 7520256, null, 9, i3.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i4.MAT_LABEL_GLOBAL_OPTIONS], [2, i5.Directionality], [2, i3.MAT_FORM_FIELD_DEFAULT_OPTIONS], i6.Platform, i1.NgZone, [2, i7.ANIMATION_MODULE_TYPE]], { appearance: [0, \"appearance\"] }, null), i1.ɵqud(603979776, 1, { _controlNonStatic: 0 }), i1.ɵqud(335544320, 2, { _controlStatic: 0 }), i1.ɵqud(603979776, 3, { _labelChildNonStatic: 0 }), i1.ɵqud(335544320, 4, { _labelChildStatic: 0 }), i1.ɵqud(603979776, 5, { _placeholderChild: 0 }), i1.ɵqud(603979776, 6, { _errorChildren: 1 }), i1.ɵqud(603979776, 7, { _hintChildren: 1 }), i1.ɵqud(603979776, 8, { _prefixChildren: 1 }), i1.ɵqud(603979776, 9, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(11, 0, null, 1, 16, \"mat-select\", [[\"class\", \"mat-select\"], [\"role\", \"listbox\"]], [[1, \"id\", 0], [1, \"tabindex\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [1, \"aria-required\", 0], [1, \"aria-disabled\", 0], [1, \"aria-invalid\", 0], [1, \"aria-owns\", 0], [1, \"aria-multiselectable\", 0], [1, \"aria-describedby\", 0], [1, \"aria-activedescendant\", 0], [2, \"mat-select-disabled\", null], [2, \"mat-select-invalid\", null], [2, \"mat-select-required\", null], [2, \"mat-select-empty\", null]], [[null, \"selectionChange\"], [null, \"keydown\"], [null, \"focus\"], [null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 12)._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 12)._onFocus() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 12)._onBlur() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"selectionChange\" === en)) {\n        var pd_3 = (_co.view.next($event.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, i8.View_MatSelect_0, i8.RenderType_MatSelect)), i1.ɵdid(12, 2080768, null, 3, i9.MatSelect, [i10.ViewportRuler, i1.ChangeDetectorRef, i1.NgZone, i4.ErrorStateMatcher, i1.ElementRef, [2, i5.Directionality], [2, i11.NgForm], [2, i11.FormGroupDirective], [2, i3.MatFormField], [8, null], [8, null], i9.MAT_SELECT_SCROLL_STRATEGY, i12.LiveAnnouncer], { value: [0, \"value\"] }, { selectionChange: \"selectionChange\" }), i1.ɵqud(603979776, 10, { options: 1 }), i1.ɵqud(603979776, 11, { optionGroups: 1 }), i1.ɵqud(603979776, 12, { customTrigger: 0 }), i1.ɵpid(131072, i13.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵprd(2048, [[1, 4], [2, 4]], i3.MatFormFieldControl, null, [i9.MatSelect]), i1.ɵprd(2048, null, i4.MAT_OPTION_PARENT_COMPONENT, null, [i9.MatSelect]), (_l()(), i1.ɵeld(19, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"value\", \"daily\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 20)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 20)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i14.View_MatOption_0, i14.RenderType_MatOption)), i1.ɵdid(20, 8568832, [[10, 4]], 0, i4.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i4.MAT_OPTION_PARENT_COMPONENT], [2, i4.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Daily\"])), (_l()(), i1.ɵeld(22, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"value\", \"weekly\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 23)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 23)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i14.View_MatOption_0, i14.RenderType_MatOption)), i1.ɵdid(23, 8568832, [[10, 4]], 0, i4.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i4.MAT_OPTION_PARENT_COMPONENT], [2, i4.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Weekly\"])), (_l()(), i1.ɵeld(25, 0, null, 1, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"], [\"selected\", \"\"], [\"value\", \"monthly\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 26)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 26)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i14.View_MatOption_0, i14.RenderType_MatOption)), i1.ɵdid(26, 8568832, [[10, 4]], 0, i4.MatOption, [i1.ElementRef, i1.ChangeDetectorRef, [2, i4.MAT_OPTION_PARENT_COMPONENT], [2, i4.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Monthly\"])), (_l()(), i1.ɵeld(28, 0, null, null, 4, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 29).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i15.View_SystemScrollerComponent_0, i15.RenderType_SystemScrollerComponent)), i1.ɵdid(29, 114688, null, 0, i16.SystemScrollerComponent, [i1.ElementRef], null, null), (_l()(), i1.ɵeld(30, 0, null, 0, 2, \"cism-system-robustness-chart\", [], null, null, null, i17.View_SystemRobustnessChartComponent_0, i17.RenderType_SystemRobustnessChartComponent)), i1.ɵdid(31, 573440, null, 0, i18.SystemRobustnessChartComponent, [i19.DataService, i20.ConfigService, i21.ToolsService, i16.SystemScrollerComponent], { type: [0, \"type\"] }, null), i1.ɵpid(131072, i13.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_22 = \"outline\"; _ck(_v, 1, 0, currVal_22); var currVal_38 = i1.ɵunv(_v, 12, 0, i1.ɵnov(_v, 16).transform(_co.view)); _ck(_v, 12, 0, currVal_38); var currVal_47 = \"daily\"; _ck(_v, 20, 0, currVal_47); var currVal_56 = \"weekly\"; _ck(_v, 23, 0, currVal_56); var currVal_65 = \"monthly\"; _ck(_v, 26, 0, currVal_65); _ck(_v, 29, 0); var currVal_66 = i1.ɵunv(_v, 31, 0, i1.ɵnov(_v, 32).transform(_co.view)); _ck(_v, 31, 0, currVal_66); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 1).appearance == \"standard\"); var currVal_1 = (i1.ɵnov(_v, 1).appearance == \"fill\"); var currVal_2 = (i1.ɵnov(_v, 1).appearance == \"outline\"); var currVal_3 = (i1.ɵnov(_v, 1).appearance == \"legacy\"); var currVal_4 = i1.ɵnov(_v, 1)._control.errorState; var currVal_5 = i1.ɵnov(_v, 1)._canLabelFloat; var currVal_6 = i1.ɵnov(_v, 1)._shouldLabelFloat(); var currVal_7 = i1.ɵnov(_v, 1)._hasFloatingLabel(); var currVal_8 = i1.ɵnov(_v, 1)._hideControlPlaceholder(); var currVal_9 = i1.ɵnov(_v, 1)._control.disabled; var currVal_10 = i1.ɵnov(_v, 1)._control.autofilled; var currVal_11 = i1.ɵnov(_v, 1)._control.focused; var currVal_12 = (i1.ɵnov(_v, 1).color == \"accent\"); var currVal_13 = (i1.ɵnov(_v, 1).color == \"warn\"); var currVal_14 = i1.ɵnov(_v, 1)._shouldForward(\"untouched\"); var currVal_15 = i1.ɵnov(_v, 1)._shouldForward(\"touched\"); var currVal_16 = i1.ɵnov(_v, 1)._shouldForward(\"pristine\"); var currVal_17 = i1.ɵnov(_v, 1)._shouldForward(\"dirty\"); var currVal_18 = i1.ɵnov(_v, 1)._shouldForward(\"valid\"); var currVal_19 = i1.ɵnov(_v, 1)._shouldForward(\"invalid\"); var currVal_20 = i1.ɵnov(_v, 1)._shouldForward(\"pending\"); var currVal_21 = !i1.ɵnov(_v, 1)._animationsEnabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21]); var currVal_23 = i1.ɵnov(_v, 12).id; var currVal_24 = i1.ɵnov(_v, 12).tabIndex; var currVal_25 = i1.ɵnov(_v, 12)._getAriaLabel(); var currVal_26 = i1.ɵnov(_v, 12)._getAriaLabelledby(); var currVal_27 = i1.ɵnov(_v, 12).required.toString(); var currVal_28 = i1.ɵnov(_v, 12).disabled.toString(); var currVal_29 = i1.ɵnov(_v, 12).errorState; var currVal_30 = (i1.ɵnov(_v, 12).panelOpen ? i1.ɵnov(_v, 12)._optionIds : null); var currVal_31 = i1.ɵnov(_v, 12).multiple; var currVal_32 = (i1.ɵnov(_v, 12)._ariaDescribedby || null); var currVal_33 = i1.ɵnov(_v, 12)._getAriaActiveDescendant(); var currVal_34 = i1.ɵnov(_v, 12).disabled; var currVal_35 = i1.ɵnov(_v, 12).errorState; var currVal_36 = i1.ɵnov(_v, 12).required; var currVal_37 = i1.ɵnov(_v, 12).empty; _ck(_v, 11, 1, [currVal_23, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37]); var currVal_39 = i1.ɵnov(_v, 20)._getTabIndex(); var currVal_40 = i1.ɵnov(_v, 20).selected; var currVal_41 = i1.ɵnov(_v, 20).multiple; var currVal_42 = i1.ɵnov(_v, 20).active; var currVal_43 = i1.ɵnov(_v, 20).id; var currVal_44 = i1.ɵnov(_v, 20)._getAriaSelected(); var currVal_45 = i1.ɵnov(_v, 20).disabled.toString(); var currVal_46 = i1.ɵnov(_v, 20).disabled; _ck(_v, 19, 0, currVal_39, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46); var currVal_48 = i1.ɵnov(_v, 23)._getTabIndex(); var currVal_49 = i1.ɵnov(_v, 23).selected; var currVal_50 = i1.ɵnov(_v, 23).multiple; var currVal_51 = i1.ɵnov(_v, 23).active; var currVal_52 = i1.ɵnov(_v, 23).id; var currVal_53 = i1.ɵnov(_v, 23)._getAriaSelected(); var currVal_54 = i1.ɵnov(_v, 23).disabled.toString(); var currVal_55 = i1.ɵnov(_v, 23).disabled; _ck(_v, 22, 0, currVal_48, currVal_49, currVal_50, currVal_51, currVal_52, currVal_53, currVal_54, currVal_55); var currVal_57 = i1.ɵnov(_v, 26)._getTabIndex(); var currVal_58 = i1.ɵnov(_v, 26).selected; var currVal_59 = i1.ɵnov(_v, 26).multiple; var currVal_60 = i1.ɵnov(_v, 26).active; var currVal_61 = i1.ɵnov(_v, 26).id; var currVal_62 = i1.ɵnov(_v, 26)._getAriaSelected(); var currVal_63 = i1.ɵnov(_v, 26).disabled.toString(); var currVal_64 = i1.ɵnov(_v, 26).disabled; _ck(_v, 25, 0, currVal_57, currVal_58, currVal_59, currVal_60, currVal_61, currVal_62, currVal_63, currVal_64); }); }\nexport function View_SystemRobustnessComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-robustness\", [], null, null, null, View_SystemRobustnessComponent_0, RenderType_SystemRobustnessComponent)), i1.ɵdid(1, 49152, null, 0, i22.SystemRobustnessComponent, [i20.ConfigService, i23.SystemGraphicHolderComponent], null, null)], null, null); }\nvar SystemRobustnessComponentNgFactory = i1.ɵccf(\"cism-system-robustness\", i22.SystemRobustnessComponent, View_SystemRobustnessComponent_Host_0, {}, {}, []);\nexport { SystemRobustnessComponentNgFactory as SystemRobustnessComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".mat-form-field[_ngcontent-%COMP%]{position:absolute;top:8px;right:20px}@media (min-width:600px){.mat-form-field[_ngcontent-%COMP%]{top:15px}}[_nghost-%COMP%]  .mat-form-field-infix{border-top:0!important}[_nghost-%COMP%]  .mat-form-field-appearance-outline .mat-select-arrow-wrapper{-ms-transform:unset!important;transform:unset!important}[_nghost-%COMP%]  .mat-form-field{width:130px}[_nghost-%COMP%]  .mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(255,255,255,.1)!important}[_nghost-%COMP%]  .mat-form-field .mat-select-arrow{color:rgba(255,255,255,.1)!important}[_nghost-%COMP%]  .mat-form-field .mat-select-value-text span{color:rgba(255,255,255,.6)!important}\"];\nexport { styles as styles };\n","<mat-form-field class=\"view-selector\" appearance=\"outline\">\n    <mat-select [value]=\"view | async\" (selectionChange)=\"view.next($event.value)\">\n        <mat-option value=\"daily\">Daily</mat-option>\n        <mat-option value=\"weekly\">Weekly</mat-option>\n        <mat-option value=\"monthly\" selected>Monthly</mat-option>\n    </mat-select>\n</mat-form-field>\n<cism-system-scroller>\n    <cism-system-robustness-chart [type]=\"view | async\"></cism-system-robustness-chart>\n</cism-system-scroller>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./count.directive\";\nvar styles_CountUpDirective = [];\nvar RenderType_CountUpDirective = i0.ɵcrt({ encapsulation: 2, styles: styles_CountUpDirective, data: {} });\nexport { RenderType_CountUpDirective as RenderType_CountUpDirective };\nexport function View_CountUpDirective_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.value; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_CountUpDirective_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"ngx-charts-count-up\", \"\"]], null, null, null, View_CountUpDirective_0, RenderType_CountUpDirective)), i0.ɵdid(1, 180224, null, 0, i1.CountUpDirective, [i0.ChangeDetectorRef, i0.ElementRef], null, null)], null, null); }\nvar CountUpDirectiveNgFactory = i0.ɵccf(\"[ngx-charts-count-up]\", i1.CountUpDirective, View_CountUpDirective_Host_0, { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, { countChange: \"countChange\", countFinish: \"countFinish\" }, []);\nexport { CountUpDirectiveNgFactory as CountUpDirectiveNgFactory };\n","{{value}}","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../common/svg-linear-gradient.component.ngfactory\";\nimport * as i2 from \"../common/svg-linear-gradient.component\";\nimport * as i3 from \"../common/count/count.directive.ngfactory\";\nimport * as i4 from \"../common/count/count.directive\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./tree-map-cell.component\";\nvar styles_TreeMapCellComponent = [];\nvar RenderType_TreeMapCellComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TreeMapCellComponent, data: {} });\nexport { RenderType_TreeMapCellComponent as RenderType_TreeMapCellComponent };\nfunction View_TreeMapCellComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-svg-linear-gradient\", \"\"], [\"orientation\", \"vertical\"]], null, null, null, i1.View_SvgLinearGradientComponent_0, i1.RenderType_SvgLinearGradientComponent)), i0.ɵdid(2, 573440, null, 0, i2.SvgLinearGradientComponent, [], { orientation: [0, \"orientation\"], name: [1, \"name\"], stops: [2, \"stops\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"vertical\"; var currVal_1 = _co.gradientId; var currVal_2 = _co.gradientStops; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); }, null); }\nfunction View_TreeMapCellComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":xhtml:span\", [[\"class\", \"treemap-val\"], [\"ngx-charts-count-up\", \"\"]], null, null, null, i3.View_CountUpDirective_0, i3.RenderType_CountUpDirective)), i0.ɵdid(1, 180224, null, 0, i4.CountUpDirective, [i0.ChangeDetectorRef, i0.ElementRef], { valueFormatting: [0, \"valueFormatting\"], countTo: [1, \"countTo\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.valueFormatting; var currVal_1 = _co.value; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nfunction View_TreeMapCellComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":xhtml:span\", [[\"class\", \"treemap-val\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.formattedValue; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_TreeMapCellComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \":svg:foreignObject\", [[\"class\", \"treemap-label\"]], [[1, \"x\", 0], [1, \"y\", 0], [1, \"width\", 0], [1, \"height\", 0], [4, \"pointer-events\", null]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 6, \":xhtml:p\", [], [[4, \"color\", null], [4, \"height\", null], [4, \"width\", null]], null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, \":xhtml:span\", [[\"class\", \"treemap-label\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, \":xhtml:br\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TreeMapCellComponent_3)), i0.ɵdid(5, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TreeMapCellComponent_4)), i0.ɵdid(7, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_9 = _co.animations; _ck(_v, 5, 0, currVal_9); var currVal_10 = !_co.animations; _ck(_v, 7, 0, currVal_10); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.x; var currVal_1 = _co.y; var currVal_2 = _co.width; var currVal_3 = _co.height; var currVal_4 = \"none\"; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_5 = _co.getTextColor(); var currVal_6 = (_co.height + \"px\"); var currVal_7 = (_co.width + \"px\"); _ck(_v, 1, 0, currVal_5, currVal_6, currVal_7); var currVal_8 = _co.formattedLabel; _ck(_v, 2, 0, currVal_8); }); }\nexport function View_TreeMapCellComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \":svg:g\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TreeMapCellComponent_1)), i0.ɵdid(2, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 0, \":svg:rect\", [[\"class\", \"cell\"]], [[1, \"fill\", 0], [1, \"width\", 0], [1, \"height\", 0], [1, \"x\", 0], [1, \"y\", 0], [4, \"cursor\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.onClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TreeMapCellComponent_2)), i0.ɵdid(5, 16384, null, 0, i5.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.gradient; _ck(_v, 2, 0, currVal_0); var currVal_7 = ((_co.width >= 70) && (_co.height >= 35)); _ck(_v, 5, 0, currVal_7); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = (_co.gradient ? _co.gradientUrl : _co.fill); var currVal_2 = _co.width; var currVal_3 = _co.height; var currVal_4 = _co.x; var currVal_5 = _co.y; var currVal_6 = \"pointer\"; _ck(_v, 3, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }\nexport function View_TreeMapCellComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-tree-map-cell\", \"\"]], null, null, null, View_TreeMapCellComponent_0, RenderType_TreeMapCellComponent)), i0.ɵdid(1, 573440, null, 0, i6.TreeMapCellComponent, [i0.ElementRef], null, null)], null, null); }\nvar TreeMapCellComponentNgFactory = i0.ɵccf(\"g[ngx-charts-tree-map-cell]\", i6.TreeMapCellComponent, View_TreeMapCellComponent_Host_0, { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueType: \"valueType\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, { select: \"select\" }, []);\nexport { TreeMapCellComponentNgFactory as TreeMapCellComponentNgFactory };\n","\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [style.cursor]=\"'pointer'\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tree-map-cell.component.ngfactory\";\nimport * as i2 from \"../common/tooltip/tooltip.directive\";\nimport * as i3 from \"../common/tooltip/tooltip.service\";\nimport * as i4 from \"./tree-map-cell.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./tree-map-cell-series.component\";\nvar styles_TreeMapCellSeriesComponent = [];\nvar RenderType_TreeMapCellSeriesComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TreeMapCellSeriesComponent, data: {} });\nexport { RenderType_TreeMapCellSeriesComponent as RenderType_TreeMapCellSeriesComponent };\nfunction View_TreeMapCellSeriesComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 2, \":svg:g\", [[\"ngx-charts-tree-map-cell\", \"\"], [\"ngx-tooltip\", \"\"]], null, [[null, \"select\"], [null, \"focusin\"], [null, \"blur\"], [null, \"mouseenter\"], [null, \"mouseleave\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"focusin\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1).onFocus() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 1).onBlur() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 1).onMouseEnter() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 1).onMouseLeave($event.target) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"click\" === en)) {\n        var pd_4 = (i0.ɵnov(_v, 1).onMouseClick() !== false);\n        ad = (pd_4 && ad);\n    } if ((\"select\" === en)) {\n        var pd_5 = (_co.onClick($event) !== false);\n        ad = (pd_5 && ad);\n    } return ad; }, i1.View_TreeMapCellComponent_0, i1.RenderType_TreeMapCellComponent)), i0.ɵdid(1, 147456, null, 0, i2.TooltipDirective, [i3.TooltipService, i0.ViewContainerRef, i0.Renderer2], { tooltipTitle: [0, \"tooltipTitle\"], tooltipDisabled: [1, \"tooltipDisabled\"], tooltipPlacement: [2, \"tooltipPlacement\"], tooltipType: [3, \"tooltipType\"], tooltipTemplate: [4, \"tooltipTemplate\"], tooltipContext: [5, \"tooltipContext\"] }, null), i0.ɵdid(2, 573440, null, 0, i4.TreeMapCellComponent, [i0.ElementRef], { data: [0, \"data\"], fill: [1, \"fill\"], x: [2, \"x\"], y: [3, \"y\"], width: [4, \"width\"], height: [5, \"height\"], label: [6, \"label\"], value: [7, \"value\"], valueType: [8, \"valueType\"], valueFormatting: [9, \"valueFormatting\"], labelFormatting: [10, \"labelFormatting\"], gradient: [11, \"gradient\"], animations: [12, \"animations\"] }, { select: \"select\" }), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.tooltipTemplate ? undefined : _co.getTooltipText(_v.context.$implicit)); var currVal_1 = _co.tooltipDisabled; var currVal_2 = \"top\"; var currVal_3 = \"tooltip\"; var currVal_4 = _co.tooltipTemplate; var currVal_5 = _v.context.$implicit.data; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); var currVal_6 = _v.context.$implicit.data; var currVal_7 = _v.context.$implicit.fill; var currVal_8 = _v.context.$implicit.x; var currVal_9 = _v.context.$implicit.y; var currVal_10 = _v.context.$implicit.width; var currVal_11 = _v.context.$implicit.height; var currVal_12 = _v.context.$implicit.label; var currVal_13 = _v.context.$implicit.value; var currVal_14 = _v.context.$implicit.valueType; var currVal_15 = _co.valueFormatting; var currVal_16 = _co.labelFormatting; var currVal_17 = _co.gradient; var currVal_18 = _co.animations; _ck(_v, 2, 1, [currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18]); }, null); }\nexport function View_TreeMapCellSeriesComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_TreeMapCellSeriesComponent_1)), i0.ɵdid(1, 278528, null, 0, i5.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.cells; var currVal_1 = _co.trackBy; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nexport function View_TreeMapCellSeriesComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-tree-map-cell-series\", \"\"]], null, null, null, View_TreeMapCellSeriesComponent_0, RenderType_TreeMapCellSeriesComponent)), i0.ɵdid(1, 573440, null, 0, i6.TreeMapCellSeriesComponent, [], null, null)], null, null); }\nvar TreeMapCellSeriesComponentNgFactory = i0.ɵccf(\"g[ngx-charts-tree-map-cell-series]\", i6.TreeMapCellSeriesComponent, View_TreeMapCellSeriesComponent_Host_0, { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, { select: \"select\" }, []);\nexport { TreeMapCellSeriesComponentNgFactory as TreeMapCellSeriesComponentNgFactory };\n","\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./tree-map.component.css.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../common/charts/chart.component.ngfactory\";\nimport * as i3 from \"../common/tooltip/tooltip.service\";\nimport * as i4 from \"../common/tooltip/injection.service\";\nimport * as i5 from \"../common/charts/chart.component\";\nimport * as i6 from \"./tree-map-cell-series.component.ngfactory\";\nimport * as i7 from \"./tree-map-cell-series.component\";\nimport * as i8 from \"./tree-map.component\";\nvar styles_TreeMapComponent = [i0.styles];\nvar RenderType_TreeMapComponent = i1.ɵcrt({ encapsulation: 2, styles: styles_TreeMapComponent, data: {} });\nexport { RenderType_TreeMapComponent as RenderType_TreeMapComponent };\nexport function View_TreeMapComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 16777216, null, null, 6, \"ngx-charts-chart\", [], null, null, null, i2.View_ChartComponent_0, i2.RenderType_ChartComponent)), i1.ɵprd(512, null, i3.TooltipService, i3.TooltipService, [i4.InjectionService]), i1.ɵdid(2, 573440, null, 0, i5.ChartComponent, [i1.ViewContainerRef, i3.TooltipService], { view: [0, \"view\"], showLegend: [1, \"showLegend\"], animations: [2, \"animations\"] }, null), i1.ɵpad(3, 2), (_l()(), i1.ɵeld(4, 0, null, 0, 2, \":svg:g\", [[\"class\", \"tree-map chart\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-tree-map-cell-series\", \"\"]], null, [[null, \"select\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"select\" === en)) {\n        var pd_0 = (_co.onClick($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_TreeMapCellSeriesComponent_0, i6.RenderType_TreeMapCellSeriesComponent)), i1.ɵdid(6, 573440, null, 0, i7.TreeMapCellSeriesComponent, [], { data: [0, \"data\"], dims: [1, \"dims\"], colors: [2, \"colors\"], valueFormatting: [3, \"valueFormatting\"], labelFormatting: [4, \"labelFormatting\"], gradient: [5, \"gradient\"], tooltipDisabled: [6, \"tooltipDisabled\"], tooltipTemplate: [7, \"tooltipTemplate\"], animations: [8, \"animations\"] }, { select: \"select\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co.width, _co.height); var currVal_1 = false; var currVal_2 = _co.animations; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); var currVal_4 = _co.data; var currVal_5 = _co.dims; var currVal_6 = _co.colors; var currVal_7 = _co.valueFormatting; var currVal_8 = _co.labelFormatting; var currVal_9 = _co.gradient; var currVal_10 = _co.tooltipDisabled; var currVal_11 = _co.tooltipTemplate; var currVal_12 = _co.animations; _ck(_v, 6, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.transform; _ck(_v, 4, 0, currVal_3); }); }\nexport function View_TreeMapComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"ngx-charts-tree-map\", [], null, null, null, View_TreeMapComponent_0, RenderType_TreeMapComponent)), i1.ɵdid(1, 4898816, null, 1, i8.TreeMapComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], null, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 })], null, null); }\nvar TreeMapComponentNgFactory = i1.ɵccf(\"ngx-charts-tree-map\", i8.TreeMapComponent, View_TreeMapComponent_Host_0, { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, { select: \"select\" }, []);\nexport { TreeMapComponentNgFactory as TreeMapComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n/*# sourceMappingURL=tree-map.component.css.map*/\"];\nexport { styles as styles };\n","\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  ","import { Component, OnInit, ChangeDetectionStrategy, Host } from '@angular/core';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { KeyPair } from '@other/interfaces';\r\nimport { DataService } from '@services/data.service';\r\nimport { ToolsService } from '@services/tools.service';\r\n\r\n@Component({\r\n  selector: 'cism-system-root-cause',\r\n  templateUrl: './system-root-cause.component.html',\r\n  styleUrls: ['./system-root-cause.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemRootCauseComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _config: ConfigService,\r\n    private _data: DataService,\r\n    private _tools: ToolsService,\r\n    @Host() private _holder: SystemGraphicHolderComponent\r\n  ) {\r\n    this._holder.titles.next([this._config.config.system.titles.S3])\r\n    this.ie = this._tools.isIE()\r\n  }\r\n\r\n  ngOnInit() {\r\n    const groups = this._tools.classifyByIndex(this._data.allTickets, this._config.config.columns.service)\r\n    for (const group in groups) {\r\n      groups[group] = groups[group].length\r\n    }\r\n    const chartData: KeyPair[] = Object.keys(groups).map(group => {\r\n      return {\r\n        name: group,\r\n        value: groups[group]\r\n      } as KeyPair\r\n    })\r\n    this.chartData.next(chartData)\r\n  }\r\n\r\n  colorScheme = {\r\n    domain: ['#00bcd4', '#ffb74d', '#7e57c2', '#039be5']\r\n  }\r\n\r\n  valueFormatting = val => {\r\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n  }\r\n\r\n  chartData = new BehaviorSubject<KeyPair[]>([])\r\n\r\n  ie = false\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-root-cause.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@swimlane/ngx-charts/release/tree-map/tree-map.component.ngfactory\";\nimport * as i3 from \"@swimlane/ngx-charts/release/tree-map/tree-map.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./system-root-cause.component\";\nimport * as i6 from \"../../../services/config.service\";\nimport * as i7 from \"../../../services/data.service\";\nimport * as i8 from \"../../../services/tools.service\";\nimport * as i9 from \"../system-graphic-holder/system-graphic-holder.component\";\nvar styles_SystemRootCauseComponent = [i0.styles];\nvar RenderType_SystemRootCauseComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemRootCauseComponent, data: {} });\nexport { RenderType_SystemRootCauseComponent as RenderType_SystemRootCauseComponent };\nfunction View_SystemRootCauseComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"ngx-charts-tree-map\", [], null, null, null, i2.View_TreeMapComponent_0, i2.RenderType_TreeMapComponent)), i1.ɵdid(1, 4898816, null, 1, i3.TreeMapComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], { results: [0, \"results\"], scheme: [1, \"scheme\"], valueFormatting: [2, \"valueFormatting\"] }, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 1, 0, i1.ɵnov(_v, 3).transform(_co.chartData)); var currVal_1 = _co.colorScheme; var currVal_2 = _co.valueFormatting; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); }, null); }\nfunction View_SystemRootCauseComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(0, null, null, 0))], null, null); }\nexport function View_SystemRootCauseComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_SystemRootCauseComponent_1)), i1.ɵdid(1, 16384, null, 0, i4.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i1.ɵand(0, [[\"ieTemplate\", 2]], null, 0, null, View_SystemRootCauseComponent_2))], function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.ie; var currVal_1 = i1.ɵnov(_v, 2); _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nexport function View_SystemRootCauseComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-root-cause\", [], null, null, null, View_SystemRootCauseComponent_0, RenderType_SystemRootCauseComponent)), i1.ɵdid(1, 114688, null, 0, i5.SystemRootCauseComponent, [i6.ConfigService, i7.DataService, i8.ToolsService, i9.SystemGraphicHolderComponent], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SystemRootCauseComponentNgFactory = i1.ɵccf(\"cism-system-root-cause\", i5.SystemRootCauseComponent, View_SystemRootCauseComponent_Host_0, {}, {}, []);\nexport { SystemRootCauseComponentNgFactory as SystemRootCauseComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block;height:270px}\"];\nexport { styles as styles };\n","<ngx-charts-tree-map *ngIf=\"!ie; else ieTemplate\"\r\n    [scheme]=\"colorScheme\"\r\n    [valueFormatting]=\"valueFormatting\"\r\n    [results]=\"chartData | async\">\r\n</ngx-charts-tree-map>\r\n<ng-template #ieTemplate>\r\n    \r\n</ng-template>","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, Input, Component, ElementRef, ViewEncapsulation, HostListener, ViewChild, HostBinding, Renderer2, Directive, Output, EventEmitter, ViewContainerRef, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, TemplateRef, ContentChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { rgb } from 'd3-color';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { range, min, max } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile, scaleTime, scalePoint } from 'd3-scale';\nimport { brushX } from 'd3-brush';\nimport { select, event } from 'd3-selection';\nimport { curveLinear, area, line, curveCardinalClosed, lineRadial, arc, pie } from 'd3-shape';\nimport { forceCollide, forceLink, forceManyBody, forceSimulation, forceX, forceY } from 'd3-force';\nimport { interpolate } from 'd3-interpolate';\nimport { format } from 'd3-format';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof (SVGElement) !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\nngxChartsPolyfills();\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[PlacementTypes[\"top\"] = 'top'] = \"top\";\n    PlacementTypes[PlacementTypes[\"bottom\"] = 'bottom'] = \"bottom\";\n    PlacementTypes[PlacementTypes[\"left\"] = 'left'] = \"left\";\n    PlacementTypes[PlacementTypes[\"right\"] = 'right'] = \"right\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nvar caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === 'top') {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === 'bottom') {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === 'center') {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === 'left') {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === 'right') {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === 'center') {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n * @class PositionHelper\n */\nvar PositionHelper = /** @class */ (function () {\n    function PositionHelper() {\n    }\n    /**\n     * Calculate vertical alignment position\n     *\n     * @static\n     * @param {any} elDimensions\n     * @param {any} popoverDimensions\n     * @param {any} alignment\n     * @returns {number}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.calculateVerticalAlignment = function (elDimensions, popoverDimensions, alignment) {\n        var result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    };\n    /**\n     * Calculate vertical caret position\n     *\n     * @static\n     * @param {any} elDimensions\n     * @param {any} popoverDimensions\n     * @param {any} caretDimensions\n     * @param {any} alignment\n     * @returns {number}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.calculateVerticalCaret = function (elDimensions, popoverDimensions, caretDimensions, alignment) {\n        var result;\n        if (alignment === 'top') {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === 'bottom') {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === 'center') {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        var popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n        }\n        return result;\n    };\n    /**\n     * Calculate horz alignment position\n     *\n     * @static\n     * @param {any} elDimensions\n     * @param {any} popoverDimensions\n     * @param {any} alignment\n     * @returns {number}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.calculateHorizontalAlignment = function (elDimensions, popoverDimensions, alignment) {\n        var result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    };\n    /**\n     * Calculate horz caret position\n     *\n     * @static\n     * @param {any} elDimensions\n     * @param {any} popoverDimensions\n     * @param {any} caretDimensions\n     * @param {any} alignment\n     * @returns {number}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.calculateHorizontalCaret = function (elDimensions, popoverDimensions, caretDimensions, alignment) {\n        var result;\n        if (alignment === 'left') {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === 'right') {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === 'center') {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        var popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n        }\n        return result;\n    };\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @static\n     * @param {any} elDimensions\n     * @param {any} popoverDimensions\n     * @param {any} placement\n     * @param {any} spacing\n     * @returns {boolean}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.shouldFlip = function (elDimensions, popoverDimensions, placement, spacing) {\n        var flip = false;\n        if (placement === 'right') {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === 'left') {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === 'top') {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === 'bottom') {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    };\n    /**\n     * Position caret\n     *\n     * @static\n     * @param {any} placement\n     * @param {any} elmDim\n     * @param {any} hostDim\n     * @param {any} caretDimensions\n     * @param {any} alignment\n     * @returns {*}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.positionCaret = function (placement, elmDim, hostDim, caretDimensions, alignment) {\n        var top = 0;\n        var left = 0;\n        if (placement === PlacementTypes.right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top: top, left: left };\n    };\n    /**\n     * Position content\n     *\n     * @static\n     * @param {any} placement\n     * @param {any} elmDim\n     * @param {any} hostDim\n     * @param {any} spacing\n     * @param {any} alignment\n     * @returns {*}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.positionContent = function (placement, elmDim, hostDim, spacing, alignment) {\n        var top = 0;\n        var left = 0;\n        if (placement === PlacementTypes.right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top: top, left: left };\n    };\n    /**\n     * Determine placement based on flip\n     *\n     * @static\n     * @param {any} placement\n     * @param {any} elmDim\n     * @param {any} hostDim\n     * @param {any} spacing\n     * @returns {*}\n     *\n     * @memberOf PositionHelper\n     */\n    PositionHelper.determinePlacement = function (placement, elmDim, hostDim, spacing) {\n        var shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.right) {\n                return PlacementTypes.left;\n            }\n            else if (placement === PlacementTypes.left) {\n                return PlacementTypes.right;\n            }\n            else if (placement === PlacementTypes.top) {\n                return PlacementTypes.bottom;\n            }\n            else if (placement === PlacementTypes.bottom) {\n                return PlacementTypes.top;\n            }\n        }\n        return placement;\n    };\n    return PositionHelper;\n}());\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[StyleTypes[\"popover\"] = 'popover'] = \"popover\";\n    StyleTypes[StyleTypes[\"tooltip\"] = 'tooltip'] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar AlignmentTypes;\n(function (AlignmentTypes) {\n    AlignmentTypes[AlignmentTypes[\"left\"] = 'left'] = \"left\";\n    AlignmentTypes[AlignmentTypes[\"center\"] = 'center'] = \"center\";\n    AlignmentTypes[AlignmentTypes[\"right\"] = 'right'] = \"right\";\n})(AlignmentTypes || (AlignmentTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n * @class InjectionService\n */\nvar InjectionService = /** @class */ (function () {\n    function InjectionService(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    InjectionService_1 = InjectionService;\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    InjectionService.setGlobalRootViewContainer = function (container) {\n        InjectionService_1.globalRootViewContainer = container;\n    };\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @returns {ComponentRef<any>}\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.getRootViewContainer = function () {\n        var rootComponents = this.applicationRef.components;\n        // fix cannot read length of undefined\n        if (rootComponents) {\n            if (rootComponents.length)\n                return rootComponents[0];\n        }\n        if (this._container)\n            return this._container;\n        if (InjectionService_1.globalRootViewContainer)\n            return InjectionService_1.globalRootViewContainer;\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.');\n    };\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param {any} container\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.setRootViewContainer = function (container) {\n        this._container = container;\n    };\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param {ComponentRef<any>} componentRef\n     * @returns {HTMLElement}\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.getComponentRootNode = function (componentRef) {\n        // the top most component root node has no `hostView`\n        if (!componentRef.hostView)\n            return componentRef.element.nativeElement;\n        return componentRef.hostView.rootNodes[0];\n    };\n    /**\n     * Gets the root component container html element.\n     *\n     * @returns {HTMLElement}\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.getRootViewContainerNode = function () {\n        return this.getComponentRootNode(this.getRootViewContainer());\n    };\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param {ComponentRef<any>} component\n     * @param {*} options\n     * @returns {ComponentRef<any>}\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.projectComponentBindings = function (component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                var bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (var _i = 0, bindingKeys_1 = bindingKeys; _i < bindingKeys_1.length; _i++) {\n                    var bindingName = bindingKeys_1[_i];\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                var eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (var _a = 0, eventKeys_1 = eventKeys; _a < eventKeys_1.length; _a++) {\n                    var eventName = eventKeys_1[_a];\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    };\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @template T\n     * @param {Type<T>} componentClass\n     * @param {*} [options={}]\n     * @param {Element} [location=this.getRootViewContainerNode()]\n     * @returns {ComponentRef<any>}\n     *\n     * @memberOf InjectionService\n     */\n    InjectionService.prototype.appendComponent = function (componentClass, bindings, location) {\n        if (bindings === void 0) { bindings = {}; }\n        if (location === void 0) { location = this.getRootViewContainerNode(); }\n        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\n        var componentRef = componentFactory.create(this.injector);\n        var appRef = this.applicationRef;\n        var componentRootNode = this.getComponentRootNode(componentRef);\n        // project the options passed to the component instance\n        this.projectComponentBindings(componentRef, bindings);\n        appRef.attachView(componentRef.hostView);\n        componentRef.onDestroy(function () {\n            appRef.detachView(componentRef.hostView);\n        });\n        // use the renderer to append the element for univseral support\n        var renderer = componentRef.instance.renderer;\n        renderer.appendChild(location, componentRootNode);\n        return componentRef;\n    };\n    var InjectionService_1, _a, _b, _c;\n    InjectionService.globalRootViewContainer = null;\n    InjectionService = InjectionService_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ApplicationRef !== \"undefined\" && ApplicationRef) === \"function\" ? _a : Object, typeof (_b = typeof ComponentFactoryResolver !== \"undefined\" && ComponentFactoryResolver) === \"function\" ? _b : Object, typeof (_c = typeof Injector !== \"undefined\" && Injector) === \"function\" ? _c : Object])\n    ], InjectionService);\n    return InjectionService;\n}());\n\nvar InjectionRegistery = /** @class */ (function () {\n    function InjectionRegistery(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    InjectionRegistery.prototype.getByType = function (type) {\n        if (type === void 0) { type = this.type; }\n        return this.components.get(type);\n    };\n    InjectionRegistery.prototype.create = function (bindings) {\n        return this.createByType(this.type, bindings);\n    };\n    InjectionRegistery.prototype.createByType = function (type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        var component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    };\n    InjectionRegistery.prototype.destroy = function (instance) {\n        var compsByType = this.components.get(instance.componentType);\n        if (compsByType) {\n            var idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                var component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    };\n    InjectionRegistery.prototype.destroyAll = function () {\n        this.destroyByType(this.type);\n    };\n    InjectionRegistery.prototype.destroyByType = function (type) {\n        var comps = this.components.get(type);\n        if (comps) {\n            for (var _i = 0, comps_1 = comps; _i < comps_1.length; _i++) {\n                var comp = comps_1[_i];\n                this.destroy(comp);\n            }\n        }\n    };\n    InjectionRegistery.prototype.assignDefaults = function (bindings) {\n        var _a = this.defaults, inputs = _a.inputs, outputs = _a.outputs;\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = Object.assign(inputs, bindings.inputs);\n        }\n        if (outputs) {\n            bindings.outputs = Object.assign(outputs, bindings.outputs);\n        }\n        return bindings;\n    };\n    InjectionRegistery.prototype.injectComponent = function (type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    };\n    InjectionRegistery.prototype.register = function (type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        var types = this.components.get(type);\n        types.push(component);\n    };\n    return InjectionRegistery;\n}());\n\n/**\n * Throttle a function\n *\n * @export\n * @param {*}      func\n * @param {number} wait\n * @param {*}      [options]\n * @returns\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    var context;\n    var args;\n    var result;\n    var timeout = null;\n    var previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        var now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n *\n * @export\n * @param {number} duration\n * @param {*} [options]\n * @returns\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar TooltipContentComponent = /** @class */ (function () {\n    function TooltipContentComponent(element, renderer) {\n        this.element = element;\n        this.renderer = renderer;\n    }\n    Object.defineProperty(TooltipContentComponent.prototype, \"cssClasses\", {\n        get: function () {\n            var clz = 'ngx-charts-tooltip-content';\n            clz += \" position-\" + this.placement;\n            clz += \" type-\" + this.type;\n            clz += \" \" + this.cssClass;\n            return clz;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TooltipContentComponent.prototype.ngAfterViewInit = function () {\n        setTimeout(this.position.bind(this));\n    };\n    TooltipContentComponent.prototype.position = function () {\n        var _this = this;\n        var nativeElm = this.element.nativeElement;\n        var hostDim = this.host.nativeElement.getBoundingClientRect();\n        if (!hostDim.height && !hostDim.width)\n            return;\n        var elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        setTimeout(function () { return _this.renderer.addClass(nativeElm, 'animate'); }, 1);\n    };\n    TooltipContentComponent.prototype.positionContent = function (nativeElm, hostDim, elmDim) {\n        var _a = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment), top = _a.top, left = _a.left;\n        this.renderer.setStyle(nativeElm, 'top', top + \"px\");\n        this.renderer.setStyle(nativeElm, 'left', left + \"px\");\n    };\n    TooltipContentComponent.prototype.positionCaret = function (hostDim, elmDim) {\n        var caretElm = this.caretElm.nativeElement;\n        var caretDimensions = caretElm.getBoundingClientRect();\n        var _a = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment), top = _a.top, left = _a.left;\n        this.renderer.setStyle(caretElm, 'top', top + \"px\");\n        this.renderer.setStyle(caretElm, 'left', left + \"px\");\n    };\n    TooltipContentComponent.prototype.checkFlip = function (hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    };\n    TooltipContentComponent.prototype.onWindowResize = function () {\n        this.position();\n    };\n    var _a, _b, _c, _d, _e;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipContentComponent.prototype, \"host\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipContentComponent.prototype, \"showCaret\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof StyleTypes !== \"undefined\" && StyleTypes) === \"function\" ? _a : Object)\n    ], TooltipContentComponent.prototype, \"type\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_b = typeof PlacementTypes !== \"undefined\" && PlacementTypes) === \"function\" ? _b : Object)\n    ], TooltipContentComponent.prototype, \"placement\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_c = typeof AlignmentTypes !== \"undefined\" && AlignmentTypes) === \"function\" ? _c : Object)\n    ], TooltipContentComponent.prototype, \"alignment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], TooltipContentComponent.prototype, \"spacing\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], TooltipContentComponent.prototype, \"cssClass\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], TooltipContentComponent.prototype, \"title\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipContentComponent.prototype, \"template\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipContentComponent.prototype, \"context\", void 0);\n    __decorate([\n        ViewChild('caretElm', { static: false }),\n        __metadata(\"design:type\", Object)\n    ], TooltipContentComponent.prototype, \"caretElm\", void 0);\n    __decorate([\n        HostBinding('class'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [])\n    ], TooltipContentComponent.prototype, \"cssClasses\", null);\n    __decorate([\n        HostListener('window:resize'),\n        throttleable(100),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipContentComponent.prototype, \"onWindowResize\", null);\n    TooltipContentComponent = __decorate([\n        Component({\n            selector: 'ngx-tooltip-content',\n            template: \"\\n    <div>\\n      <span #caretElm [hidden]=\\\"!showCaret\\\" class=\\\"tooltip-caret position-{{ this.placement }}\\\"> </span>\\n      <div class=\\\"tooltip-content\\\">\\n        <span *ngIf=\\\"!title\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"template\\\" [ngTemplateOutletContext]=\\\"{ model: context }\\\"> </ng-template>\\n        </span>\\n        <span *ngIf=\\\"title\\\" [innerHTML]=\\\"title\\\"> </span>\\n      </div>\\n    </div>\\n  \",\n            encapsulation: ViewEncapsulation.None,\n            styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px 5px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate3d(10px,0,0)}.ngx-charts-tooltip-content.position-left{transform:translate3d(-10px,0,0)}.ngx-charts-tooltip-content.position-top{transform:translate3d(0,-10px,0)}.ngx-charts-tooltip-content.position-bottom{transform:translate3d(0,10px,0)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate3d(0,0,0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\"]\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_d = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _d : Object, typeof (_e = typeof Renderer2 !== \"undefined\" && Renderer2) === \"function\" ? _e : Object])\n    ], TooltipContentComponent);\n    return TooltipContentComponent;\n}());\n\nvar TooltipService = /** @class */ (function (_super) {\n    __extends(TooltipService, _super);\n    function TooltipService(injectionService) {\n        var _this = _super.call(this, injectionService) || this;\n        _this.injectionService = injectionService;\n        _this.type = TooltipContentComponent;\n        return _this;\n    }\n    var _a;\n    TooltipService = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof InjectionService !== \"undefined\" && InjectionService) === \"function\" ? _a : Object])\n    ], TooltipService);\n    return TooltipService;\n}(InjectionRegistery));\n\nvar TooltipDirective = /** @class */ (function () {\n    function TooltipDirective(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipTitle = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.top;\n        this.tooltipAlignment = AlignmentTypes.center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    Object.defineProperty(TooltipDirective.prototype, \"listensForFocus\", {\n        get: function () {\n            return this.tooltipShowEvent === ShowTypes.all ||\n                this.tooltipShowEvent === ShowTypes.focus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"listensForHover\", {\n        get: function () {\n            return this.tooltipShowEvent === ShowTypes.all ||\n                this.tooltipShowEvent === ShowTypes.mouseover;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TooltipDirective.prototype.ngOnDestroy = function () {\n        this.hideTooltip(true);\n    };\n    TooltipDirective.prototype.onFocus = function () {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    };\n    TooltipDirective.prototype.onBlur = function () {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    };\n    TooltipDirective.prototype.onMouseEnter = function () {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    };\n    TooltipDirective.prototype.onMouseLeave = function (target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                var contentDom = this.component.instance.element.nativeElement;\n                var contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    };\n    TooltipDirective.prototype.onMouseClick = function () {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    };\n    TooltipDirective.prototype.showTooltip = function (immediate) {\n        var _this = this;\n        if (this.component || this.tooltipDisabled)\n            return;\n        var time = immediate ? 0 : this.tooltipShowTimeout;\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(function () {\n            _this.tooltipService.destroyAll();\n            var options = _this.createBoundOptions();\n            _this.component = _this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(function () {\n                if (_this.component) {\n                    _this.addHideListeners(_this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            _this.show.emit(true);\n        }, time);\n    };\n    TooltipDirective.prototype.addHideListeners = function (tooltip) {\n        var _this = this;\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', function () {\n            clearTimeout(_this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', function () {\n                _this.hideTooltip(_this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen(document, 'click', function (event$$1) {\n                var contains = tooltip.contains(event$$1.target);\n                if (!contains)\n                    _this.hideTooltip();\n            });\n        }\n    };\n    TooltipDirective.prototype.hideTooltip = function (immediate) {\n        var _this = this;\n        if (immediate === void 0) { immediate = false; }\n        if (!this.component)\n            return;\n        var destroyFn = function () {\n            // remove events\n            if (_this.mouseLeaveContentEvent)\n                _this.mouseLeaveContentEvent();\n            if (_this.mouseEnterContentEvent)\n                _this.mouseEnterContentEvent();\n            if (_this.documentClickEvent)\n                _this.documentClickEvent();\n            // emit events\n            _this.hide.emit(true);\n            // destroy component\n            _this.tooltipService.destroy(_this.component);\n            _this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    };\n    TooltipDirective.prototype.createBoundOptions = function () {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    };\n    var _a, _b, _c, _d, _e, _f, _g;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], TooltipDirective.prototype, \"tooltipCssClass\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], TooltipDirective.prototype, \"tooltipTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipAppendToBody\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], TooltipDirective.prototype, \"tooltipSpacing\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipShowCaret\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof PlacementTypes !== \"undefined\" && PlacementTypes) === \"function\" ? _a : Object)\n    ], TooltipDirective.prototype, \"tooltipPlacement\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_b = typeof AlignmentTypes !== \"undefined\" && AlignmentTypes) === \"function\" ? _b : Object)\n    ], TooltipDirective.prototype, \"tooltipAlignment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_c = typeof StyleTypes !== \"undefined\" && StyleTypes) === \"function\" ? _c : Object)\n    ], TooltipDirective.prototype, \"tooltipType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipCloseOnClickOutside\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipCloseOnMouseLeave\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], TooltipDirective.prototype, \"tooltipHideTimeout\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], TooltipDirective.prototype, \"tooltipShowTimeout\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_d = typeof ShowTypes !== \"undefined\" && ShowTypes) === \"function\" ? _d : Object)\n    ], TooltipDirective.prototype, \"tooltipShowEvent\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"tooltipContext\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipDirective.prototype, \"tooltipImmediateExit\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"show\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"hide\", void 0);\n    __decorate([\n        HostListener('focusin'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipDirective.prototype, \"onFocus\", null);\n    __decorate([\n        HostListener('blur'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipDirective.prototype, \"onBlur\", null);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipDirective.prototype, \"onMouseEnter\", null);\n    __decorate([\n        HostListener('mouseleave', ['$event.target']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipDirective.prototype, \"onMouseLeave\", null);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TooltipDirective.prototype, \"onMouseClick\", null);\n    TooltipDirective = __decorate([\n        Directive({ selector: '[ngx-tooltip]' }),\n        __metadata(\"design:paramtypes\", [typeof (_e = typeof TooltipService !== \"undefined\" && TooltipService) === \"function\" ? _e : Object, typeof (_f = typeof ViewContainerRef !== \"undefined\" && ViewContainerRef) === \"function\" ? _f : Object, typeof (_g = typeof Renderer2 !== \"undefined\" && Renderer2) === \"function\" ? _g : Object])\n    ], TooltipDirective);\n    return TooltipDirective;\n}());\n\nvar TooltipModule = /** @class */ (function () {\n    function TooltipModule() {\n    }\n    TooltipModule = __decorate([\n        NgModule({\n            declarations: [TooltipContentComponent, TooltipDirective],\n            providers: [InjectionService, TooltipService],\n            exports: [TooltipContentComponent, TooltipDirective],\n            imports: [CommonModule],\n            entryComponents: [TooltipContentComponent]\n        })\n    ], TooltipModule);\n    return TooltipModule;\n}());\n\nvar ChartComponent = /** @class */ (function () {\n    function ChartComponent(vcr, tooltipService) {\n        this.vcr = vcr;\n        this.tooltipService = tooltipService;\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.tooltipService.injectionService.setRootViewContainer(this.vcr);\n    }\n    ChartComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    ChartComponent.prototype.update = function () {\n        var legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === 'right') {\n                if (this.legendType === 'scaleLegend') {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        var chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns / 12.0));\n        this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')\n            ? Math.floor((this.view[0] * legendColumns / 12.0))\n            : this.chartWidth;\n    };\n    ChartComponent.prototype.getLegendType = function () {\n        if (this.legendOptions.scaleType === 'linear') {\n            return 'scaleLegend';\n        }\n        else {\n            return 'legend';\n        }\n    };\n    var _a, _b, _c, _d, _e;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"view\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"showLegend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"legendOptions\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"legendData\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"legendType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ChartComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], ChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ChartComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], ChartComponent.prototype, \"legendLabelClick\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], ChartComponent.prototype, \"legendLabelActivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], ChartComponent.prototype, \"legendLabelDeactivate\", void 0);\n    ChartComponent = __decorate([\n        Component({\n            providers: [TooltipService],\n            selector: 'ngx-charts-chart',\n            template: \"\\n    <div\\n      class=\\\"ngx-charts-outer\\\"\\n      [style.width.px]=\\\"view[0]\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [@.disabled]=\\\"!animations\\\">\\n      <svg\\n        class=\\\"ngx-charts\\\"\\n        [attr.width]=\\\"chartWidth\\\"\\n        [attr.height]=\\\"view[1]\\\">\\n        <ng-content></ng-content>\\n      </svg>\\n      <ngx-charts-scale-legend\\n        *ngIf=\\\"showLegend && legendType === 'scaleLegend'\\\"\\n        class=\\\"chart-legend\\\"\\n        [horizontal]=\\\"legendOptions && legendOptions.position === 'below'\\\"\\n        [valueRange]=\\\"legendOptions.domain\\\"\\n        [colors]=\\\"legendOptions.colors\\\"\\n        [height]=\\\"view[1]\\\"\\n        [width]=\\\"legendWidth\\\">\\n      </ngx-charts-scale-legend>\\n      <ngx-charts-legend\\n        *ngIf=\\\"showLegend && legendType === 'legend'\\\"\\n        class=\\\"chart-legend\\\"\\n        [horizontal]=\\\"legendOptions && legendOptions.position === 'below'\\\"\\n        [data]=\\\"legendOptions.domain\\\"\\n        [title]=\\\"legendOptions.title\\\"\\n        [colors]=\\\"legendOptions.colors\\\"\\n        [height]=\\\"view[1]\\\"\\n        [width]=\\\"legendWidth\\\"\\n        [activeEntries]=\\\"activeEntries\\\"\\n        (labelClick)=\\\"legendLabelClick.emit($event)\\\"\\n        (labelActivate)=\\\"legendLabelActivate.emit($event)\\\"\\n        (labelDeactivate)=\\\"legendLabelDeactivate.emit($event)\\\">\\n      </ngx-charts-legend>\\n    </div>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':enter', [\n                        style({ opacity: 0 }),\n                        animate('500ms 100ms', style({ opacity: 1 }))\n                    ])\n                ])\n            ]\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_d = typeof ViewContainerRef !== \"undefined\" && ViewContainerRef) === \"function\" ? _d : Object, typeof (_e = typeof TooltipService !== \"undefined\" && TooltipService) === \"function\" ? _e : Object])\n    ], ChartComponent);\n    return ChartComponent;\n}());\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n * @param {*} label\n * @returns {string}\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n\nvar LegendComponent = /** @class */ (function () {\n    function LegendComponent(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    LegendComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    LegendComponent.prototype.update = function () {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    };\n    LegendComponent.prototype.getLegendEntries = function () {\n        var items = [];\n        var _loop_1 = function (label) {\n            var formattedLabel = formatLabel(label);\n            var idx = items.findIndex(function (i) {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label: label,\n                    formattedLabel: formattedLabel,\n                    color: this_1.colors.getColor(label)\n                });\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.data; _i < _a.length; _i++) {\n            var label = _a[_i];\n            _loop_1(label);\n        }\n        return items;\n    };\n    LegendComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    };\n    LegendComponent.prototype.activate = function (item) {\n        this.labelActivate.emit(item);\n    };\n    LegendComponent.prototype.deactivate = function (item) {\n        this.labelDeactivate.emit(item);\n    };\n    LegendComponent.prototype.trackBy = function (index, item) {\n        return item.label;\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"title\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendComponent.prototype, \"horizontal\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], LegendComponent.prototype, \"labelClick\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], LegendComponent.prototype, \"labelActivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], LegendComponent.prototype, \"labelDeactivate\", void 0);\n    LegendComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-legend',\n            template: \"\\n    <div [style.width.px]=\\\"width\\\">\\n      <header class=\\\"legend-title\\\" *ngIf=\\\"title?.length > 0\\\">\\n        <span class=\\\"legend-title-text\\\">{{title}}</span>\\n      </header>\\n      <div class=\\\"legend-wrap\\\">\\n        <ul class=\\\"legend-labels\\\"\\n            [class.horizontal-legend]=\\\"horizontal\\\"\\n          [style.max-height.px]=\\\"height - 45\\\">\\n          <li\\n            *ngFor=\\\"let entry of legendEntries; trackBy: trackBy\\\"\\n            class=\\\"legend-label\\\">\\n            <ngx-charts-legend-entry\\n              [label]=\\\"entry.label\\\"\\n              [formattedLabel]=\\\"entry.formattedLabel\\\"\\n              [color]=\\\"entry.color\\\"\\n              [isActive]=\\\"isActive(entry)\\\"\\n              (select)=\\\"labelClick.emit($event)\\\"\\n              (activate)=\\\"activate($event)\\\"\\n              (deactivate)=\\\"deactivate($event)\\\">\\n            </ngx-charts-legend-entry>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  \",\n            styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend li,.chart-legend ul{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;-webkit-transition:.2s;-moz-transition:.2s;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_d = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _d : Object])\n    ], LegendComponent);\n    return LegendComponent;\n}());\n\nvar ScaleLegendComponent = /** @class */ (function () {\n    function ScaleLegendComponent(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.horizontal = false;\n    }\n    ScaleLegendComponent.prototype.ngOnChanges = function (changes) {\n        var gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        var direction = (this.horizontal) ? 'right' : 'bottom';\n        this.gradient = this.sanitizer.bypassSecurityTrustStyle(\"linear-gradient(to \" + direction + \", \" + gradientValues + \")\");\n    };\n    ScaleLegendComponent.prototype.gradientString = function (colors, splits) {\n        splits.push(1);\n        var pairs = [];\n        colors.reverse().forEach(function (c, i) {\n            pairs.push(c + \" \" + Math.round(splits[i] * 100) + \"%\");\n        });\n        return pairs.join(', ');\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ScaleLegendComponent.prototype, \"valueRange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ScaleLegendComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ScaleLegendComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ScaleLegendComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ScaleLegendComponent.prototype, \"horizontal\", void 0);\n    ScaleLegendComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-scale-legend',\n            template: \"\\n    <div\\n      class=\\\"scale-legend\\\"\\n      [class.horizontal-legend]=\\\"horizontal\\\"\\n      [style.height.px]=\\\"horizontal ? undefined : height\\\"\\n      [style.width.px]=\\\"width\\\">\\n      <div class=\\\"scale-legend-label\\\">\\n        <span>{{ valueRange[1].toLocaleString() }}</span>\\n      </div>\\n      <div\\n        class=\\\"scale-legend-wrap\\\"\\n        [style.background]=\\\"gradient\\\">\\n      </div>\\n      <div class=\\\"scale-legend-label\\\">\\n        <span>{{ valueRange[0].toLocaleString() }}</span>\\n      </div>\\n    </div>\\n  \",\n            styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" ? _a : Object])\n    ], ScaleLegendComponent);\n    return ScaleLegendComponent;\n}());\n\nvar LegendEntryComponent = /** @class */ (function () {\n    function LegendEntryComponent() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    Object.defineProperty(LegendEntryComponent.prototype, \"trimmedLabel\", {\n        get: function () {\n            return this.formattedLabel || '(empty)';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LegendEntryComponent.prototype.onMouseEnter = function () {\n        this.activate.emit({ name: this.label });\n    };\n    LegendEntryComponent.prototype.onMouseLeave = function () {\n        this.deactivate.emit({ name: this.label });\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LegendEntryComponent.prototype, \"color\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LegendEntryComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LegendEntryComponent.prototype, \"formattedLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LegendEntryComponent.prototype, \"isActive\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], LegendEntryComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], LegendEntryComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], LegendEntryComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_d = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _d : Object)\n    ], LegendEntryComponent.prototype, \"toggle\", void 0);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LegendEntryComponent.prototype, \"onMouseEnter\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LegendEntryComponent.prototype, \"onMouseLeave\", null);\n    LegendEntryComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-legend-entry',\n            template: \"\\n    <span \\n      [title]=\\\"formattedLabel\\\"\\n      tabindex=\\\"-1\\\"\\n      [class.active]=\\\"isActive\\\"\\n      (click)=\\\"select.emit(formattedLabel)\\\">\\n      <span\\n        class=\\\"legend-label-color\\\"\\n        [style.background-color]=\\\"color\\\"\\n        (click)=\\\"toggle.emit(formattedLabel)\\\">\\n      </span>\\n      <span class=\\\"legend-label-text\\\">\\n        {{trimmedLabel}}\\n      </span>\\n    </span>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], LegendEntryComponent);\n    return LegendEntryComponent;\n}());\n\nfunction trimLabel(s, max$$1) {\n    if (max$$1 === void 0) { max$$1 = 16; }\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max$$1) {\n        return s;\n    }\n    else {\n        return s.slice(0, max$$1) + \"...\";\n    }\n}\n\nvar AdvancedLegendComponent = /** @class */ (function () {\n    function AdvancedLegendComponent() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = function (label) { return label; };\n        this.percentageFormatting = function (percentage) { return percentage; };\n        this.defaultValueFormatting = function (value) { return value.toLocaleString(); };\n    }\n    AdvancedLegendComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    AdvancedLegendComponent.prototype.getTotal = function () {\n        return this.data.map(function (d) { return d.value; }).reduce(function (sum, d) { return sum + d; }, 0);\n    };\n    AdvancedLegendComponent.prototype.update = function () {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    };\n    AdvancedLegendComponent.prototype.getLegendItems = function () {\n        var _this = this;\n        return this.data.map(function (d) {\n            var label = formatLabel(d.name);\n            var value = d.value;\n            var color = _this.colors.getColor(label);\n            var percentage = _this.total > 0 ? (value / _this.total) * 100 : 0;\n            var formattedLabel = typeof _this.labelFormatting === 'function' ? _this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value: value,\n                color: color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: _this.percentageFormatting ? _this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    };\n    AdvancedLegendComponent.prototype.trackBy = function (item) {\n        return item.formattedLabel;\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AdvancedLegendComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AdvancedLegendComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AdvancedLegendComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AdvancedLegendComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AdvancedLegendComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], AdvancedLegendComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], AdvancedLegendComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], AdvancedLegendComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedLegendComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedLegendComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedLegendComponent.prototype, \"percentageFormatting\", void 0);\n    AdvancedLegendComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-advanced-legend',\n            template: \"\\n    <div class=\\\"advanced-pie-legend\\\" [style.width.px]=\\\"width\\\">\\n      <div\\n        *ngIf=\\\"animations\\\"\\n        class=\\\"total-value\\\"\\n        ngx-charts-count-up\\n        [countTo]=\\\"roundedTotal\\\"\\n        [valueFormatting]=\\\"valueFormatting\\\"\\n      ></div>\\n      <div class=\\\"total-value\\\" *ngIf=\\\"!animations\\\">\\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\\n      </div>\\n      <div class=\\\"total-label\\\">\\n        {{ label }}\\n      </div>\\n      <div class=\\\"legend-items-container\\\">\\n        <div class=\\\"legend-items\\\">\\n          <div\\n            *ngFor=\\\"let legendItem of legendItems; trackBy: trackBy\\\"\\n            tabindex=\\\"-1\\\"\\n            class=\\\"legend-item\\\"\\n            (mouseenter)=\\\"activate.emit(legendItem.data)\\\"\\n            (mouseleave)=\\\"deactivate.emit(legendItem.data)\\\"\\n            (click)=\\\"select.emit(legendItem.data)\\\"\\n          >\\n            <div class=\\\"item-color\\\" [style.border-left-color]=\\\"legendItem.color\\\"></div>\\n            <div\\n              *ngIf=\\\"animations\\\"\\n              class=\\\"item-value\\\"\\n              ngx-charts-count-up\\n              [countTo]=\\\"legendItem._value\\\"\\n              [valueFormatting]=\\\"valueFormatting\\\"\\n            ></div>\\n            <div *ngIf=\\\"!animations\\\" class=\\\"item-value\\\">\\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\\n            </div>\\n            <div class=\\\"item-label\\\">{{ legendItem.displayLabel }}</div>\\n            <div\\n              *ngIf=\\\"animations\\\"\\n              class=\\\"item-percent\\\"\\n              ngx-charts-count-up\\n              [countTo]=\\\"legendItem.percentage\\\"\\n              [countSuffix]=\\\"'%'\\\"\\n            ></div>\\n            <div *ngIf=\\\"!animations\\\" class=\\\"item-percent\\\">{{ legendItem.percentage.toLocaleString() }}%</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \",\n            styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translate(0,-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:0}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;-webkit-transition:.2s;-moz-transition:.2s;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], AdvancedLegendComponent);\n    return AdvancedLegendComponent;\n}());\n\nvar cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    var newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = \"a\" + newId;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00'\n        ]\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: 'Continuous',\n        domain: [\n            '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: 'Continuous',\n        domain: [\n            '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: 'Continuous',\n        domain: [\n            '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634',\n            '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: 'Ordinal',\n        domain: [\n            '#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b',\n            '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3'\n        ]\n    }\n];\n\nfunction sortLinear(data, property, direction) {\n    if (direction === void 0) { direction = 'asc'; }\n    return data.sort(function (a, b) {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction, domain) {\n    if (direction === void 0) { direction = 'asc'; }\n    return data.sort(function (a, b) {\n        var aVal = a[property];\n        var bVal = b[property];\n        var aIdx = domain.indexOf(aVal);\n        var bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction) {\n    if (direction === void 0) { direction = 'asc'; }\n    return data.sort(function (a, b) {\n        var aDate = a[property].getTime();\n        var bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n * @param {any} value\n * @returns {string}\n */\nfunction invertColor(value) {\n    var color = rgb(value);\n    var r = color.r, g = color.g, b = color.b, opacity = color.opacity;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    var depth = (yiq >= 128) ? -.8 : .8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param {any} { r, g, b }\n * @param {any} percent\n * @returns\n */\nfunction shadeRGBColor(_a, percent) {\n    var r = _a.r, g = _a.g, b = _a.b;\n    var t = percent < 0 ? 0 : 255;\n    var p = percent < 0 ? percent * -1 : percent;\n    r = (Math.round((t - r) * p) + r);\n    g = (Math.round((t - g) * p) + g);\n    b = (Math.round((t - b) * p) + b);\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\n/**\n * Visibility Observer\n */\nvar VisibilityObserver = /** @class */ (function () {\n    function VisibilityObserver(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    VisibilityObserver.prototype.destroy = function () {\n        clearTimeout(this.timeout);\n    };\n    VisibilityObserver.prototype.onVisibilityChange = function () {\n        var _this = this;\n        // trigger zone recalc for columns\n        this.zone.run(function () {\n            _this.isVisible = true;\n            _this.visible.emit(true);\n        });\n    };\n    VisibilityObserver.prototype.runCheck = function () {\n        var _this = this;\n        var check = function () {\n            if (!_this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            var _a = _this.element.nativeElement, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(_this.timeout);\n                _this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(_this.timeout);\n                _this.zone.runOutsideAngular(function () {\n                    _this.timeout = setTimeout(function () { return check(); }, 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(function () {\n            _this.timeout = setTimeout(function () { return check(); });\n        });\n    };\n    var _a;\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], VisibilityObserver.prototype, \"visible\", void 0);\n    return VisibilityObserver;\n}());\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\n\nvar BaseChartComponent = /** @class */ (function () {\n    function BaseChartComponent(chartElement, zone, cd) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.scheme = 'cool';\n        this.schemeType = 'ordinal';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    BaseChartComponent.prototype.ngAfterViewInit = function () {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    };\n    BaseChartComponent.prototype.ngOnDestroy = function () {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    };\n    BaseChartComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    BaseChartComponent.prototype.update = function () {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            var dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    };\n    BaseChartComponent.prototype.getContainerDims = function () {\n        var width;\n        var height;\n        var hostElem = this.chartElement.nativeElement;\n        if (hostElem.parentNode !== null) {\n            // Get the container dimensions\n            var dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width: width, height: height };\n        }\n        return null;\n    };\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    BaseChartComponent.prototype.formatDates = function () {\n        for (var i = 0; i < this.results.length; i++) {\n            var g = this.results[i];\n            g.label = g.name;\n            if (g.label instanceof Date) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (var j = 0; j < g.series.length; j++) {\n                    var d = g.series[j];\n                    d.label = d.name;\n                    if (d.label instanceof Date) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    };\n    BaseChartComponent.prototype.unbindEvents = function () {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    };\n    BaseChartComponent.prototype.bindWindowResizeEvent = function () {\n        var _this = this;\n        var source = fromEvent(window, 'resize');\n        var subscription = source.pipe(debounceTime(200)).subscribe(function (e) {\n            _this.update();\n            if (_this.cd) {\n                _this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    };\n    /**\n     * Clones the data into a new object\n     *\n     * @private\n     * @param {any} data\n     * @returns {*}\n     *\n     * @memberOf BaseChart\n     */\n    BaseChartComponent.prototype.cloneData = function (data) {\n        var results = [];\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var item = data_1[_i];\n            var copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (var _a = 0, _b = item['series']; _a < _b.length; _a++) {\n                    var seriesItem = _b[_a];\n                    var seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BaseChartComponent.prototype, \"results\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BaseChartComponent.prototype, \"view\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BaseChartComponent.prototype, \"scheme\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BaseChartComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BaseChartComponent.prototype, \"customColors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BaseChartComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BaseChartComponent.prototype, \"select\", void 0);\n    BaseChartComponent = __decorate([\n        Component({\n            selector: 'base-chart',\n            template: \"\\n    <div></div>\\n  \"\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object, typeof (_b = typeof NgZone !== \"undefined\" && NgZone) === \"function\" ? _b : Object, typeof (_c = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _c : Object])\n    ], BaseChartComponent);\n    return BaseChartComponent;\n}());\n\nvar AxisLabelComponent = /** @class */ (function () {\n    function AxisLabelComponent(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    AxisLabelComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    AxisLabelComponent.prototype.update = function () {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case 'top':\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case 'bottom':\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case 'left':\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case 'right':\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AxisLabelComponent.prototype, \"orient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AxisLabelComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AxisLabelComponent.prototype, \"offset\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AxisLabelComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AxisLabelComponent.prototype, \"height\", void 0);\n    AxisLabelComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-axis-label]',\n            template: \"\\n    <svg:text\\n      [attr.stroke-width]=\\\"strokeWidth\\\"\\n      [attr.x]=\\\"x\\\"\\n      [attr.y]=\\\"y\\\"\\n      [attr.text-anchor]=\\\"textAnchor\\\"\\n      [attr.transform]=\\\"transform\\\">\\n      {{label}}\\n    </svg:text>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], AxisLabelComponent);\n    return AxisLabelComponent;\n}());\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        var reduced = [];\n        var modulus = Math.floor(ticks.length / maxTicks);\n        for (var i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\n\nvar XAxisTicksComponent = /** @class */ (function () {\n    function XAxisTicksComponent() {\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = 'middle';\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n    }\n    XAxisTicksComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    XAxisTicksComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        setTimeout(function () { return _this.updateDims(); });\n    };\n    XAxisTicksComponent.prototype.updateDims = function () {\n        var _this = this;\n        var height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: height });\n            setTimeout(function () { return _this.updateDims(); });\n        }\n    };\n    XAxisTicksComponent.prototype.update = function () {\n        var _this = this;\n        var scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        var angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = \"rotate(\" + angle + \")\";\n            this.textAnchor = 'end';\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = 'middle';\n        }\n        setTimeout(function () { return _this.updateDims(); });\n    };\n    XAxisTicksComponent.prototype.getRotationAngle = function (ticks) {\n        var angle = 0;\n        this.maxTicksLength = 0;\n        for (var i = 0; i < ticks.length; i++) {\n            var tick = this.tickFormat(ticks[i]).toString();\n            var tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        var len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        var charWidth = 8; // need to measure this\n        var wordWidth = len * charWidth;\n        var baseWidth = wordWidth;\n        var maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        return angle;\n    };\n    XAxisTicksComponent.prototype.getTicks = function () {\n        var ticks;\n        var maxTicks = this.getMaxTicks(20);\n        var maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    };\n    XAxisTicksComponent.prototype.getMaxTicks = function (tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    };\n    XAxisTicksComponent.prototype.tickTransform = function (tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    };\n    XAxisTicksComponent.prototype.gridLineTransform = function () {\n        return \"translate(0,\" + (-this.verticalSpacing - 5) + \")\";\n    };\n    XAxisTicksComponent.prototype.tickTrim = function (label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"scale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"orient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"tickArguments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], XAxisTicksComponent.prototype, \"tickValues\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"tickStroke\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], XAxisTicksComponent.prototype, \"trimTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], XAxisTicksComponent.prototype, \"maxTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"tickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"gridLineHeight\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], XAxisTicksComponent.prototype, \"rotateTicks\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], XAxisTicksComponent.prototype, \"dimensionsChanged\", void 0);\n    __decorate([\n        ViewChild('ticksel', { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object)\n    ], XAxisTicksComponent.prototype, \"ticksElement\", void 0);\n    XAxisTicksComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-x-axis-ticks]',\n            template: \"\\n    <svg:g #ticksel>\\n      <svg:g *ngFor=\\\"let tick of ticks\\\" class=\\\"tick\\\" [attr.transform]=\\\"tickTransform(tick)\\\">\\n        <title>{{ tickFormat(tick) }}</title>\\n        <svg:text\\n          stroke-width=\\\"0.01\\\"\\n          [attr.text-anchor]=\\\"textAnchor\\\"\\n          [attr.transform]=\\\"textTransform\\\"\\n          [style.font-size]=\\\"'12px'\\\"\\n        >\\n          {{ tickTrim(tickFormat(tick)) }}\\n        </svg:text>\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:g *ngFor=\\\"let tick of ticks\\\" [attr.transform]=\\\"tickTransform(tick)\\\">\\n      <svg:g *ngIf=\\\"showGridLines\\\" [attr.transform]=\\\"gridLineTransform()\\\">\\n        <svg:line class=\\\"gridline-path gridline-path-vertical\\\" [attr.y1]=\\\"-gridLineHeight\\\" y2=\\\"0\\\" />\\n      </svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], XAxisTicksComponent);\n    return XAxisTicksComponent;\n}());\n\nvar XAxisComponent = /** @class */ (function () {\n    function XAxisComponent() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = 'bottom';\n        this.xAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n    }\n    XAxisComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    XAxisComponent.prototype.update = function () {\n        this.transform = \"translate(0,\" + (this.xAxisOffset + this.padding + this.dims.height) + \")\";\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    };\n    XAxisComponent.prototype.emitTicksHeight = function (_a) {\n        var _this = this;\n        var height = _a.height;\n        var newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(function () {\n                _this.dimensionsChanged.emit({ height: height });\n            }, 0);\n        }\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], XAxisComponent.prototype, \"trimTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], XAxisComponent.prototype, \"rotateTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], XAxisComponent.prototype, \"maxTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"tickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"showLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"labelText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], XAxisComponent.prototype, \"ticks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"xAxisTickInterval\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"xAxisTickCount\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], XAxisComponent.prototype, \"xOrient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], XAxisComponent.prototype, \"xAxisOffset\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], XAxisComponent.prototype, \"dimensionsChanged\", void 0);\n    __decorate([\n        ViewChild(XAxisTicksComponent, { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof XAxisTicksComponent !== \"undefined\" && XAxisTicksComponent) === \"function\" ? _a : Object)\n    ], XAxisComponent.prototype, \"ticksComponent\", void 0);\n    XAxisComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-x-axis]',\n            template: \"\\n    <svg:g [attr.class]=\\\"xAxisClassName\\\" [attr.transform]=\\\"transform\\\">\\n      <svg:g\\n        ngx-charts-x-axis-ticks\\n        *ngIf=\\\"xScale\\\"\\n        [trimTicks]=\\\"trimTicks\\\"\\n        [rotateTicks]=\\\"rotateTicks\\\"\\n        [maxTickLength]=\\\"maxTickLength\\\"\\n        [tickFormatting]=\\\"tickFormatting\\\"\\n        [tickArguments]=\\\"tickArguments\\\"\\n        [tickStroke]=\\\"tickStroke\\\"\\n        [scale]=\\\"xScale\\\"\\n        [orient]=\\\"xOrient\\\"\\n        [showGridLines]=\\\"showGridLines\\\"\\n        [gridLineHeight]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n        [tickValues]=\\\"ticks\\\"\\n        (dimensionsChanged)=\\\"emitTicksHeight($event)\\\"\\n      />\\n      <svg:g\\n        ngx-charts-axis-label\\n        *ngIf=\\\"showLabel\\\"\\n        [label]=\\\"labelText\\\"\\n        [offset]=\\\"labelOffset\\\"\\n        [orient]=\\\"'bottom'\\\"\\n        [height]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], XAxisComponent);\n    return XAxisComponent;\n}());\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param {*} x, y, w, h, r, tl, tr, bl, br\n * @returns {string}\n */\nfunction roundedRect(x, y, w, h, r, _a) {\n    var tl = _a[0], tr = _a[1], bl = _a[2], br = _a[3];\n    var retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = \"M\" + [x + r, y];\n    retval += \"h\" + (w - 2 * r);\n    if (tr) {\n        retval += \"a\" + [r, r] + \" 0 0 1 \" + [r, r];\n    }\n    else {\n        retval += \"h\" + r + \"v\" + r;\n    }\n    retval += \"v\" + (h - 2 * r);\n    if (br) {\n        retval += \"a\" + [r, r] + \" 0 0 1 \" + [-r, r];\n    }\n    else {\n        retval += \"v\" + r + \"h\" + -r;\n    }\n    retval += \"h\" + (2 * r - w);\n    if (bl) {\n        retval += \"a\" + [r, r] + \" 0 0 1 \" + [-r, -r];\n    }\n    else {\n        retval += \"h\" + -r + \"v\" + -r;\n    }\n    retval += \"v\" + (2 * r - h);\n    if (tl) {\n        retval += \"a\" + [r, r] + \" 0 0 1 \" + [r, -r];\n    }\n    else {\n        retval += \"v\" + -r + \"h\" + r;\n    }\n    retval += \"z\";\n    return retval;\n}\n\nvar YAxisTicksComponent = /** @class */ (function () {\n    function YAxisTicksComponent() {\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = 'middle';\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n    }\n    YAxisTicksComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    YAxisTicksComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        setTimeout(function () { return _this.updateDims(); });\n    };\n    YAxisTicksComponent.prototype.updateDims = function () {\n        var _this = this;\n        var width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width: width });\n            setTimeout(function () { return _this.updateDims(); });\n        }\n    };\n    YAxisTicksComponent.prototype.update = function () {\n        var _this = this;\n        var scale;\n        var sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? function (d) {\n                return scale(d) + scale.bandwidth() * 0.5;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case 'top':\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = 'middle';\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case 'bottom':\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = 'middle';\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case 'left':\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = 'end';\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case 'right':\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = 'start';\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(function () { return _this.updateDims(); });\n    };\n    YAxisTicksComponent.prototype.setReferencelines = function () {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(function (item) { return item.value; })));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(function (item) { return item.value; })));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    };\n    YAxisTicksComponent.prototype.getTicks = function () {\n        var ticks;\n        var maxTicks = this.getMaxTicks(20);\n        var maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    };\n    YAxisTicksComponent.prototype.getMaxTicks = function (tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    };\n    YAxisTicksComponent.prototype.tickTransform = function (tick) {\n        return \"translate(\" + this.adjustedScale(tick) + \",\" + this.verticalSpacing + \")\";\n    };\n    YAxisTicksComponent.prototype.gridLineTransform = function () {\n        return \"translate(5,0)\";\n    };\n    YAxisTicksComponent.prototype.tickTrim = function (label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"scale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"orient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"tickArguments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], YAxisTicksComponent.prototype, \"tickValues\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"tickStroke\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], YAxisTicksComponent.prototype, \"trimTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], YAxisTicksComponent.prototype, \"maxTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"tickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"gridLineWidth\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"referenceLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], YAxisTicksComponent.prototype, \"showRefLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], YAxisTicksComponent.prototype, \"showRefLines\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], YAxisTicksComponent.prototype, \"dimensionsChanged\", void 0);\n    __decorate([\n        ViewChild('ticksel', { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object)\n    ], YAxisTicksComponent.prototype, \"ticksElement\", void 0);\n    YAxisTicksComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-y-axis-ticks]',\n            template: \"\\n    <svg:g #ticksel>\\n      <svg:g *ngFor=\\\"let tick of ticks\\\" class=\\\"tick\\\" [attr.transform]=\\\"transform(tick)\\\">\\n        <title>{{ tickFormat(tick) }}</title>\\n        <svg:text\\n          stroke-width=\\\"0.01\\\"\\n          [attr.dy]=\\\"dy\\\"\\n          [attr.x]=\\\"x1\\\"\\n          [attr.y]=\\\"y1\\\"\\n          [attr.text-anchor]=\\\"textAnchor\\\"\\n          [style.font-size]=\\\"'12px'\\\"\\n        >\\n          {{ tickTrim(tickFormat(tick)) }}\\n        </svg:text>\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:path\\n      *ngIf=\\\"referenceLineLength > 1 && refMax && refMin && showRefLines\\\"\\n      class=\\\"reference-area\\\"\\n      [attr.d]=\\\"referenceAreaPath\\\"\\n      [attr.transform]=\\\"gridLineTransform()\\\"\\n    />\\n    <svg:g *ngFor=\\\"let tick of ticks\\\" [attr.transform]=\\\"transform(tick)\\\">\\n      <svg:g *ngIf=\\\"showGridLines\\\" [attr.transform]=\\\"gridLineTransform()\\\">\\n        <svg:line\\n          *ngIf=\\\"orient === 'left'\\\"\\n          class=\\\"gridline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"gridLineWidth\\\"\\n        />\\n        <svg:line\\n          *ngIf=\\\"orient === 'right'\\\"\\n          class=\\\"gridline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"-gridLineWidth\\\"\\n        />\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:g *ngFor=\\\"let refLine of referenceLines\\\">\\n      <svg:g *ngIf=\\\"showRefLines\\\" [attr.transform]=\\\"transform(refLine.value)\\\">\\n        <svg:line\\n          class=\\\"refline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"gridLineWidth\\\"\\n          [attr.transform]=\\\"gridLineTransform()\\\"\\n        />\\n        <svg:g *ngIf=\\\"showRefLabels\\\">\\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\\n          <svg:text\\n            class=\\\"refline-label\\\"\\n            [attr.dy]=\\\"dy\\\"\\n            [attr.y]=\\\"-6\\\"\\n            [attr.x]=\\\"gridLineWidth\\\"\\n            [attr.text-anchor]=\\\"textAnchor\\\"\\n          >\\n            {{ refLine.name }}\\n          </svg:text>\\n        </svg:g>\\n      </svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], YAxisTicksComponent);\n    return YAxisTicksComponent;\n}());\n\nvar YAxisComponent = /** @class */ (function () {\n    function YAxisComponent() {\n        this.showGridLines = false;\n        this.yOrient = 'left';\n        this.yAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    YAxisComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    YAxisComponent.prototype.update = function () {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === 'right') {\n            this.labelOffset = 65;\n            this.transform = \"translate(\" + (this.offset + this.dims.width) + \" , 0)\";\n        }\n        else {\n            this.offset = this.offset;\n            this.transform = \"translate(\" + this.offset + \" , 0)\";\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    };\n    YAxisComponent.prototype.emitTicksWidth = function (_a) {\n        var _this = this;\n        var width = _a.width;\n        if (width !== this.labelOffset && this.yOrient === 'right') {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(function () {\n                _this.dimensionsChanged.emit({ width: width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(function () {\n                _this.dimensionsChanged.emit({ width: width });\n            }, 0);\n        }\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], YAxisComponent.prototype, \"trimTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], YAxisComponent.prototype, \"maxTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"tickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], YAxisComponent.prototype, \"ticks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"showLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"labelText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"yAxisTickInterval\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"yAxisTickCount\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], YAxisComponent.prototype, \"yOrient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"referenceLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"showRefLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"showRefLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], YAxisComponent.prototype, \"yAxisOffset\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], YAxisComponent.prototype, \"dimensionsChanged\", void 0);\n    __decorate([\n        ViewChild(YAxisTicksComponent, { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof YAxisTicksComponent !== \"undefined\" && YAxisTicksComponent) === \"function\" ? _a : Object)\n    ], YAxisComponent.prototype, \"ticksComponent\", void 0);\n    YAxisComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-y-axis]',\n            template: \"\\n    <svg:g [attr.class]=\\\"yAxisClassName\\\" [attr.transform]=\\\"transform\\\">\\n      <svg:g\\n        ngx-charts-y-axis-ticks\\n        *ngIf=\\\"yScale\\\"\\n        [trimTicks]=\\\"trimTicks\\\"\\n        [maxTickLength]=\\\"maxTickLength\\\"\\n        [tickFormatting]=\\\"tickFormatting\\\"\\n        [tickArguments]=\\\"tickArguments\\\"\\n        [tickValues]=\\\"ticks\\\"\\n        [tickStroke]=\\\"tickStroke\\\"\\n        [scale]=\\\"yScale\\\"\\n        [orient]=\\\"yOrient\\\"\\n        [showGridLines]=\\\"showGridLines\\\"\\n        [gridLineWidth]=\\\"dims.width\\\"\\n        [referenceLines]=\\\"referenceLines\\\"\\n        [showRefLines]=\\\"showRefLines\\\"\\n        [showRefLabels]=\\\"showRefLabels\\\"\\n        [height]=\\\"dims.height\\\"\\n        (dimensionsChanged)=\\\"emitTicksWidth($event)\\\"\\n      />\\n\\n      <svg:g\\n        ngx-charts-axis-label\\n        *ngIf=\\\"showLabel\\\"\\n        [label]=\\\"labelText\\\"\\n        [offset]=\\\"labelOffset\\\"\\n        [orient]=\\\"yOrient\\\"\\n        [height]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], YAxisComponent);\n    return YAxisComponent;\n}());\n\nvar AxesModule = /** @class */ (function () {\n    function AxesModule() {\n    }\n    AxesModule = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n            exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n        })\n    ], AxesModule);\n    return AxesModule;\n}());\n\nvar ColorHelper = /** @class */ (function () {\n    function ColorHelper(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(function (cs) {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    ColorHelper.prototype.generateColorScheme = function (scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(function (cs) {\n                return cs.name === scheme;\n            });\n        }\n        var colorScale;\n        if (type === 'quantile') {\n            colorScale = scaleQuantile()\n                .range(scheme.domain)\n                .domain(domain);\n        }\n        else if (type === 'ordinal') {\n            colorScale = scaleOrdinal()\n                .range(scheme.domain)\n                .domain(domain);\n        }\n        else if (type === 'linear') {\n            // linear schemes must have at least 2 colors\n            var colorDomain = scheme.domain.slice();\n            if (colorDomain.length === 1) {\n                colorDomain.push(colorDomain[0]);\n                this.colorDomain = colorDomain;\n            }\n            var points = range(0, 1, 1.0 / colorDomain.length);\n            colorScale = scaleLinear()\n                .domain(points)\n                .range(colorDomain);\n        }\n        return colorScale;\n    };\n    ColorHelper.prototype.getColor = function (value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === 'linear') {\n            var valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            var formattedValue_1 = value.toString();\n            var found = void 0; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(function (mapping) {\n                    return mapping.name.toLowerCase() === formattedValue_1.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    };\n    ColorHelper.prototype.getLinearGradientStops = function (value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        var valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        var colorValueScale = scaleBand()\n            .domain(this.colorDomain)\n            .range([0, 1]);\n        var endColor = this.getColor(value);\n        // generate the stops\n        var startVal = valueScale(start);\n        var startColor = this.getColor(start);\n        var endVal = valueScale(value);\n        var i = 1;\n        var currentVal = startVal;\n        var stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            var color = this.colorDomain[i];\n            var offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color: color,\n                offset: offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (var _i = 0, stops_1 = stops; _i < stops_1.length; _i++) {\n                    var s = stops_1[_i];\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    };\n    return ColorHelper;\n}());\n\nvar CircleSeriesComponent = /** @class */ (function () {\n    function CircleSeriesComponent() {\n        this.type = 'standard';\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n    }\n    CircleSeriesComponent.prototype.ngOnInit = function () {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = \"url(#\" + this.gradientId + \")\";\n    };\n    CircleSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    CircleSeriesComponent.prototype.update = function () {\n        this.circle = this.getActiveCircle();\n    };\n    CircleSeriesComponent.prototype.getActiveCircle = function () {\n        var _this = this;\n        var indexActiveDataPoint = this.data.series.findIndex(function (d) {\n            var label = d.name;\n            return label && _this.visibleValue && label.toString() === _this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    };\n    CircleSeriesComponent.prototype.mapDataPointToCircle = function (d, i) {\n        var seriesName = this.data.name;\n        var value = d.value;\n        var label = d.name;\n        var tooltipLabel = formatLabel(label);\n        var cx;\n        if (this.scaleType === 'time') {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === 'linear') {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        var cy = this.yScale(this.type === 'standard' ? value : d.d1);\n        var radius = 5;\n        var height = this.yScale.range()[0] - cy;\n        var opacity = 1;\n        var color;\n        if (this.colors.scaleType === 'linear') {\n            if (this.type === 'standard') {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        var data = Object.assign({}, d, {\n            series: seriesName,\n            value: value,\n            name: label\n        });\n        return {\n            classNames: [\"circle-data-\" + i],\n            value: value,\n            label: label,\n            data: data,\n            cx: cx,\n            cy: cy,\n            radius: radius,\n            height: height,\n            tooltipLabel: tooltipLabel,\n            color: color,\n            opacity: opacity,\n            seriesName: seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    };\n    CircleSeriesComponent.prototype.getTooltipText = function (_a) {\n        var tooltipLabel = _a.tooltipLabel, value = _a.value, seriesName = _a.seriesName, min$$1 = _a.min, max$$1 = _a.max;\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + seriesName + \" \\u2022 \" + tooltipLabel + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + value.toLocaleString() + this.getTooltipMinMaxText(min$$1, max$$1) + \"</span>\\n    \";\n    };\n    CircleSeriesComponent.prototype.getTooltipMinMaxText = function (min$$1, max$$1) {\n        if (min$$1 !== undefined || max$$1 !== undefined) {\n            var result = ' (';\n            if (min$$1 !== undefined) {\n                if (max$$1 === undefined) {\n                    result += '≥';\n                }\n                result += min$$1.toLocaleString();\n                if (max$$1 !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max$$1 !== undefined) {\n                result += '≤';\n            }\n            if (max$$1 !== undefined) {\n                result += max$$1.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    };\n    CircleSeriesComponent.prototype.getGradientStops = function (color) {\n        return [\n            {\n                offset: 0,\n                color: color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color: color,\n                opacity: 1\n            }\n        ];\n    };\n    CircleSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    CircleSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    CircleSeriesComponent.prototype.activateCircle = function () {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    };\n    CircleSeriesComponent.prototype.deactivateCircle = function () {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"type\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof ColorHelper !== \"undefined\" && ColorHelper) === \"function\" ? _a : Object)\n    ], CircleSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"visibleValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], CircleSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], CircleSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_b = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _b : Object)\n    ], CircleSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleSeriesComponent.prototype, \"deactivate\", void 0);\n    CircleSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-circle-series]',\n            template: \"\\n    <svg:g *ngIf=\\\"circle\\\">\\n      <defs>\\n        <svg:g\\n          ngx-charts-svg-linear-gradient\\n          orientation=\\\"vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"circle.gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:rect\\n        *ngIf=\\\"barVisible && type === 'standard'\\\"\\n        [@animationState]=\\\"'active'\\\"\\n        [attr.x]=\\\"circle.cx - circle.radius\\\"\\n        [attr.y]=\\\"circle.cy\\\"\\n        [attr.width]=\\\"circle.radius * 2\\\"\\n        [attr.height]=\\\"circle.height\\\"\\n        [attr.fill]=\\\"gradientFill\\\"\\n        class=\\\"tooltip-bar\\\"\\n      />\\n      <svg:g\\n        ngx-charts-circle\\n        class=\\\"circle\\\"\\n        [cx]=\\\"circle.cx\\\"\\n        [cy]=\\\"circle.cy\\\"\\n        [r]=\\\"circle.radius\\\"\\n        [fill]=\\\"circle.color\\\"\\n        [class.active]=\\\"isActive({ name: circle.seriesName })\\\"\\n        [pointerEvents]=\\\"circle.value === 0 ? 'none' : 'all'\\\"\\n        [data]=\\\"circle.value\\\"\\n        [classNames]=\\\"circle.classNames\\\"\\n        (select)=\\\"onClick(circle.data)\\\"\\n        (activate)=\\\"activateCircle()\\\"\\n        (deactivate)=\\\"deactivateCircle()\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"'top'\\\"\\n        [tooltipType]=\\\"'tooltip'\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"circle.data\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':enter', [\n                        style({\n                            opacity: 0\n                        }),\n                        animate(250, style({ opacity: 1 }))\n                    ])\n                ])\n            ]\n        })\n    ], CircleSeriesComponent);\n    return CircleSeriesComponent;\n}());\n\nvar CircleComponent = /** @class */ (function () {\n    function CircleComponent() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    CircleComponent.prototype.onClick = function () {\n        this.select.emit(this.data);\n    };\n    CircleComponent.prototype.onMouseEnter = function () {\n        this.activate.emit(this.data);\n    };\n    CircleComponent.prototype.onMouseLeave = function () {\n        this.deactivate.emit(this.data);\n    };\n    CircleComponent.prototype.ngOnChanges = function (changes) {\n        this.classNames = Array.isArray(this.classNames) ?\n            this.classNames.join(' ') :\n            '';\n        this.classNames += 'circle';\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"cx\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"cy\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"r\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"stroke\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"classNames\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"circleOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"pointerEvents\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CircleComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CircleComponent.prototype, \"onClick\", null);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CircleComponent.prototype, \"onMouseEnter\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CircleComponent.prototype, \"onMouseLeave\", null);\n    CircleComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-circle]',\n            template: \"\\n    <svg:circle\\n      [attr.cx]=\\\"cx\\\"\\n      [attr.cy]=\\\"cy\\\"\\n      [attr.r]=\\\"r\\\"\\n      [attr.fill]=\\\"fill\\\"\\n      [attr.stroke]=\\\"stroke\\\"\\n      [attr.opacity]=\\\"circleOpacity\\\"\\n      [attr.class]=\\\"classNames\\\"\\n      [attr.pointer-events]=\\\"pointerEvents\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], CircleComponent);\n    return CircleComponent;\n}());\n\nvar GridPanelComponent = /** @class */ (function () {\n    function GridPanelComponent() {\n    }\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelComponent.prototype, \"path\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelComponent.prototype, \"x\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelComponent.prototype, \"y\", void 0);\n    GridPanelComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-grid-panel]',\n            template: \"\\n    <svg:rect\\n      [attr.height]=\\\"height\\\"\\n      [attr.width]=\\\"width\\\"\\n      [attr.x]=\\\"x\\\"\\n      [attr.y]=\\\"y\\\"\\n      stroke=\\\"none\\\"\\n      class=\\\"gridpanel\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], GridPanelComponent);\n    return GridPanelComponent;\n}());\n\nvar GridPanelSeriesComponent = /** @class */ (function () {\n    function GridPanelSeriesComponent() {\n    }\n    GridPanelSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    GridPanelSeriesComponent.prototype.update = function () {\n        this.gridPanels = this.getGridPanels();\n    };\n    GridPanelSeriesComponent.prototype.getGridPanels = function () {\n        var _this = this;\n        return this.data.map(function (d) {\n            var offset;\n            var width;\n            var height;\n            var x;\n            var y;\n            var className = 'odd';\n            if (_this.orient === 'vertical') {\n                var position = _this.xScale(d.name);\n                var positionIndex = Number.parseInt((position / _this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = 'even';\n                }\n                offset = _this.xScale.bandwidth() * _this.xScale.paddingInner();\n                width = _this.xScale.bandwidth() + offset;\n                height = _this.dims.height;\n                x = _this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (_this.orient === 'horizontal') {\n                var position = _this.yScale(d.name);\n                var positionIndex = Number.parseInt((position / _this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = 'even';\n                }\n                offset = _this.yScale.bandwidth() * _this.yScale.paddingInner();\n                width = _this.dims.width;\n                height = _this.yScale.bandwidth() + offset;\n                x = 0;\n                y = _this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height: height,\n                width: width,\n                x: x,\n                y: y\n            };\n        });\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelSeriesComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GridPanelSeriesComponent.prototype, \"orient\", void 0);\n    GridPanelSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-grid-panel-series]',\n            template: \"\\n    <svg:g ngx-charts-grid-panel *ngFor=\\\"let gridPanel of gridPanels\\\"\\n      [height]=\\\"gridPanel.height\\\"\\n      [width]=\\\"gridPanel.width\\\"\\n      [x]=\\\"gridPanel.x\\\"\\n      [y]=\\\"gridPanel.y\\\"\\n      [class.grid-panel]=\\\"true\\\"\\n      [class.odd]=\\\"gridPanel.class === 'odd'\\\"\\n      [class.even]=\\\"gridPanel.class === 'even'\\\">\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], GridPanelSeriesComponent);\n    return GridPanelSeriesComponent;\n}());\n\nvar SvgLinearGradientComponent = /** @class */ (function () {\n    function SvgLinearGradientComponent() {\n        this.orientation = 'vertical';\n    }\n    SvgLinearGradientComponent.prototype.ngOnChanges = function (changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === 'horizontal') {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === 'vertical') {\n            this.y1 = '100%';\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SvgLinearGradientComponent.prototype, \"orientation\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SvgLinearGradientComponent.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], SvgLinearGradientComponent.prototype, \"stops\", void 0);\n    SvgLinearGradientComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-svg-linear-gradient]',\n            template: \"\\n    <svg:linearGradient\\n      [id]=\\\"name\\\"\\n      [attr.x1]=\\\"x1\\\"\\n      [attr.y1]=\\\"y1\\\"\\n      [attr.x2]=\\\"x2\\\"\\n      [attr.y2]=\\\"y2\\\">\\n      <svg:stop *ngFor=\\\"let stop of stops\\\"\\n        [attr.offset]=\\\"stop.offset + '%'\\\"\\n        [style.stop-color]=\\\"stop.color\\\"\\n        [style.stop-opacity]=\\\"stop.opacity\\\"\\n      />\\n    </svg:linearGradient>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], SvgLinearGradientComponent);\n    return SvgLinearGradientComponent;\n}());\n\nvar SvgRadialGradientComponent = /** @class */ (function () {\n    function SvgRadialGradientComponent() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    Object.defineProperty(SvgRadialGradientComponent.prototype, \"stops\", {\n        get: function () {\n            return this.stopsInput || this.stopsDefault;\n        },\n        set: function (value) {\n            this.stopsInput = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SvgRadialGradientComponent.prototype.ngOnChanges = function (changes) {\n        this.r = '30%';\n        if (('color' in changes) ||\n            ('startOpacity' in changes) ||\n            ('endOpacity' in changes)) {\n            this.stopsDefault = [{\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                }, {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }];\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], SvgRadialGradientComponent.prototype, \"color\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], SvgRadialGradientComponent.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], SvgRadialGradientComponent.prototype, \"startOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SvgRadialGradientComponent.prototype, \"endOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], SvgRadialGradientComponent.prototype, \"cx\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], SvgRadialGradientComponent.prototype, \"cy\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], SvgRadialGradientComponent.prototype, \"stops\", null);\n    SvgRadialGradientComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-svg-radial-gradient]',\n            template: \"\\n    <svg:radialGradient\\n      [id]=\\\"name\\\"\\n      [attr.cx]=\\\"cx\\\"\\n      [attr.cy]=\\\"cy\\\"\\n      [attr.r]=\\\"r\\\"\\n      gradientUnits=\\\"userSpaceOnUse\\\">\\n      <svg:stop *ngFor=\\\"let stop of stops\\\"\\n        [attr.offset]=\\\"stop.offset + '%'\\\"\\n        [style.stop-color]=\\\"stop.color\\\"\\n        [style.stop-opacity]=\\\"stop.opacity\\\"\\n      />\\n    </svg:radialGradient>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], SvgRadialGradientComponent);\n    return SvgRadialGradientComponent;\n}());\n\nvar Timeline = /** @class */ (function () {\n    function Timeline(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    Timeline.prototype.ngOnChanges = function (changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    };\n    Timeline.prototype.update = function () {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        var offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = \"translate(0 , \" + offsetY + \")\";\n        this.filterId = 'filter' + id().toString();\n        this.filter = \"url(#\" + this.filterId + \")\";\n        this.cd.markForCheck();\n    };\n    Timeline.prototype.getXDomain = function () {\n        var values = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        var domain = [];\n        if (this.scaleType === 'time') {\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            domain = [min$$1, max$$1];\n        }\n        else if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            domain = [min$$1, max$$1];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    };\n    Timeline.prototype.getXScale = function () {\n        var scale;\n        if (this.scaleType === 'time') {\n            scale = scaleTime()\n                .range([0, this.dims.width])\n                .domain(this.xDomain);\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear()\n                .range([0, this.dims.width])\n                .domain(this.xDomain);\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint()\n                .range([0, this.dims.width])\n                .padding(0.1)\n                .domain(this.xDomain);\n        }\n        return scale;\n    };\n    Timeline.prototype.addBrush = function () {\n        var _this = this;\n        if (this.brush)\n            return;\n        var height = this.height;\n        var width = this.view[0];\n        this.brush = brushX()\n            .extent([[0, 0], [width, height]])\n            .on('brush end', function () {\n            var selection = event.selection || _this.xScale.range();\n            var newDomain = selection.map(_this.xScale.invert);\n            _this.onDomainChange.emit(newDomain);\n            _this.cd.markForCheck();\n        });\n        select(this.element)\n            .select('.brush')\n            .call(this.brush);\n    };\n    Timeline.prototype.updateBrush = function () {\n        if (!this.brush)\n            return;\n        var height = this.height;\n        var width = this.view[0];\n        this.brush.extent([[0, 0], [width, height]]);\n        select(this.element)\n            .select('.brush')\n            .call(this.brush);\n        select(this.element).select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    };\n    Timeline.prototype.getDims = function () {\n        var width = this.view[0];\n        var dims = {\n            width: width,\n            height: this.height\n        };\n        return dims;\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"view\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"state\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"results\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"scheme\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"customColors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"miniChart\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"autoScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], Timeline.prototype, \"height\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], Timeline.prototype, \"onDomainChange\", void 0);\n    Timeline = __decorate([\n        Component({\n            selector: 'g[ngx-charts-timeline]',\n            template: \"\\n    <svg:g\\n      class=\\\"timeline\\\"\\n      [attr.transform]=\\\"transform\\\">\\n      <svg:filter [attr.id]=\\\"filterId\\\">\\n        <svg:feColorMatrix in=\\\"SourceGraphic\\\"\\n            type=\\\"matrix\\\"\\n            values=\\\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\\" />\\n      </svg:filter>\\n      <svg:g class=\\\"embedded-chart\\\">\\n        <ng-content></ng-content>\\n      </svg:g>\\n      <svg:rect x=\\\"0\\\"\\n        [attr.width]=\\\"view[0]\\\"\\n        y=\\\"0\\\"\\n        [attr.height]=\\\"height\\\"\\n        class=\\\"brush-background\\\"\\n      />\\n      <svg:g class=\\\"brush\\\"></svg:g>\\n    </svg:g>\\n  \",\n            styles: [\".timeline .brush-background{fill:rgba(0,0,0,.05)}.timeline .brush .selection{fill:rgba(0,0,0,.1);stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object, typeof (_b = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _b : Object])\n    ], Timeline);\n    return Timeline;\n}());\n\nvar AreaComponent = /** @class */ (function () {\n    function AreaComponent(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.hasGradient = false;\n        this.element = element.nativeElement;\n    }\n    AreaComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    };\n    AreaComponent.prototype.update = function () {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = \"url(#\" + this.gradientId + \")\";\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    };\n    AreaComponent.prototype.loadAnimation = function () {\n        this.areaPath = this.startingPath;\n        setTimeout(this.update.bind(this), 100);\n    };\n    AreaComponent.prototype.updatePathEl = function () {\n        var node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750)\n                .attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    };\n    AreaComponent.prototype.getGradient = function () {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"path\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"startingPath\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"opacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"startOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"endOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"activeLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaComponent.prototype, \"stops\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], AreaComponent.prototype, \"select\", void 0);\n    AreaComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-area]',\n            template: \"\\n    <svg:defs *ngIf=\\\"gradient\\\">\\n      <svg:g ngx-charts-svg-linear-gradient\\n        orientation=\\\"vertical\\\"\\n        [name]=\\\"gradientId\\\"\\n        [stops]=\\\"gradientStops\\\"\\n      />\\n    </svg:defs>\\n    <svg:path\\n      class=\\\"area\\\"\\n      [attr.d]=\\\"areaPath\\\"\\n      [attr.fill]=\\\"gradient ? gradientFill : fill\\\"\\n      [style.opacity]=\\\"opacity\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], AreaComponent);\n    return AreaComponent;\n}());\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nvar root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nvar MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles, cancelable) {\n    if (bubbles === void 0) { bubbles = false; }\n    if (cancelable === void 0) { cancelable = true; }\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof (MouseEvent) === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles: bubbles, cancelable: cancelable });\n    }\n    else {\n        // IE\n        var event$$1 = document.createEvent('MouseEvent');\n        event$$1.initEvent(name, bubbles, cancelable);\n        return event$$1;\n    }\n}\n\nvar TooltipArea = /** @class */ (function () {\n    function TooltipArea() {\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    TooltipArea.prototype.getValues = function (xVal) {\n        var results = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var item = group.series.find(function (d) { return d.name.toString() === xVal.toString(); });\n            var groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                var label = item.name;\n                var val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                var color = void 0;\n                if (this.colors.scaleType === 'linear') {\n                    var v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                var data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color: color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    };\n    TooltipArea.prototype.mouseMove = function (event$$1) {\n        var xPos = event$$1.pageX - event$$1.target.getBoundingClientRect().left;\n        var closestIndex = this.findClosestPointIndex(xPos);\n        var closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            var ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    };\n    TooltipArea.prototype.findClosestPointIndex = function (xPos) {\n        var minIndex = 0;\n        var maxIndex = this.xSet.length - 1;\n        var minDiff = Number.MAX_VALUE;\n        var closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            var currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            var currentElement = this.xScale(this.xSet[currentIndex]);\n            var curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    };\n    TooltipArea.prototype.showTooltip = function () {\n        var event$$1 = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event$$1);\n    };\n    TooltipArea.prototype.hideTooltip = function () {\n        var event$$1 = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event$$1);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    };\n    TooltipArea.prototype.getToolTipText = function (tooltipItem) {\n        var result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"xSet\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"results\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipArea.prototype, \"showPercentage\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TooltipArea.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], TooltipArea.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"hover\", void 0);\n    __decorate([\n        ViewChild('tooltipAnchor', { static: false }),\n        __metadata(\"design:type\", Object)\n    ], TooltipArea.prototype, \"tooltipAnchor\", void 0);\n    TooltipArea = __decorate([\n        Component({\n            selector: 'g[ngx-charts-tooltip-area]',\n            template: \"\\n    <svg:g>\\n      <svg:rect\\n        class=\\\"tooltip-area\\\"\\n        [attr.x]=\\\"0\\\"\\n        y=\\\"0\\\"\\n        [attr.width]=\\\"dims.width\\\"\\n        [attr.height]=\\\"dims.height\\\"\\n        style=\\\"opacity: 0; cursor: 'auto';\\\"\\n        (mousemove)=\\\"mouseMove($event)\\\"\\n        (mouseleave)=\\\"hideTooltip()\\\"\\n      />\\n      <xhtml:ng-template #defaultTooltipTemplate let-model=\\\"model\\\">\\n        <xhtml:div class=\\\"area-tooltip-container\\\">\\n          <xhtml:div *ngFor=\\\"let tooltipItem of model\\\" class=\\\"tooltip-item\\\">\\n            <span class=\\\"tooltip-item-color\\\" [style.background-color]=\\\"tooltipItem.color\\\"> </span>\\n            {{ getToolTipText(tooltipItem) }}\\n          </xhtml:div>\\n        </xhtml:div>\\n      </xhtml:ng-template>\\n      <svg:rect\\n        #tooltipAnchor\\n        [@animationState]=\\\"anchorOpacity !== 0 ? 'active' : 'inactive'\\\"\\n        class=\\\"tooltip-anchor\\\"\\n        [attr.x]=\\\"anchorPos\\\"\\n        y=\\\"0\\\"\\n        [attr.width]=\\\"1\\\"\\n        [attr.height]=\\\"dims.height\\\"\\n        [style.opacity]=\\\"anchorOpacity\\\"\\n        [style.pointer-events]=\\\"'none'\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"'right'\\\"\\n        [tooltipType]=\\\"'tooltip'\\\"\\n        [tooltipSpacing]=\\\"15\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\\\"\\n        [tooltipContext]=\\\"anchorValues\\\"\\n        [tooltipImmediateExit]=\\\"true\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition('inactive => active', [\n                        style({\n                            opacity: 0\n                        }),\n                        animate(250, style({ opacity: 0.7 }))\n                    ]),\n                    transition('active => inactive', [\n                        style({\n                            opacity: 0.7\n                        }),\n                        animate(250, style({ opacity: 0 }))\n                    ])\n                ])\n            ]\n        })\n    ], TooltipArea);\n    return TooltipArea;\n}());\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n *\n * @export\n * @param {any} countFrom\n * @param {any} countTo\n * @param {any} countDecimals\n * @param {any} countDuration\n * @param {any} callback\n * @returns\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    var startVal = Number(countFrom);\n    var endVal = Number(countTo);\n    var countDown = startVal > endVal;\n    var decimals = Math.max(0, countDecimals);\n    var dec = Math.pow(10, decimals);\n    var duration = Number(countDuration) * 1000;\n    var startTime;\n    function runCount(timestamp) {\n        var frameVal;\n        var progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        var tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress: progress,\n            timestamp: timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(function (val) { return runCount(val); });\n        }\n    }\n    return requestAnimationFrame(function (timestamp) {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n * @param {any} countTo\n * @returns\n */\nfunction decimalChecker(countTo) {\n    var endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n * @class CountUpDirective\n */\nvar CountUpDirective = /** @class */ (function () {\n    function CountUpDirective(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    Object.defineProperty(CountUpDirective.prototype, \"countDecimals\", {\n        get: function () {\n            if (this._countDecimals)\n                return this._countDecimals;\n            return decimalChecker(this.countTo);\n        },\n        set: function (val) {\n            this._countDecimals = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CountUpDirective.prototype, \"countTo\", {\n        get: function () {\n            return this._countTo;\n        },\n        set: function (val) {\n            this._countTo = parseFloat(val);\n            this.start();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CountUpDirective.prototype, \"countFrom\", {\n        get: function () {\n            return this._countFrom;\n        },\n        set: function (val) {\n            this._countFrom = parseFloat(val);\n            this.start();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CountUpDirective.prototype.ngOnDestroy = function () {\n        cancelAnimationFrame(this.animationReq);\n    };\n    CountUpDirective.prototype.start = function () {\n        var _this = this;\n        cancelAnimationFrame(this.animationReq);\n        var valueFormatting = this.valueFormatting || (function (value) { return \"\" + _this.countPrefix + value.toLocaleString() + _this.countSuffix; });\n        var callback = function (_a) {\n            var value = _a.value, progress = _a.progress, finished = _a.finished;\n            _this.value = valueFormatting(value);\n            _this.cd.markForCheck();\n            if (!finished)\n                _this.countChange.emit({ value: _this.value, progress: progress });\n            if (finished)\n                _this.countFinish.emit({ value: _this.value, progress: progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], CountUpDirective.prototype, \"countDuration\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CountUpDirective.prototype, \"countPrefix\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CountUpDirective.prototype, \"countSuffix\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CountUpDirective.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], CountUpDirective.prototype, \"countDecimals\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], CountUpDirective.prototype, \"countTo\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], CountUpDirective.prototype, \"countFrom\", null);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CountUpDirective.prototype, \"countChange\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CountUpDirective.prototype, \"countFinish\", void 0);\n    CountUpDirective = __decorate([\n        Component({\n            selector: '[ngx-charts-count-up]',\n            template: \"{{value}}\"\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _a : Object, typeof (_b = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _b : Object])\n    ], CountUpDirective);\n    return CountUpDirective;\n}());\n\nvar COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nvar ChartCommonModule = /** @class */ (function () {\n    function ChartCommonModule() {\n    }\n    ChartCommonModule = __decorate([\n        NgModule({\n            imports: [\n                CommonModule,\n                AxesModule,\n                TooltipModule\n            ],\n            declarations: COMPONENTS.slice(),\n            exports: [\n                CommonModule,\n                AxesModule,\n                TooltipModule\n            ].concat(COMPONENTS)\n        })\n    ], ChartCommonModule);\n    return ChartCommonModule;\n}());\n\nfunction calculateViewDimensions(_a) {\n    var width = _a.width, height = _a.height, margins = _a.margins, _b = _a.showXAxis, showXAxis = _b === void 0 ? false : _b, _c = _a.showYAxis, showYAxis = _c === void 0 ? false : _c, _d = _a.xAxisHeight, xAxisHeight = _d === void 0 ? 0 : _d, _e = _a.yAxisWidth, yAxisWidth = _e === void 0 ? 0 : _e, _f = _a.showXLabel, showXLabel = _f === void 0 ? false : _f, _g = _a.showYLabel, showYLabel = _g === void 0 ? false : _g, _h = _a.showLegend, showLegend = _h === void 0 ? false : _h, _j = _a.legendType, legendType = _j === void 0 ? 'ordinal' : _j, _k = _a.legendPosition, legendPosition = _k === void 0 ? 'right' : _k, _l = _a.columns, columns = _l === void 0 ? 12 : _l;\n    var xOffset = margins[3];\n    var chartWidth = width;\n    var chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === 'right') {\n        if (legendType === 'ordinal') {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = chartWidth * columns / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            var offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            var offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n * @param results\n */\nfunction getUniqueXDomainValues(results) {\n    var valueSet = new Set();\n    for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n        var result = results_1[_i];\n        for (var _a = 0, _b = result.series; _a < _b.length; _a++) {\n            var d = _b[_a];\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @param values\n * @returns {string} 'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType) {\n    if (checkDateType === void 0) { checkDateType = true; }\n    if (checkDateType) {\n        var allDates = values.every(function (value) { return value instanceof Date; });\n        if (allDates) {\n            return 'time';\n        }\n    }\n    var allNumbers = values.every(function (value) { return typeof value === 'number'; });\n    if (allNumbers) {\n        return 'linear';\n    }\n    return 'ordinal';\n}\n\nvar AreaChartComponent = /** @class */ (function (_super) {\n    __extends(AreaChartComponent, _super);\n    function AreaChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.baseValue = 'auto';\n        _this.showGridLines = true;\n        _this.curve = curveLinear;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.tooltipDisabled = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.timelineHeight = 50;\n        _this.timelinePadding = 10;\n        return _this;\n    }\n    AreaChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \", \" + this.margin[0] + \")\";\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = \"url(#\" + this.clipPathId + \")\";\n    };\n    AreaChartComponent.prototype.updateTimeline = function () {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = \"translate(\" + this.dims.xOffset + \", \" + -this.margin[2] + \")\";\n        }\n    };\n    AreaChartComponent.prototype.getXDomain = function () {\n        var values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        var domain = [];\n        if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n        }\n        var min$$1;\n        var max$$1;\n        if (this.scaleType === 'time' || this.scaleType === 'linear') {\n            min$$1 = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, values);\n            max$$1 = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, values);\n        }\n        if (this.scaleType === 'time') {\n            domain = [new Date(min$$1), new Date(max$$1)];\n            this.xSet = values.slice().sort(function (a, b) {\n                var aDate = a.getTime();\n                var bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === 'linear') {\n            domain = [min$$1, max$$1];\n            this.xSet = values.slice().sort(function (a, b) { return a - b; });\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    };\n    AreaChartComponent.prototype.getYDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        var values = domain.slice();\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        var min$$1 = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, values);\n        var max$$1 = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, values);\n        return [min$$1, max$$1];\n    };\n    AreaChartComponent.prototype.getSeriesDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    AreaChartComponent.prototype.getXScale = function (domain, width) {\n        var scale;\n        if (this.scaleType === 'time') {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartComponent.prototype.getYScale = function (domain, height) {\n        var scale = scaleLinear()\n            .range([height, 0])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartComponent.prototype.getScaleType = function (values) {\n        var date = true;\n        var num = true;\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value = values_1[_i];\n            if (!this.isDate(value)) {\n                date = false;\n            }\n            if (typeof value !== 'number') {\n                num = false;\n            }\n        }\n        if (date) {\n            return 'time';\n        }\n        if (num) {\n            return 'linear';\n        }\n        return 'ordinal';\n    };\n    AreaChartComponent.prototype.isDate = function (value) {\n        if (value instanceof Date) {\n            return true;\n        }\n        return false;\n    };\n    AreaChartComponent.prototype.updateDomain = function (domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    };\n    AreaChartComponent.prototype.updateHoveredVertical = function (item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    };\n    AreaChartComponent.prototype.hideCircles = function () {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    };\n    AreaChartComponent.prototype.onClick = function (data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    };\n    AreaChartComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    AreaChartComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    AreaChartComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    AreaChartComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    AreaChartComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    AreaChartComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"state\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"baseValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"autoScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"timeline\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"xScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartComponent.prototype, \"yScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], AreaChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], AreaChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], AreaChartComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ContentChild('seriesTooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _d : Object)\n    ], AreaChartComponent.prototype, \"seriesTooltipTemplate\", void 0);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AreaChartComponent.prototype, \"hideCircles\", null);\n    AreaChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-area-chart',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [baseValue]=\\\"baseValue\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [baseValue]=\\\"baseValue\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], AreaChartComponent);\n    return AreaChartComponent;\n}(BaseChartComponent));\n\nvar AreaChartNormalizedComponent = /** @class */ (function (_super) {\n    __extends(AreaChartNormalizedComponent, _super);\n    function AreaChartNormalizedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.showGridLines = true;\n        _this.curve = curveLinear;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.tooltipDisabled = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.timelineHeight = 50;\n        _this.timelinePadding = 10;\n        return _this;\n    }\n    AreaChartNormalizedComponent.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        var _loop_1 = function (i) {\n            var val = this_1.xSet[i];\n            var d0 = 0;\n            var total = 0;\n            for (var _i = 0, _a = this_1.results; _i < _a.length; _i++) {\n                var group = _a[_i];\n                var d = group.series.find(function (item) {\n                    var a = item.name;\n                    var b = val;\n                    if (_this.scaleType === 'time') {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (var _b = 0, _c = this_1.results; _b < _c.length; _b++) {\n                var group = _c[_b];\n                var d = group.series.find(function (item) {\n                    var a = item.name;\n                    var b = val;\n                    if (_this.scaleType === 'time') {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0: d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.xSet.length; i++) {\n            _loop_1(i);\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = \"url(#\" + this.clipPathId + \")\";\n    };\n    AreaChartNormalizedComponent.prototype.updateTimeline = function () {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = \"translate(\" + this.dims.xOffset + \", \" + -this.margin[2] + \")\";\n        }\n    };\n    AreaChartNormalizedComponent.prototype.getXDomain = function () {\n        var values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        var domain = [];\n        if (this.scaleType === 'time') {\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            domain = [new Date(min$$1), new Date(max$$1)];\n            this.xSet = values.slice().sort(function (a, b) {\n                var aDate = a.getTime();\n                var bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            domain = [min$$1, max$$1];\n            this.xSet = values.slice().sort(function (a, b) { return a - b; });\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    };\n    AreaChartNormalizedComponent.prototype.getYDomain = function () {\n        return [0, 100];\n    };\n    AreaChartNormalizedComponent.prototype.getSeriesDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    AreaChartNormalizedComponent.prototype.getXScale = function (domain, width) {\n        var scale;\n        if (this.scaleType === 'time') {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartNormalizedComponent.prototype.getYScale = function (domain, height) {\n        var scale = scaleLinear()\n            .range([height, 0])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartNormalizedComponent.prototype.updateDomain = function (domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    };\n    AreaChartNormalizedComponent.prototype.updateHoveredVertical = function (item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    };\n    AreaChartNormalizedComponent.prototype.hideCircles = function () {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    };\n    AreaChartNormalizedComponent.prototype.onClick = function (data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    };\n    AreaChartNormalizedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    AreaChartNormalizedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    AreaChartNormalizedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    AreaChartNormalizedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    AreaChartNormalizedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    AreaChartNormalizedComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartNormalizedComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartNormalizedComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartNormalizedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartNormalizedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"timeline\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartNormalizedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartNormalizedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartNormalizedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartNormalizedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartNormalizedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartNormalizedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartNormalizedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartNormalizedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], AreaChartNormalizedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], AreaChartNormalizedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], AreaChartNormalizedComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ContentChild('seriesTooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _d : Object)\n    ], AreaChartNormalizedComponent.prototype, \"seriesTooltipTemplate\", void 0);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AreaChartNormalizedComponent.prototype, \"hideCircles\", null);\n    AreaChartNormalizedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-area-chart-normalized',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [gradient]=\\\"gradient\\\"\\n              normalized=\\\"true\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [showPercentage]=\\\"true\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                type=\\\"stacked\\\"\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            normalized=\\\"true\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], AreaChartNormalizedComponent);\n    return AreaChartNormalizedComponent;\n}(BaseChartComponent));\n\nvar AreaChartStackedComponent = /** @class */ (function (_super) {\n    __extends(AreaChartStackedComponent, _super);\n    function AreaChartStackedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.showGridLines = true;\n        _this.curve = curveLinear;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.tooltipDisabled = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.timelineHeight = 50;\n        _this.timelinePadding = 10;\n        return _this;\n    }\n    AreaChartStackedComponent.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        var _loop_1 = function (i) {\n            var val = this_1.xSet[i];\n            var d0 = 0;\n            for (var _i = 0, _a = this_1.results; _i < _a.length; _i++) {\n                var group = _a[_i];\n                var d = group.series.find(function (item) {\n                    var a = item.name;\n                    var b = val;\n                    if (_this.scaleType === 'time') {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0: d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.xSet.length; i++) {\n            _loop_1(i);\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = \"url(#\" + this.clipPathId + \")\";\n    };\n    AreaChartStackedComponent.prototype.updateTimeline = function () {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = \"translate(\" + this.dims.xOffset + \", \" + -this.margin[2] + \")\";\n        }\n    };\n    AreaChartStackedComponent.prototype.getXDomain = function () {\n        var values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        var domain = [];\n        if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n        }\n        var min$$1;\n        var max$$1;\n        if (this.scaleType === 'time' || this.scaleType === 'linear') {\n            min$$1 = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, values);\n            max$$1 = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, values);\n        }\n        if (this.scaleType === 'time') {\n            domain = [new Date(min$$1), new Date(max$$1)];\n            this.xSet = values.slice().sort(function (a, b) {\n                var aDate = a.getTime();\n                var bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === 'linear') {\n            domain = [min$$1, max$$1];\n            this.xSet = values.slice().sort(function (a, b) { return a - b; });\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    };\n    AreaChartStackedComponent.prototype.getYDomain = function () {\n        var _this = this;\n        var domain = [];\n        var _loop_2 = function (i) {\n            var val = this_2.xSet[i];\n            var sum = 0;\n            for (var _i = 0, _a = this_2.results; _i < _a.length; _i++) {\n                var group = _a[_i];\n                var d = group.series.find(function (item) {\n                    var a = item.name;\n                    var b = val;\n                    if (_this.scaleType === 'time') {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.xSet.length; i++) {\n            _loop_2(i);\n        }\n        var min$$1 = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, [0].concat(domain));\n        var max$$1 = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, domain);\n        return [min$$1, max$$1];\n    };\n    AreaChartStackedComponent.prototype.getSeriesDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    AreaChartStackedComponent.prototype.getXScale = function (domain, width) {\n        var scale;\n        if (this.scaleType === 'time') {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartStackedComponent.prototype.getYScale = function (domain, height) {\n        var scale = scaleLinear()\n            .range([height, 0])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    AreaChartStackedComponent.prototype.updateDomain = function (domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    };\n    AreaChartStackedComponent.prototype.updateHoveredVertical = function (item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    };\n    AreaChartStackedComponent.prototype.hideCircles = function () {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    };\n    AreaChartStackedComponent.prototype.onClick = function (data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    };\n    AreaChartStackedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    AreaChartStackedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    AreaChartStackedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    AreaChartStackedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    AreaChartStackedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    AreaChartStackedComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartStackedComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    AreaChartStackedComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartStackedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartStackedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"timeline\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartStackedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AreaChartStackedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartStackedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartStackedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartStackedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaChartStackedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaChartStackedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"xScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaChartStackedComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartStackedComponent.prototype, \"yScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], AreaChartStackedComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], AreaChartStackedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], AreaChartStackedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], AreaChartStackedComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ContentChild('seriesTooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _d : Object)\n    ], AreaChartStackedComponent.prototype, \"seriesTooltipTemplate\", void 0);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AreaChartStackedComponent.prototype, \"hideCircles\", null);\n    AreaChartStackedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-area-chart-stacked',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              stacked=\\\"true\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                type=\\\"stacked\\\"\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            stacked=\\\"true\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], AreaChartStackedComponent);\n    return AreaChartStackedComponent;\n}(BaseChartComponent));\n\nvar AreaSeriesComponent = /** @class */ (function () {\n    function AreaSeriesComponent() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    AreaSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    AreaSeriesComponent.prototype.update = function () {\n        var _this = this;\n        this.updateGradient();\n        var currentArea;\n        var startingArea;\n        var xProperty = function (d) {\n            var label = d.name;\n            return _this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0(function (d, i) { return _this.yScale(d.d0); })\n                .y1(function (d, i) { return _this.yScale(d.d1); });\n            startingArea = area()\n                .x(xProperty)\n                .y0(function (d) { return _this.yScale.range()[0]; })\n                .y1(function (d) { return _this.yScale.range()[0]; });\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(function () { return _this.baseValue === 'auto' ? _this.yScale.range()[0] : _this.yScale(_this.baseValue); })\n                .y1(function (d) { return _this.yScale(d.value); });\n            startingArea = area()\n                .x(xProperty)\n                .y0(function (d) { return _this.baseValue === 'auto' ? _this.yScale.range()[0] : _this.yScale(_this.baseValue); })\n                .y1(function (d) { return _this.baseValue === 'auto' ? _this.yScale.range()[0] : _this.yScale(_this.baseValue); });\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = .8;\n        var data = this.data.series;\n        if (this.scaleType === 'linear') {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === 'time') {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    };\n    AreaSeriesComponent.prototype.updateGradient = function () {\n        if (this.colors.scaleType === 'linear') {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                var d0values = this.data.series.map(function (d) { return d.d0; });\n                var d1values = this.data.series.map(function (d) { return d.d1; });\n                var max$$1 = Math.max.apply(Math, d1values);\n                var min$$1 = Math.min.apply(Math, d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max$$1, min$$1);\n            }\n            else {\n                var values = this.data.series.map(function (d) { return d.value; });\n                var max$$1 = Math.max.apply(Math, values);\n                this.gradientStops = this.colors.getLinearGradientStops(max$$1);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    };\n    AreaSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    AreaSeriesComponent.prototype.isInactive = function (entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"baseValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaSeriesComponent.prototype, \"stacked\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaSeriesComponent.prototype, \"normalized\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AreaSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AreaSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], AreaSeriesComponent.prototype, \"select\", void 0);\n    AreaSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-area-series]',\n            template: \"\\n    <svg:g ngx-charts-area\\n      class=\\\"area-series\\\"\\n      [data]=\\\"data\\\"\\n      [path]=\\\"path\\\"\\n      [fill]=\\\"colors.getColor(data.name)\\\"\\n      [stops]=\\\"gradientStops\\\"\\n      [startingPath]=\\\"startingPath\\\"\\n      [opacity]=\\\"opacity\\\"\\n      [gradient]=\\\"gradient || hasGradient\\\"\\n      [animations]=\\\"animations\\\"\\n      [class.active]=\\\"isActive(data)\\\"\\n      [class.inactive]=\\\"isInactive(data)\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], AreaSeriesComponent);\n    return AreaSeriesComponent;\n}());\n\nvar AreaChartModule = /** @class */ (function () {\n    function AreaChartModule() {\n    }\n    AreaChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                AreaChartComponent,\n                AreaChartNormalizedComponent,\n                AreaChartStackedComponent,\n                AreaSeriesComponent\n            ],\n            exports: [\n                AreaChartComponent,\n                AreaChartNormalizedComponent,\n                AreaChartStackedComponent,\n                AreaSeriesComponent\n            ]\n        })\n    ], AreaChartModule);\n    return AreaChartModule;\n}());\n\nvar BarComponent = /** @class */ (function () {\n    function BarComponent(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    BarComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    };\n    BarComponent.prototype.update = function () {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = \"url(#\" + this.gradientId + \")\";\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    };\n    BarComponent.prototype.loadAnimation = function () {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    };\n    BarComponent.prototype.updatePathEl = function () {\n        var node = select(this.element).select('.bar');\n        var path = this.getPath();\n        if (this.animations) {\n            node\n                .transition()\n                .duration(500)\n                .attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    };\n    BarComponent.prototype.getGradient = function () {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    };\n    BarComponent.prototype.getStartingPath = function () {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        var radius = this.getRadius();\n        var path;\n        if (this.roundEdges) {\n            if (this.orientation === 'vertical') {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === 'horizontal') {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === 'vertical') {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === 'horizontal') {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    };\n    BarComponent.prototype.getPath = function () {\n        var radius = this.getRadius();\n        var path;\n        if (this.roundEdges) {\n            if (this.orientation === 'vertical') {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === 'horizontal') {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    };\n    BarComponent.prototype.getRadius = function () {\n        var radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    };\n    BarComponent.prototype.getStartOpacity = function () {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    };\n    Object.defineProperty(BarComponent.prototype, \"edges\", {\n        get: function () {\n            var edges = [false, false, false, false];\n            if (this.roundEdges) {\n                if (this.orientation === 'vertical') {\n                    if (this.data.value > 0) {\n                        edges = [true, true, false, false];\n                    }\n                    else {\n                        edges = [false, false, true, true];\n                    }\n                }\n                else if (this.orientation === 'horizontal') {\n                    if (this.data.value > 0) {\n                        edges = [false, true, false, true];\n                    }\n                    else {\n                        edges = [true, false, true, false];\n                    }\n                }\n            }\n            return edges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarComponent.prototype.onMouseEnter = function () {\n        this.activate.emit(this.data);\n    };\n    BarComponent.prototype.onMouseLeave = function () {\n        this.deactivate.emit(this.data);\n    };\n    BarComponent.prototype.checkToHideBar = function () {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === 'vertical' && this.height === 0) ||\n                    (this.orientation === 'horizontal' && this.width === 0));\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarComponent.prototype, \"x\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarComponent.prototype, \"y\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"orientation\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"offset\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarComponent.prototype, \"isActive\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarComponent.prototype, \"stops\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarComponent.prototype, \"ariaLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BarComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BarComponent.prototype, \"onMouseEnter\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BarComponent.prototype, \"onMouseLeave\", null);\n    BarComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-bar]',\n            template: \"\\n    <svg:defs *ngIf=\\\"hasGradient\\\">\\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\\\"orientation\\\" [name]=\\\"gradientId\\\" [stops]=\\\"gradientStops\\\" />\\n    </svg:defs>\\n    <svg:path\\n      class=\\\"bar\\\"\\n      stroke=\\\"none\\\"\\n      role=\\\"img\\\"\\n      tabIndex=\\\"-1\\\"\\n      [class.active]=\\\"isActive\\\"\\n      [class.hidden]=\\\"hideBar\\\"\\n      [attr.d]=\\\"path\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.fill]=\\\"hasGradient ? gradientFill : fill\\\"\\n      (click)=\\\"select.emit(data)\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], BarComponent);\n    return BarComponent;\n}());\n\nvar BarHorizontalComponent = /** @class */ (function (_super) {\n    __extends(BarHorizontalComponent, _super);\n    function BarHorizontalComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.roundEdges = true;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarHorizontalComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarHorizontalComponent.prototype.getXScale = function () {\n        this.xDomain = this.getXDomain();\n        var scale = scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarHorizontalComponent.prototype.getYScale = function () {\n        this.yDomain = this.getYDomain();\n        var spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .domain(this.yDomain);\n    };\n    BarHorizontalComponent.prototype.getXDomain = function () {\n        var values = this.results.map(function (d) { return d.value; });\n        var min$$1 = this.xScaleMin ? Math.min.apply(Math, [this.xScaleMin].concat(values)) : Math.min.apply(Math, [0].concat(values));\n        var max$$1 = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(values)) : Math.max.apply(Math, [0].concat(values));\n        return [min$$1, max$$1];\n    };\n    BarHorizontalComponent.prototype.getYDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    BarHorizontalComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    BarHorizontalComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarHorizontalComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarHorizontalComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarHorizontalComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarHorizontalComponent.prototype.onDataLabelMaxWidthChanged = function (event$$1) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event$$1.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event$$1.size.width);\n        }\n        if (event$$1.index === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarHorizontalComponent.prototype.onActivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarHorizontalComponent.prototype.onDeactivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalComponent.prototype, \"xScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarHorizontalComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarHorizontalComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarHorizontalComponent.prototype, \"tooltipTemplate\", void 0);\n    BarHorizontalComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-horizontal',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-series-horizontal\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n          (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event)\\\"\\n        ></svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], BarHorizontalComponent);\n    return BarHorizontalComponent;\n}(BaseChartComponent));\n\nvar BarHorizontal2DComponent = /** @class */ (function (_super) {\n    __extends(BarHorizontal2DComponent, _super);\n    function BarHorizontal2DComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.groupPadding = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.roundEdges = true;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarHorizontal2DComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valuesDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarHorizontal2DComponent.prototype.getGroupScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    };\n    BarHorizontal2DComponent.prototype.getInnerScale = function () {\n        var height = this.groupScale.bandwidth();\n        var spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, height])\n            .paddingInner(spacing)\n            .domain(this.innerDomain);\n    };\n    BarHorizontal2DComponent.prototype.getValueScale = function () {\n        var scale = scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.valuesDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarHorizontal2DComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarHorizontal2DComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarHorizontal2DComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        var min$$1 = Math.min.apply(Math, [0].concat(domain));\n        var max$$1 = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(domain)) : Math.max.apply(Math, [0].concat(domain));\n        return [min$$1, max$$1];\n    };\n    BarHorizontal2DComponent.prototype.groupTransform = function (group) {\n        return \"translate(0, \" + this.groupScale(group.label) + \")\";\n    };\n    BarHorizontal2DComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarHorizontal2DComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarHorizontal2DComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valuesDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarHorizontal2DComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valuesDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarHorizontal2DComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarHorizontal2DComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarHorizontal2DComponent.prototype.onDataLabelMaxWidthChanged = function (event$$1, groupIndex) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event$$1.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event$$1.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarHorizontal2DComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarHorizontal2DComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontal2DComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontal2DComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontal2DComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontal2DComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontal2DComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontal2DComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontal2DComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontal2DComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontal2DComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontal2DComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontal2DComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarHorizontal2DComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarHorizontal2DComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarHorizontal2DComponent.prototype, \"tooltipTemplate\", void 0);\n    BarHorizontal2DComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-horizontal-2d',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-grid-panel-series\\n          [xScale]=\\\"valueScale\\\"\\n          [yScale]=\\\"groupScale\\\"\\n          [data]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          orient=\\\"horizontal\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"valueScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"groupScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-horizontal\\n            [xScale]=\\\"valueScale\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [yScale]=\\\"innerScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [roundEdges]=\\\"roundEdges\\\"\\n            [animations]=\\\"animations\\\"\\n            [showDataLabel]=\\\"showDataLabel\\\"\\n            [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarHorizontal2DComponent);\n    return BarHorizontal2DComponent;\n}(BaseChartComponent));\n\nvar BarHorizontalNormalizedComponent = /** @class */ (function (_super) {\n    __extends(BarHorizontalNormalizedComponent, _super);\n    function BarHorizontalNormalizedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        return _this;\n    }\n    BarHorizontalNormalizedComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarHorizontalNormalizedComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarHorizontalNormalizedComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarHorizontalNormalizedComponent.prototype.getValueDomain = function () {\n        return [0, 100];\n    };\n    BarHorizontalNormalizedComponent.prototype.getYScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .domain(this.groupDomain);\n    };\n    BarHorizontalNormalizedComponent.prototype.getXScale = function () {\n        var scale = scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarHorizontalNormalizedComponent.prototype.groupTransform = function (group) {\n        return \"translate(0, \" + this.yScale(group.name) + \")\";\n    };\n    BarHorizontalNormalizedComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarHorizontalNormalizedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarHorizontalNormalizedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarHorizontalNormalizedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarHorizontalNormalizedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarHorizontalNormalizedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarHorizontalNormalizedComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarHorizontalNormalizedComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalNormalizedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalNormalizedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalNormalizedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalNormalizedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalNormalizedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalNormalizedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalNormalizedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalNormalizedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalNormalizedComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarHorizontalNormalizedComponent.prototype, \"tooltipTemplate\", void 0);\n    BarHorizontalNormalizedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-horizontal-normalized',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          *ngFor=\\\"let group of results; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-horizontal\\n            type=\\\"normalized\\\"\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [animations]=\\\"animations\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarHorizontalNormalizedComponent);\n    return BarHorizontalNormalizedComponent;\n}(BaseChartComponent));\n\nvar BarHorizontalStackedComponent = /** @class */ (function (_super) {\n    __extends(BarHorizontalStackedComponent, _super);\n    function BarHorizontalStackedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarHorizontalStackedComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarHorizontalStackedComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarHorizontalStackedComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarHorizontalStackedComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        var smallest = 0;\n        var biggest = 0;\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var smallestSum = 0;\n            var biggestSum = 0;\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        var min$$1 = Math.min.apply(Math, [0].concat(domain));\n        var max$$1 = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(domain)) : Math.max.apply(Math, domain);\n        return [min$$1, max$$1];\n    };\n    BarHorizontalStackedComponent.prototype.getYScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .domain(this.groupDomain);\n    };\n    BarHorizontalStackedComponent.prototype.getXScale = function () {\n        var scale = scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarHorizontalStackedComponent.prototype.groupTransform = function (group) {\n        return \"translate(0, \" + this.yScale(group.name) + \")\";\n    };\n    BarHorizontalStackedComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarHorizontalStackedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarHorizontalStackedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarHorizontalStackedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarHorizontalStackedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarHorizontalStackedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarHorizontalStackedComponent.prototype.onDataLabelMaxWidthChanged = function (event$$1, groupIndex) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event$$1.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event$$1.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarHorizontalStackedComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarHorizontalStackedComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalStackedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalStackedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalStackedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarHorizontalStackedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalStackedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalStackedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalStackedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarHorizontalStackedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarHorizontalStackedComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarHorizontalStackedComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarHorizontalStackedComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarHorizontalStackedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarHorizontalStackedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarHorizontalStackedComponent.prototype, \"tooltipTemplate\", void 0);\n    BarHorizontalStackedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-horizontal-stacked',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-horizontal\\n            type=\\\"stacked\\\"\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [animations]=\\\"animations\\\"\\n            [showDataLabel]=\\\"showDataLabel\\\"\\n            [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarHorizontalStackedComponent);\n    return BarHorizontalStackedComponent;\n}(BaseChartComponent));\n\nvar BarVerticalComponent = /** @class */ (function (_super) {\n    __extends(BarVerticalComponent, _super);\n    function BarVerticalComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.roundEdges = true;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarVerticalComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + (this.margin[0] + this.dataLabelMaxHeight.negative) + \")\";\n    };\n    BarVerticalComponent.prototype.getXScale = function () {\n        this.xDomain = this.getXDomain();\n        var spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand()\n            .range([0, this.dims.width])\n            .paddingInner(spacing)\n            .domain(this.xDomain);\n    };\n    BarVerticalComponent.prototype.getYScale = function () {\n        this.yDomain = this.getYDomain();\n        var scale = scaleLinear()\n            .range([this.dims.height, 0])\n            .domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarVerticalComponent.prototype.getXDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    BarVerticalComponent.prototype.getYDomain = function () {\n        var values = this.results.map(function (d) { return d.value; });\n        var min$$1 = this.yScaleMin ? Math.min.apply(Math, [this.yScaleMin].concat(values)) : Math.min.apply(Math, [0].concat(values));\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min$$1 = Math.min.apply(Math, [min$$1].concat(this.yAxisTicks));\n        }\n        var max$$1 = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(values)) : Math.max.apply(Math, [0].concat(values));\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max$$1 = Math.max.apply(Math, [max$$1].concat(this.yAxisTicks));\n        }\n        return [min$$1, max$$1];\n    };\n    BarVerticalComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    BarVerticalComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarVerticalComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarVerticalComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarVerticalComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarVerticalComponent.prototype.onDataLabelMaxHeightChanged = function (event$$1) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event$$1.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event$$1.size.height);\n        }\n        if (event$$1.index === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarVerticalComponent.prototype.onActivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarVerticalComponent.prototype.onDeactivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalComponent.prototype, \"yScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarVerticalComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarVerticalComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarVerticalComponent.prototype, \"tooltipTemplate\", void 0);\n    BarVerticalComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-vertical',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-series-vertical\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event)\\\"\\n        ></svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], BarVerticalComponent);\n    return BarVerticalComponent;\n}(BaseChartComponent));\n\nvar BarVertical2DComponent = /** @class */ (function (_super) {\n    __extends(BarVertical2DComponent, _super);\n    function BarVertical2DComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.scaleType = 'ordinal';\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.groupPadding = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.roundEdges = true;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarVertical2DComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valuesDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + (this.margin[0] + this.dataLabelMaxHeight.negative) + \")\";\n    };\n    BarVertical2DComponent.prototype.onDataLabelMaxHeightChanged = function (event$$1, groupIndex) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event$$1.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event$$1.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarVertical2DComponent.prototype.getGroupScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    };\n    BarVertical2DComponent.prototype.getInnerScale = function () {\n        var width = this.groupScale.bandwidth();\n        var spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, width])\n            .paddingInner(spacing)\n            .domain(this.innerDomain);\n    };\n    BarVertical2DComponent.prototype.getValueScale = function () {\n        var scale = scaleLinear()\n            .range([this.dims.height, 0])\n            .domain(this.valuesDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarVertical2DComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarVertical2DComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarVertical2DComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        var min$$1 = Math.min.apply(Math, [0].concat(domain));\n        var max$$1 = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(domain)) : Math.max.apply(Math, [0].concat(domain));\n        return [min$$1, max$$1];\n    };\n    BarVertical2DComponent.prototype.groupTransform = function (group) {\n        return \"translate(\" + this.groupScale(group.label) + \", 0)\";\n    };\n    BarVertical2DComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarVertical2DComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarVertical2DComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valuesDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarVertical2DComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valuesDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarVertical2DComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarVertical2DComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarVertical2DComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarVertical2DComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVertical2DComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVertical2DComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVertical2DComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVertical2DComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVertical2DComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVertical2DComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVertical2DComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVertical2DComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVertical2DComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVertical2DComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVertical2DComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarVertical2DComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarVertical2DComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarVertical2DComponent.prototype, \"tooltipTemplate\", void 0);\n    BarVertical2DComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-vertical-2d',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-grid-panel-series\\n          [xScale]=\\\"groupScale\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [data]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          orient=\\\"vertical\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"groupScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-series-vertical\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [xScale]=\\\"innerScale\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"group.series\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [seriesName]=\\\"group.name\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (select)=\\\"onClick($event, group)\\\"\\n          (activate)=\\\"onActivate($event, group)\\\"\\n          (deactivate)=\\\"onDeactivate($event, group)\\\"\\n          (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarVertical2DComponent);\n    return BarVertical2DComponent;\n}(BaseChartComponent));\n\nvar BarVerticalNormalizedComponent = /** @class */ (function (_super) {\n    __extends(BarVerticalNormalizedComponent, _super);\n    function BarVerticalNormalizedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        return _this;\n    }\n    BarVerticalNormalizedComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarVerticalNormalizedComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarVerticalNormalizedComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarVerticalNormalizedComponent.prototype.getValueDomain = function () {\n        return [0, 100];\n    };\n    BarVerticalNormalizedComponent.prototype.getXScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .domain(this.groupDomain);\n    };\n    BarVerticalNormalizedComponent.prototype.getYScale = function () {\n        var scale = scaleLinear()\n            .range([this.dims.height, 0])\n            .domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarVerticalNormalizedComponent.prototype.groupTransform = function (group) {\n        return \"translate(\" + this.xScale(group.name) + \", 0)\";\n    };\n    BarVerticalNormalizedComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarVerticalNormalizedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarVerticalNormalizedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarVerticalNormalizedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarVerticalNormalizedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarVerticalNormalizedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarVerticalNormalizedComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarVerticalNormalizedComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalNormalizedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalNormalizedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalNormalizedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalNormalizedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalNormalizedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalNormalizedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalNormalizedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalNormalizedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalNormalizedComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalNormalizedComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarVerticalNormalizedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarVerticalNormalizedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarVerticalNormalizedComponent.prototype, \"tooltipTemplate\", void 0);\n    BarVerticalNormalizedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-vertical-normalized',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          *ngFor=\\\"let group of results; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-vertical\\n            type=\\\"normalized\\\"\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [animations]=\\\"animations\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarVerticalNormalizedComponent);\n    return BarVerticalNormalizedComponent;\n}(BaseChartComponent));\n\nvar BarVerticalStackedComponent = /** @class */ (function (_super) {\n    __extends(BarVerticalStackedComponent, _super);\n    function BarVerticalStackedComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.showDataLabel = false;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarVerticalStackedComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + (this.margin[0] + this.dataLabelMaxHeight.negative) + \")\";\n    };\n    BarVerticalStackedComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    };\n    BarVerticalStackedComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    };\n    BarVerticalStackedComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        var smallest = 0;\n        var biggest = 0;\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var smallestSum = 0;\n            var biggestSum = 0;\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        var min$$1 = Math.min.apply(Math, [0].concat(domain));\n        var max$$1 = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(domain)) : Math.max.apply(Math, domain);\n        return [min$$1, max$$1];\n    };\n    BarVerticalStackedComponent.prototype.getXScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .domain(this.groupDomain);\n    };\n    BarVerticalStackedComponent.prototype.getYScale = function () {\n        var scale = scaleLinear()\n            .range([this.dims.height, 0])\n            .domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarVerticalStackedComponent.prototype.onDataLabelMaxHeightChanged = function (event$$1, groupIndex) {\n        var _this = this;\n        if (event$$1.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event$$1.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event$$1.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarVerticalStackedComponent.prototype.groupTransform = function (group) {\n        return \"translate(\" + this.xScale(group.name) + \", 0)\";\n    };\n    BarVerticalStackedComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarVerticalStackedComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarVerticalStackedComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarVerticalStackedComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarVerticalStackedComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarVerticalStackedComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarVerticalStackedComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarVerticalStackedComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalStackedComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalStackedComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalStackedComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BarVerticalStackedComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalStackedComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalStackedComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalStackedComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BarVerticalStackedComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"barPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BarVerticalStackedComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarVerticalStackedComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BarVerticalStackedComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarVerticalStackedComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BarVerticalStackedComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BarVerticalStackedComponent.prototype, \"tooltipTemplate\", void 0);\n    BarVerticalStackedComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bar-vertical-stacked',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [@animationState]=\\\"'active'\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-vertical\\n            type=\\\"stacked\\\"\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [showDataLabel]=\\\"showDataLabel\\\"\\n            [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [animations]=\\\"animations\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1,\n                            transform: '*'\n                        }),\n                        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BarVerticalStackedComponent);\n    return BarVerticalStackedComponent;\n}(BaseChartComponent));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nvar SeriesVerticalComponent = /** @class */ (function () {\n    function SeriesVerticalComponent() {\n        this.type = 'standard';\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n    }\n    SeriesVerticalComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    SeriesVerticalComponent.prototype.update = function () {\n        var _this = this;\n        var _a;\n        this.updateTooltipSettings();\n        var width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        var yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        var d0 = (_a = {},\n            _a[D0Types.positive] = 0,\n            _a[D0Types.negative] = 0,\n            _a);\n        var d0Type = D0Types.positive;\n        var total;\n        if (this.type === 'normalized') {\n            total = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return sum + d; }, 0);\n        }\n        this.bars = this.series.map(function (d, index) {\n            var value = d.value;\n            var label = _this.getLabel(d);\n            var formattedLabel = formatLabel(label);\n            var roundEdges = _this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            var bar = {\n                value: value,\n                label: label,\n                roundEdges: roundEdges,\n                data: d,\n                width: width,\n                formattedLabel: formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (_this.type === 'standard') {\n                bar.height = Math.abs(_this.yScale(value) - _this.yScale(yScaleMin));\n                bar.x = _this.xScale(label);\n                if (value < 0) {\n                    bar.y = _this.yScale(0);\n                }\n                else {\n                    bar.y = _this.yScale(value);\n                }\n            }\n            else if (_this.type === 'stacked') {\n                var offset0 = d0[d0Type];\n                var offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = _this.yScale(offset0) - _this.yScale(offset1);\n                bar.x = 0;\n                bar.y = _this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (_this.type === 'normalized') {\n                var offset0 = d0[d0Type];\n                var offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = _this.yScale(offset0) - _this.yScale(offset1);\n                bar.x = 0;\n                bar.y = _this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (_this.colors.scaleType === 'ordinal') {\n                bar.color = _this.colors.getColor(label);\n            }\n            else {\n                if (_this.type === 'standard') {\n                    bar.color = _this.colors.getColor(value);\n                    bar.gradientStops = _this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = _this.colors.getColor(bar.offset1);\n                    bar.gradientStops = _this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            var tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (_this.seriesName) {\n                tooltipLabel = _this.seriesName + \" \\u2022 \" + formattedLabel;\n                bar.data.series = _this.seriesName;\n                bar.ariaLabel = _this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = _this.tooltipDisabled\n                ? undefined\n                : \"\\n        <span class=\\\"tooltip-label\\\">\" + tooltipLabel + \"</span>\\n        <span class=\\\"tooltip-val\\\">\" + value.toLocaleString() + \"</span>\\n      \";\n            return bar;\n        });\n        this.updateDataLabels();\n    };\n    SeriesVerticalComponent.prototype.updateDataLabels = function () {\n        var _this = this;\n        if (this.type === 'stacked') {\n            this.barsForDataLabels = [];\n            var section = {};\n            section.series = this.seriesName;\n            var totalPositive = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return (d > 0 ? sum + d : sum); }, 0);\n            var totalNegative = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return (d < 0 ? sum + d : sum); }, 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(function (d) {\n                var section = {};\n                section.series = _this.seriesName ? _this.seriesName : d.label;\n                section.total = d.value;\n                section.x = _this.xScale(d.label);\n                section.y = _this.yScale(0);\n                section.height = _this.yScale(section.total) - _this.yScale(0);\n                section.width = _this.xScale.bandwidth();\n                return section;\n            });\n        }\n    };\n    SeriesVerticalComponent.prototype.updateTooltipSettings = function () {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n        this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n    };\n    SeriesVerticalComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    };\n    SeriesVerticalComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    SeriesVerticalComponent.prototype.getLabel = function (dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    };\n    SeriesVerticalComponent.prototype.trackBy = function (index, bar) {\n        return bar.label;\n    };\n    SeriesVerticalComponent.prototype.trackDataLabelBy = function (index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"type\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"series\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], SeriesVerticalComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], SeriesVerticalComponent.prototype, \"seriesName\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], SeriesVerticalComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesVerticalComponent.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesVerticalComponent.prototype, \"dataLabelHeightChanged\", void 0);\n    SeriesVerticalComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-series-vertical]',\n            template: \"\\n    <svg:g\\n      ngx-charts-bar\\n      *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [@.disabled]=\\\"!animations\\\"\\n      [width]=\\\"bar.width\\\"\\n      [height]=\\\"bar.height\\\"\\n      [x]=\\\"bar.x\\\"\\n      [y]=\\\"bar.y\\\"\\n      [fill]=\\\"bar.color\\\"\\n      [stops]=\\\"bar.gradientStops\\\"\\n      [data]=\\\"bar.data\\\"\\n      [orientation]=\\\"'vertical'\\\"\\n      [roundEdges]=\\\"bar.roundEdges\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [ariaLabel]=\\\"bar.ariaLabel\\\"\\n      [isActive]=\\\"isActive(bar.data)\\\"\\n      (select)=\\\"onClick($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n      [tooltipType]=\\\"tooltipType\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"bar.data\\\"\\n      [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n      [animations]=\\\"animations\\\"\\n    ></svg:g>\\n    <svg:g *ngIf=\\\"showDataLabel\\\">\\n      <svg:g\\n        ngx-charts-bar-label\\n        *ngFor=\\\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\\\"\\n        [barX]=\\\"b.x\\\"\\n        [barY]=\\\"b.y\\\"\\n        [barWidth]=\\\"b.width\\\"\\n        [barHeight]=\\\"b.height\\\"\\n        [value]=\\\"b.total\\\"\\n        [valueFormatting]=\\\"dataLabelFormatting\\\"\\n        [orientation]=\\\"'vertical'\\\"\\n        (dimensionsChanged)=\\\"dataLabelHeightChanged.emit({ size: $event, index: i })\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1\n                        }),\n                        animate(500, style({ opacity: 0 }))\n                    ])\n                ])\n            ]\n        })\n    ], SeriesVerticalComponent);\n    return SeriesVerticalComponent;\n}());\n\nvar SeriesHorizontal = /** @class */ (function () {\n    function SeriesHorizontal() {\n        this.barsForDataLabels = [];\n        this.type = 'standard';\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n    }\n    SeriesHorizontal.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    SeriesHorizontal.prototype.update = function () {\n        var _this = this;\n        var _a;\n        this.updateTooltipSettings();\n        var d0 = (_a = {},\n            _a[D0Types.positive] = 0,\n            _a[D0Types.negative] = 0,\n            _a);\n        var d0Type;\n        d0Type = D0Types.positive;\n        var total;\n        if (this.type === 'normalized') {\n            total = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return sum + d; }, 0);\n        }\n        var xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(function (d, index) {\n            var value = d.value;\n            var label = _this.getLabel(d);\n            var formattedLabel = formatLabel(label);\n            var roundEdges = _this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            var bar = {\n                value: value,\n                label: label,\n                roundEdges: roundEdges,\n                data: d,\n                formattedLabel: formattedLabel\n            };\n            bar.height = _this.yScale.bandwidth();\n            if (_this.type === 'standard') {\n                bar.width = Math.abs(_this.xScale(value) - _this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = _this.xScale(value);\n                }\n                else {\n                    bar.x = _this.xScale(xScaleMin);\n                }\n                bar.y = _this.yScale(label);\n            }\n            else if (_this.type === 'stacked') {\n                var offset0 = d0[d0Type];\n                var offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = _this.xScale(offset1) - _this.xScale(offset0);\n                bar.x = _this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (_this.type === 'normalized') {\n                var offset0 = d0[d0Type];\n                var offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = _this.xScale(offset1) - _this.xScale(offset0);\n                bar.x = _this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (_this.colors.scaleType === 'ordinal') {\n                bar.color = _this.colors.getColor(label);\n            }\n            else {\n                if (_this.type === 'standard') {\n                    bar.color = _this.colors.getColor(value);\n                    bar.gradientStops = _this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = _this.colors.getColor(bar.offset1);\n                    bar.gradientStops = _this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            var tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (_this.seriesName) {\n                tooltipLabel = _this.seriesName + \" \\u2022 \" + formattedLabel;\n                bar.data.series = _this.seriesName;\n                bar.ariaLabel = _this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = _this.tooltipDisabled\n                ? undefined\n                : \"\\n        <span class=\\\"tooltip-label\\\">\" + tooltipLabel + \"</span>\\n        <span class=\\\"tooltip-val\\\">\" + value.toLocaleString() + \"</span>\\n      \";\n            return bar;\n        });\n        this.updateDataLabels();\n    };\n    SeriesHorizontal.prototype.updateDataLabels = function () {\n        var _this = this;\n        if (this.type === 'stacked') {\n            this.barsForDataLabels = [];\n            var section = {};\n            section.series = this.seriesName;\n            var totalPositive = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return (d > 0 ? sum + d : sum); }, 0);\n            var totalNegative = this.series.map(function (d) { return d.value; }).reduce(function (sum, d) { return (d < 0 ? sum + d : sum); }, 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(function (d) {\n                var section = {};\n                section.series = _this.seriesName ? _this.seriesName : d.label;\n                section.total = d.value;\n                section.x = _this.xScale(0);\n                section.y = _this.yScale(d.label);\n                section.width = _this.xScale(section.total) - _this.xScale(0);\n                section.height = _this.yScale.bandwidth();\n                return section;\n            });\n        }\n    };\n    SeriesHorizontal.prototype.updateTooltipSettings = function () {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n        this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n    };\n    SeriesHorizontal.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    };\n    SeriesHorizontal.prototype.getLabel = function (dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    };\n    SeriesHorizontal.prototype.trackBy = function (index, bar) {\n        return bar.label;\n    };\n    SeriesHorizontal.prototype.trackDataLabelBy = function (index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    };\n    SeriesHorizontal.prototype.click = function (data) {\n        this.select.emit(data);\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"type\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"series\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], SeriesHorizontal.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], SeriesHorizontal.prototype, \"seriesName\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], SeriesHorizontal.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"roundEdges\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"animations\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"showDataLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"dataLabelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SeriesHorizontal.prototype, \"noBarWhenZero\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"deactivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], SeriesHorizontal.prototype, \"dataLabelWidthChanged\", void 0);\n    SeriesHorizontal = __decorate([\n        Component({\n            selector: 'g[ngx-charts-series-horizontal]',\n            template: \"\\n    <svg:g\\n      ngx-charts-bar\\n      *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [width]=\\\"bar.width\\\"\\n      [height]=\\\"bar.height\\\"\\n      [x]=\\\"bar.x\\\"\\n      [y]=\\\"bar.y\\\"\\n      [fill]=\\\"bar.color\\\"\\n      [stops]=\\\"bar.gradientStops\\\"\\n      [data]=\\\"bar.data\\\"\\n      [orientation]=\\\"'horizontal'\\\"\\n      [roundEdges]=\\\"bar.roundEdges\\\"\\n      (select)=\\\"click($event)\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [isActive]=\\\"isActive(bar.data)\\\"\\n      [ariaLabel]=\\\"bar.ariaLabel\\\"\\n      [animations]=\\\"animations\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n      [tooltipType]=\\\"tooltipType\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"bar.data\\\"\\n      [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n    ></svg:g>\\n    <svg:g *ngIf=\\\"showDataLabel\\\">\\n      <svg:g\\n        ngx-charts-bar-label\\n        *ngFor=\\\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\\\"\\n        [barX]=\\\"b.x\\\"\\n        [barY]=\\\"b.y\\\"\\n        [barWidth]=\\\"b.width\\\"\\n        [barHeight]=\\\"b.height\\\"\\n        [value]=\\\"b.total\\\"\\n        [valueFormatting]=\\\"dataLabelFormatting\\\"\\n        [orientation]=\\\"'horizontal'\\\"\\n        (dimensionsChanged)=\\\"dataLabelWidthChanged.emit({ size: $event, index: i })\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1\n                        }),\n                        animate(500, style({ opacity: 0 }))\n                    ])\n                ])\n            ]\n        })\n    ], SeriesHorizontal);\n    return SeriesHorizontal;\n}());\n\nvar BarLabelComponent = /** @class */ (function () {\n    function BarLabelComponent(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    BarLabelComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    BarLabelComponent.prototype.getSize = function () {\n        var h = this.element.getBoundingClientRect().height;\n        var w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    };\n    BarLabelComponent.prototype.ngAfterViewInit = function () {\n        this.dimensionsChanged.emit(this.getSize());\n    };\n    BarLabelComponent.prototype.update = function () {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = \"rotate(-45, \" + this.x + \" , \" + this.y + \")\";\n        }\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"value\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"barX\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"barY\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"barWidth\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"barHeight\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BarLabelComponent.prototype, \"orientation\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BarLabelComponent.prototype, \"dimensionsChanged\", void 0);\n    BarLabelComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-bar-label]',\n            template: \"  \\n    <svg:text   \\n      class=\\\"textDataLabel\\\" \\n      alignment-baseline=\\\"middle\\\"     \\n      [attr.text-anchor]=\\\"textAnchor\\\"\\n      [attr.transform]=\\\"transform\\\"\\n      [attr.x]=\\\"x\\\" \\n      [attr.y]=\\\"y\\\">\\n      {{formatedValue}}     \\n    </svg:text>          \\n\\n  \",\n            styles: [\".textDataLabel{font-size:11px}\"],\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_b = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _b : Object])\n    ], BarLabelComponent);\n    return BarLabelComponent;\n}());\n\nvar BarChartModule = /** @class */ (function () {\n    function BarChartModule() {\n    }\n    BarChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                BarComponent,\n                BarHorizontalComponent,\n                BarHorizontal2DComponent,\n                BarHorizontalNormalizedComponent,\n                BarHorizontalStackedComponent,\n                BarVerticalComponent,\n                BarVertical2DComponent,\n                BarVerticalNormalizedComponent,\n                BarVerticalStackedComponent,\n                BarLabelComponent,\n                SeriesHorizontal,\n                SeriesVerticalComponent\n            ],\n            exports: [\n                BarComponent,\n                BarHorizontalComponent,\n                BarHorizontal2DComponent,\n                BarHorizontalNormalizedComponent,\n                BarHorizontalStackedComponent,\n                BarVerticalComponent,\n                BarVertical2DComponent,\n                BarVerticalNormalizedComponent,\n                BarVerticalStackedComponent,\n                BarLabelComponent,\n                SeriesHorizontal,\n                SeriesVerticalComponent\n            ]\n        })\n    ], BarChartModule);\n    return BarChartModule;\n}());\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    var domain = [];\n    if (scaleType === 'linear') {\n        values = values.map(function (v) { return Number(v); });\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === 'time' || scaleType === 'linear') {\n        var min$$1 = minVal ? minVal : Math.min.apply(Math, values);\n        var max$$1 = maxVal ? maxVal : Math.max.apply(Math, values);\n        domain = [min$$1, max$$1];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range$$1, scaleType, roundDomains) {\n    var scale;\n    if (scaleType === 'time') {\n        scale = scaleTime()\n            .range(range$$1)\n            .domain(domain);\n    }\n    else if (scaleType === 'linear') {\n        scale = scaleLinear()\n            .range(range$$1)\n            .domain(domain);\n        if (roundDomains) {\n            scale = scale.nice();\n        }\n    }\n    else if (scaleType === 'ordinal') {\n        scale = scalePoint()\n            .range([range$$1[0], range$$1[1]])\n            .domain(domain);\n    }\n    return scale;\n}\n\nvar BubbleChartComponent = /** @class */ (function (_super) {\n    __extends(BubbleChartComponent, _super);\n    function BubbleChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.showGridLines = true;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.xAxis = true;\n        _this.yAxis = true;\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.maxRadius = 10;\n        _this.minRadius = 3;\n        _this.schemeType = 'ordinal';\n        _this.tooltipDisabled = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.scaleType = 'linear';\n        _this.margin = [10, 20, 10, 20];\n        _this.bubblePadding = [0, 0, 0, 0];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.activeEntries = [];\n        return _this;\n    }\n    BubbleChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(function (d) { return d.name; });\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = \"translate(\" + this.dims.xOffset + \",\" + this.margin[0] + \")\";\n        var colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = \"url(#\" + this.clipPathId + \")\";\n    };\n    BubbleChartComponent.prototype.hideCircles = function () {\n        this.deactivateAll();\n    };\n    BubbleChartComponent.prototype.onClick = function (data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    };\n    BubbleChartComponent.prototype.getBubblePadding = function () {\n        var yMin = 0;\n        var xMin = 0;\n        var yMax = this.dims.height;\n        var xMax = this.dims.width;\n        for (var _i = 0, _a = this.data; _i < _a.length; _i++) {\n            var s = _a[_i];\n            for (var _b = 0, _c = s.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                var r = this.rScale(d.r);\n                var cx = this.xScaleType === 'linear' ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                var cy = this.yScaleType === 'linear' ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    };\n    BubbleChartComponent.prototype.setScales = function () {\n        var width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        var height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    };\n    BubbleChartComponent.prototype.getYScale = function (domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    };\n    BubbleChartComponent.prototype.getXScale = function (domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    };\n    BubbleChartComponent.prototype.getRScale = function (domain, range$$1) {\n        var scale = scaleLinear()\n            .range(range$$1)\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BubbleChartComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BubbleChartComponent.prototype.getXDomain = function () {\n        var values = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    };\n    BubbleChartComponent.prototype.getYDomain = function () {\n        var values = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    };\n    BubbleChartComponent.prototype.getRDomain = function () {\n        var min$$1 = Infinity;\n        var max$$1 = -Infinity;\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                var value = Number(d.r) || 1;\n                min$$1 = Math.min(min$$1, value);\n                max$$1 = Math.max(max$$1, value);\n            }\n        }\n        return [min$$1, max$$1];\n    };\n    BubbleChartComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BubbleChartComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BubbleChartComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BubbleChartComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    BubbleChartComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    BubbleChartComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleChartComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleChartComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleChartComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleChartComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BubbleChartComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], BubbleChartComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BubbleChartComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BubbleChartComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"minRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"autoScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"xScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"yScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleChartComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], BubbleChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], BubbleChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], BubbleChartComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BubbleChartComponent.prototype, \"hideCircles\", null);\n    BubbleChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-bubble-chart',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bubble-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [dims]=\\\"dims\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        />\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        />\\n        <svg:rect\\n          class=\\\"bubble-chart-area\\\"\\n          x=\\\"0\\\"\\n          y=\\\"0\\\"\\n          [attr.width]=\\\"dims.width\\\"\\n          [attr.height]=\\\"dims.height\\\"\\n          style=\\\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\\\"\\n          (mouseenter)=\\\"deactivateAll()\\\"\\n        />\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of data; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n            <svg:g\\n              ngx-charts-bubble-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [rScale]=\\\"rScale\\\"\\n              [xScaleType]=\\\"xScaleType\\\"\\n              [yScaleType]=\\\"yScaleType\\\"\\n              [xAxisLabel]=\\\"xAxisLabel\\\"\\n              [yAxisLabel]=\\\"yAxisLabel\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event, series)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            encapsulation: ViewEncapsulation.None,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1\n                        }),\n                        animate(500, style({\n                            opacity: 0\n                        }))\n                    ])\n                ])\n            ]\n        })\n    ], BubbleChartComponent);\n    return BubbleChartComponent;\n}(BaseChartComponent));\n\nvar BubbleSeriesComponent = /** @class */ (function () {\n    function BubbleSeriesComponent() {\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    BubbleSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    BubbleSeriesComponent.prototype.update = function () {\n        this.circles = this.getCircles();\n    };\n    BubbleSeriesComponent.prototype.getCircles = function () {\n        var _this = this;\n        var seriesName = this.data.name;\n        return this.data.series\n            .map(function (d, i) {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                var y = d.y;\n                var x = d.x;\n                var r = d.r;\n                var radius = _this.rScale(r || 1);\n                var tooltipLabel = formatLabel(d.name);\n                var cx = _this.xScaleType === 'linear' ? _this.xScale(Number(x)) : _this.xScale(x);\n                var cy = _this.yScaleType === 'linear' ? _this.yScale(Number(y)) : _this.yScale(y);\n                var color = _this.colors.scaleType === 'linear' ? _this.colors.getColor(r) : _this.colors.getColor(seriesName);\n                var isActive = !_this.activeEntries.length ? true : _this.isActive({ name: seriesName });\n                var opacity = isActive ? 1 : 0.3;\n                var data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data: data,\n                    x: x,\n                    y: y,\n                    r: r,\n                    classNames: [\"circle-data-\" + i],\n                    value: y,\n                    label: x,\n                    cx: cx,\n                    cy: cy,\n                    radius: radius,\n                    tooltipLabel: tooltipLabel,\n                    color: color,\n                    opacity: opacity,\n                    seriesName: seriesName,\n                    isActive: isActive,\n                    transform: \"translate(\" + cx + \",\" + cy + \")\"\n                };\n            }\n        })\n            .filter(function (circle) { return circle !== undefined; });\n    };\n    BubbleSeriesComponent.prototype.getTooltipText = function (circle) {\n        var hasRadius = typeof circle.r !== 'undefined';\n        var hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        var hasSeriesName = circle.seriesName && circle.seriesName.length;\n        var radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        var xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? this.xAxisLabel + \":\" : '';\n        var yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? this.yAxisLabel + \":\" : '';\n        var x = formatLabel(circle.x);\n        var y = formatLabel(circle.y);\n        var name = hasSeriesName && hasTooltipLabel\n            ? circle.seriesName + \" \\u2022 \" + circle.tooltipLabel\n            : circle.seriesName + circle.tooltipLabel;\n        var tooltipTitle = hasSeriesName || hasTooltipLabel ? \"<span class=\\\"tooltip-label\\\">\" + name + \"</span>\" : '';\n        return \"\\n      \" + tooltipTitle + \"\\n      <span class=\\\"tooltip-label\\\">\\n        <label>\" + xAxisLabel + \"</label> \" + x + \"<br />\\n        <label>\" + yAxisLabel + \"</label> \" + y + \"\\n      </span>\\n      <span class=\\\"tooltip-val\\\">\\n        \" + radiusValue + \"\\n      </span>\\n    \";\n    };\n    BubbleSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    BubbleSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    BubbleSeriesComponent.prototype.isVisible = function (circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    };\n    BubbleSeriesComponent.prototype.activateCircle = function (circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    };\n    BubbleSeriesComponent.prototype.deactivateCircle = function (circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    };\n    BubbleSeriesComponent.prototype.trackBy = function (index, circle) {\n        return circle.data.series + \" \" + circle.data.name;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"rScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"xScaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"yScaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"visibleValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], BubbleSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleSeriesComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], BubbleSeriesComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], BubbleSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], BubbleSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], BubbleSeriesComponent.prototype, \"deactivate\", void 0);\n    BubbleSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-bubble-series]',\n            template: \"\\n    <svg:g *ngFor=\\\"let circle of circles; trackBy: trackBy\\\">\\n      <svg:g [attr.transform]=\\\"circle.transform\\\">\\n        <svg:g\\n          ngx-charts-circle\\n          [@animationState]=\\\"'active'\\\"\\n          class=\\\"circle\\\"\\n          [cx]=\\\"0\\\"\\n          [cy]=\\\"0\\\"\\n          [r]=\\\"circle.radius\\\"\\n          [fill]=\\\"circle.color\\\"\\n          [style.opacity]=\\\"circle.opacity\\\"\\n          [class.active]=\\\"circle.isActive\\\"\\n          [pointerEvents]=\\\"'all'\\\"\\n          [data]=\\\"circle.value\\\"\\n          [classNames]=\\\"circle.classNames\\\"\\n          (select)=\\\"onClick(circle.data)\\\"\\n          (activate)=\\\"activateCircle(circle)\\\"\\n          (deactivate)=\\\"deactivateCircle(circle)\\\"\\n          ngx-tooltip\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipPlacement]=\\\"'top'\\\"\\n          [tooltipType]=\\\"'tooltip'\\\"\\n          [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipContext]=\\\"circle.data\\\"\\n        />\\n      </svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':enter', [\n                        style({\n                            opacity: 0,\n                            transform: 'scale(0)'\n                        }),\n                        animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                    ])\n                ])\n            ]\n        })\n    ], BubbleSeriesComponent);\n    return BubbleSeriesComponent;\n}());\n\nvar BubbleChartModule = /** @class */ (function () {\n    function BubbleChartModule() {\n    }\n    BubbleChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                BubbleChartComponent,\n                BubbleSeriesComponent\n            ],\n            exports: [\n                BubbleChartComponent,\n                BubbleSeriesComponent\n            ]\n        })\n    ], BubbleChartModule);\n    return BubbleChartModule;\n}());\n\nvar ForceDirectedGraphComponent = /** @class */ (function (_super) {\n    __extends(ForceDirectedGraphComponent, _super);\n    function ForceDirectedGraphComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.force = forceSimulation()\n            .force('charge', forceManyBody())\n            .force('collide', forceCollide(5))\n            .force('x', forceX())\n            .force('y', forceY());\n        _this.forceLink = forceLink().id(function (node) { return node.value; });\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.nodes = [];\n        _this.links = [];\n        _this.activeEntries = [];\n        _this.tooltipDisabled = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [0, 0, 0, 0];\n        _this.results = [];\n        _this.groupResultsBy = function (node) { return node.value; };\n        return _this;\n    }\n    ForceDirectedGraphComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.getSeriesDomain();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"\\n      translate(\" + (this.dims.xOffset + this.dims.width / 2) + \", \" + (this.margin[0] + this.dims.height / 2) + \")\\n    \";\n        if (this.force) {\n            this.force\n                .nodes(this.nodes)\n                .force('link', this.forceLink.links(this.links))\n                .alpha(0.5)\n                .restart();\n        }\n    };\n    ForceDirectedGraphComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    ForceDirectedGraphComponent.prototype.onActivate = function (event$$1) {\n        if (this.activeEntries.indexOf(event$$1) > -1)\n            return;\n        this.activeEntries = [event$$1].concat(this.activeEntries);\n        this.activate.emit({ value: event$$1, entries: this.activeEntries });\n    };\n    ForceDirectedGraphComponent.prototype.onDeactivate = function (event$$1) {\n        var idx = this.activeEntries.indexOf(event$$1);\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: event$$1, entries: this.activeEntries });\n    };\n    ForceDirectedGraphComponent.prototype.getSeriesDomain = function () {\n        var _this = this;\n        return this.nodes\n            .map(function (d) { return _this.groupResultsBy(d); })\n            .reduce(function (nodes, node) { return (nodes.includes(node) ? nodes : nodes.concat([node])); }, [])\n            .sort();\n    };\n    ForceDirectedGraphComponent.prototype.trackLinkBy = function (index, link) {\n        return link.index;\n    };\n    ForceDirectedGraphComponent.prototype.trackNodeBy = function (index, node) {\n        return node.value;\n    };\n    ForceDirectedGraphComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n    };\n    ForceDirectedGraphComponent.prototype.getLegendOptions = function () {\n        return {\n            scaleType: 'ordinal',\n            domain: this.seriesDomain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    };\n    ForceDirectedGraphComponent.prototype.onDragStart = function (node, $event) {\n        this.force.alphaTarget(0.3).restart();\n        this.draggingNode = node;\n        this.draggingStart = { x: $event.x - node.x, y: $event.y - node.y };\n        this.draggingNode.fx = $event.x - this.draggingStart.x;\n        this.draggingNode.fy = $event.y - this.draggingStart.y;\n    };\n    ForceDirectedGraphComponent.prototype.onDrag = function ($event) {\n        if (!this.draggingNode)\n            return;\n        this.draggingNode.fx = $event.x - this.draggingStart.x;\n        this.draggingNode.fy = $event.y - this.draggingStart.y;\n    };\n    ForceDirectedGraphComponent.prototype.onDragEnd = function ($event) {\n        if (!this.draggingNode)\n            return;\n        this.force.alphaTarget(0);\n        this.draggingNode.fx = undefined;\n        this.draggingNode.fy = undefined;\n        this.draggingNode = undefined;\n    };\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ForceDirectedGraphComponent.prototype, \"force\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ForceDirectedGraphComponent.prototype, \"forceLink\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ForceDirectedGraphComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], ForceDirectedGraphComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], ForceDirectedGraphComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], ForceDirectedGraphComponent.prototype, \"nodes\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof Array !== \"undefined\" && Array) === \"function\" ? _a : Object)\n    ], ForceDirectedGraphComponent.prototype, \"links\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], ForceDirectedGraphComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ForceDirectedGraphComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], ForceDirectedGraphComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], ForceDirectedGraphComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('linkTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _d : Object)\n    ], ForceDirectedGraphComponent.prototype, \"linkTemplate\", void 0);\n    __decorate([\n        ContentChild('nodeTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_e = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _e : Object)\n    ], ForceDirectedGraphComponent.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_f = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _f : Object)\n    ], ForceDirectedGraphComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ViewChild(ChartComponent, { read: ElementRef, static: false }),\n        __metadata(\"design:type\", typeof (_g = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _g : Object)\n    ], ForceDirectedGraphComponent.prototype, \"chart\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], ForceDirectedGraphComponent.prototype, \"groupResultsBy\", void 0);\n    __decorate([\n        HostListener('document:mousemove', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [typeof (_h = typeof MouseEvent !== \"undefined\" && MouseEvent) === \"function\" ? _h : Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], ForceDirectedGraphComponent.prototype, \"onDrag\", null);\n    __decorate([\n        HostListener('document:mouseup', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [typeof (_j = typeof MouseEvent !== \"undefined\" && MouseEvent) === \"function\" ? _j : Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], ForceDirectedGraphComponent.prototype, \"onDragEnd\", null);\n    ForceDirectedGraphComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-force-directed-graph',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"force-directed-graph chart\\\">\\n        <svg:g class=\\\"links\\\">\\n          <svg:g *ngFor=\\\"let link of links; trackBy: trackLinkBy\\\">\\n            <ng-template\\n              *ngIf=\\\"linkTemplate\\\"\\n              [ngTemplateOutlet]=\\\"linkTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{ $implicit: link }\\\"\\n            ></ng-template>\\n            <svg:line\\n              *ngIf=\\\"!linkTemplate\\\"\\n              strokeWidth=\\\"1\\\"\\n              class=\\\"edge\\\"\\n              [attr.x1]=\\\"link.source.x\\\"\\n              [attr.y1]=\\\"link.source.y\\\"\\n              [attr.x2]=\\\"link.target.x\\\"\\n              [attr.y2]=\\\"link.target.y\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g class=\\\"nodes\\\">\\n          <svg:g\\n            *ngFor=\\\"let node of nodes; trackBy: trackNodeBy\\\"\\n            [attr.transform]=\\\"'translate(' + node.x + ',' + node.y + ')'\\\"\\n            [attr.fill]=\\\"colors.getColor(groupResultsBy(node))\\\"\\n            [attr.stroke]=\\\"colors.getColor(groupResultsBy(node))\\\"\\n            (mousedown)=\\\"onDragStart(node, $event)\\\"\\n            (click)=\\\"onClick({ name: node.value })\\\"\\n            ngx-tooltip\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipPlacement]=\\\"'top'\\\"\\n            [tooltipType]=\\\"'tooltip'\\\"\\n            [tooltipTitle]=\\\"tooltipTemplate ? undefined : node.value\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [tooltipContext]=\\\"node\\\"\\n          >\\n            <ng-template\\n              *ngIf=\\\"nodeTemplate\\\"\\n              [ngTemplateOutlet]=\\\"nodeTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{ $implicit: node }\\\"\\n            ></ng-template>\\n            <svg:circle *ngIf=\\\"!nodeTemplate\\\" r=\\\"5\\\" />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".force-directed-graph .edge{stroke:#333}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], ForceDirectedGraphComponent);\n    return ForceDirectedGraphComponent;\n}(BaseChartComponent));\n\nvar ForceDirectedGraphModule = /** @class */ (function () {\n    function ForceDirectedGraphModule() {\n    }\n    ForceDirectedGraphModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                ForceDirectedGraphComponent,\n            ],\n            exports: [\n                ForceDirectedGraphComponent,\n            ]\n        })\n    ], ForceDirectedGraphModule);\n    return ForceDirectedGraphModule;\n}());\n\nvar HeatMapCellComponent = /** @class */ (function () {\n    function HeatMapCellComponent(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    HeatMapCellComponent.prototype.ngOnChanges = function (changes) {\n        this.transform = \"translate(\" + this.x + \" , \" + this.y + \")\";\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = \"url(#\" + this.gradientId + \")\";\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    };\n    HeatMapCellComponent.prototype.getGradientStops = function () {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    };\n    HeatMapCellComponent.prototype.loadAnimation = function () {\n        var node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    };\n    HeatMapCellComponent.prototype.animateToCurrentForm = function () {\n        var node = select(this.element).select('.cell');\n        node\n            .transition()\n            .duration(750)\n            .attr('opacity', 1);\n    };\n    HeatMapCellComponent.prototype.onClick = function () {\n        this.select.emit(this.data);\n    };\n    HeatMapCellComponent.prototype.onMouseEnter = function () {\n        this.activate.emit(this.data);\n    };\n    HeatMapCellComponent.prototype.onMouseLeave = function () {\n        this.deactivate.emit(this.data);\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"x\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"y\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapCellComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapCellComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapCellComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeatMapCellComponent.prototype, \"onMouseEnter\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeatMapCellComponent.prototype, \"onMouseLeave\", null);\n    HeatMapCellComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-heat-map-cell]',\n            template: \"\\n    <svg:g [attr.transform]=\\\"transform\\\" class=\\\"cell\\\">\\n      <defs *ngIf=\\\"gradient\\\">\\n        <svg:g ngx-charts-svg-linear-gradient orientation=\\\"vertical\\\" [name]=\\\"gradientId\\\" [stops]=\\\"gradientStops\\\" />\\n      </defs>\\n      <svg:rect\\n        [attr.fill]=\\\"gradient ? gradientUrl : fill\\\"\\n        rx=\\\"3\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        class=\\\"cell\\\"\\n        style=\\\"cursor: pointer\\\"\\n        (click)=\\\"onClick()\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], HeatMapCellComponent);\n    return HeatMapCellComponent;\n}());\n\nvar HeatCellSeriesComponent = /** @class */ (function () {\n    function HeatCellSeriesComponent() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    HeatCellSeriesComponent.prototype.ngOnInit = function () {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    };\n    HeatCellSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    HeatCellSeriesComponent.prototype.update = function () {\n        this.cells = this.getCells();\n    };\n    HeatCellSeriesComponent.prototype.getCells = function () {\n        var _this = this;\n        var cells = [];\n        this.data.map(function (row) {\n            row.series.map(function (cell) {\n                var value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row: row,\n                    cell: cell,\n                    x: _this.xScale(row.name),\n                    y: _this.yScale(cell.name),\n                    width: _this.xScale.bandwidth(),\n                    height: _this.yScale.bandwidth(),\n                    fill: _this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    };\n    HeatCellSeriesComponent.prototype.getTooltipText = function (_a) {\n        var label = _a.label, data = _a.data, series = _a.series;\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + series + \" \\u2022 \" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + data.toLocaleString() + \"</span>\\n    \";\n    };\n    HeatCellSeriesComponent.prototype.trackBy = function (index, item) {\n        return item.tooltipText;\n    };\n    HeatCellSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatCellSeriesComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatCellSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], HeatCellSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatCellSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], HeatCellSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], HeatCellSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_c = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _c : Object)\n    ], HeatCellSeriesComponent.prototype, \"deactivate\", void 0);\n    HeatCellSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-heat-map-cell-series]',\n            template: \"\\n    <svg:g\\n      ngx-charts-heat-map-cell\\n      *ngFor=\\\"let c of cells; trackBy: trackBy\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [fill]=\\\"c.fill\\\"\\n      [data]=\\\"c.data\\\"\\n      (select)=\\\"onClick(c.cell)\\\"\\n      (activate)=\\\"activate.emit(c.cell)\\\"\\n      (deactivate)=\\\"deactivate.emit(c.cell)\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [animations]=\\\"animations\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"'top'\\\"\\n      [tooltipType]=\\\"'tooltip'\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(c)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"{ series: c.series, name: c.label, value: c.data }\\\"\\n    ></svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], HeatCellSeriesComponent);\n    return HeatCellSeriesComponent;\n}());\n\nvar HeatMapComponent = /** @class */ (function (_super) {\n    __extends(HeatMapComponent, _super);\n    function HeatMapComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.innerPadding = 8;\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.tooltipDisabled = false;\n        _this.activeEntries = [];\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.scaleType = 'linear';\n        return _this;\n    }\n    HeatMapComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === 'linear') {\n            var min$$1 = this.min;\n            var max$$1 = this.max;\n            if (!this.min) {\n                min$$1 = Math.min.apply(Math, [0].concat(this.valueDomain));\n            }\n            if (!this.max) {\n                max$$1 = Math.max.apply(Math, this.valueDomain);\n            }\n            this.valueDomain = [min$$1, max$$1];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n        this.rects = this.getRects();\n    };\n    HeatMapComponent.prototype.getXDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    };\n    HeatMapComponent.prototype.getYDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    };\n    HeatMapComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    };\n    HeatMapComponent.prototype.getDimension = function (value, index, N, L) {\n        if (index === void 0) { index = 0; }\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                .replace('\\'', '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    };\n    HeatMapComponent.prototype.getXScale = function () {\n        var f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .domain(this.xDomain)\n            .paddingInner(f);\n    };\n    HeatMapComponent.prototype.getYScale = function () {\n        var f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand()\n            .rangeRound([this.dims.height, 0])\n            .domain(this.yDomain)\n            .paddingInner(f);\n    };\n    HeatMapComponent.prototype.getRects = function () {\n        var _this = this;\n        var rects = [];\n        this.xDomain.map(function (xVal) {\n            _this.yDomain.map(function (yVal) {\n                rects.push({\n                    x: _this.xScale(xVal),\n                    y: _this.yScale(yVal),\n                    rx: 3,\n                    width: _this.xScale.bandwidth(),\n                    height: _this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    };\n    HeatMapComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    HeatMapComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    };\n    HeatMapComponent.prototype.getLegendOptions = function () {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\n            title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    };\n    HeatMapComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    HeatMapComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    HeatMapComponent.prototype.onActivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        var items = this.results\n            .map(function (g) { return g.series; })\n            .flat()\n            .filter(function (i) {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = items.slice();\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    HeatMapComponent.prototype.onDeactivate = function (event$$1, group, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        var item = Object.assign({}, event$$1);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(function (i) {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], HeatMapComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], HeatMapComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"innerPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], HeatMapComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], HeatMapComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], HeatMapComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], HeatMapComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeatMapComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"min\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], HeatMapComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], HeatMapComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], HeatMapComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], HeatMapComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], HeatMapComponent.prototype, \"tooltipTemplate\", void 0);\n    HeatMapComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-heat-map',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [animations]=\\\"animations\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"heat-map chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:rect\\n          *ngFor=\\\"let rect of rects\\\"\\n          [attr.x]=\\\"rect.x\\\"\\n          [attr.y]=\\\"rect.y\\\"\\n          [attr.rx]=\\\"rect.rx\\\"\\n          [attr.width]=\\\"rect.width\\\"\\n          [attr.height]=\\\"rect.height\\\"\\n          [attr.fill]=\\\"rect.fill\\\"\\n        />\\n        <svg:g\\n          ngx-charts-heat-map-cell-series\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [data]=\\\"results\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipText]=\\\"tooltipText\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event, undefined)\\\"\\n          (deactivate)=\\\"onDeactivate($event, undefined)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None\n        })\n    ], HeatMapComponent);\n    return HeatMapComponent;\n}(BaseChartComponent));\n\nvar HeatMapModule = /** @class */ (function () {\n    function HeatMapModule() {\n    }\n    HeatMapModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                HeatMapCellComponent,\n                HeatCellSeriesComponent,\n                HeatMapComponent\n            ],\n            exports: [\n                HeatMapCellComponent,\n                HeatCellSeriesComponent,\n                HeatMapComponent\n            ]\n        })\n    ], HeatMapModule);\n    return HeatMapModule;\n}());\n\nvar LineComponent = /** @class */ (function () {\n    function LineComponent(element) {\n        this.element = element;\n        this.fill = 'none';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n    }\n    LineComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    };\n    LineComponent.prototype.updatePathEl = function () {\n        var node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node\n                .transition().duration(750)\n                .attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineComponent.prototype, \"path\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineComponent.prototype, \"stroke\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LineComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], LineComponent.prototype, \"select\", void 0);\n    LineComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-line]',\n            template: \"\\n    <svg:path\\n      [@animationState]=\\\"'active'\\\"\\n      class=\\\"line\\\"\\n      [attr.d]=\\\"initialPath\\\"\\n      [attr.fill]=\\\"fill\\\"\\n      [attr.stroke]=\\\"stroke\\\"\\n      stroke-width=\\\"1.5px\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':enter', [\n                        style({\n                            strokeDasharray: 2000,\n                            strokeDashoffset: 2000,\n                        }),\n                        animate(1000, style({\n                            strokeDashoffset: 0\n                        }))\n                    ])\n                ])\n            ]\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], LineComponent);\n    return LineComponent;\n}());\n\nvar LineChartComponent = /** @class */ (function (_super) {\n    __extends(LineChartComponent, _super);\n    function LineChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.showGridLines = true;\n        _this.curve = curveLinear;\n        _this.activeEntries = [];\n        _this.trimXAxisTicks = true;\n        _this.trimYAxisTicks = true;\n        _this.rotateXAxisTicks = true;\n        _this.maxXAxisTickLength = 16;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.tooltipDisabled = false;\n        _this.showRefLines = false;\n        _this.showRefLabels = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.timelineHeight = 50;\n        _this.timelinePadding = 10;\n        return _this;\n    }\n    LineChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = \"url(#\" + this.clipPathId + \")\";\n    };\n    LineChartComponent.prototype.updateTimeline = function () {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = \"translate(\" + this.dims.xOffset + \", \" + -this.margin[2] + \")\";\n        }\n    };\n    LineChartComponent.prototype.getXDomain = function () {\n        var values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        var domain = [];\n        if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n        }\n        var min$$1;\n        var max$$1;\n        if (this.scaleType === 'time' || this.scaleType === 'linear') {\n            min$$1 = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, values);\n            max$$1 = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, values);\n        }\n        if (this.scaleType === 'time') {\n            domain = [new Date(min$$1), new Date(max$$1)];\n            this.xSet = values.slice().sort(function (a, b) {\n                var aDate = a.getTime();\n                var bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === 'linear') {\n            domain = [min$$1, max$$1];\n            this.xSet = values.slice().sort(function (a, b) { return a - b; });\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    };\n    LineChartComponent.prototype.getYDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        var values = domain.slice();\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        var min$$1 = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, values);\n        var max$$1 = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, values);\n        return [min$$1, max$$1];\n    };\n    LineChartComponent.prototype.getSeriesDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    LineChartComponent.prototype.getXScale = function (domain, width) {\n        var scale;\n        if (this.scaleType === 'time') {\n            scale = scaleTime()\n                .range([0, width])\n                .domain(domain);\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear()\n                .range([0, width])\n                .domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint()\n                .range([0, width])\n                .padding(0.1)\n                .domain(domain);\n        }\n        return scale;\n    };\n    LineChartComponent.prototype.getYScale = function (domain, height) {\n        var scale = scaleLinear()\n            .range([height, 0])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    LineChartComponent.prototype.updateDomain = function (domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    };\n    LineChartComponent.prototype.updateHoveredVertical = function (item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    };\n    LineChartComponent.prototype.hideCircles = function () {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    };\n    LineChartComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    LineChartComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    LineChartComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    LineChartComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    LineChartComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    LineChartComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    LineChartComponent.prototype.onActivate = function (item) {\n        this.deactivateAll();\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    LineChartComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    LineChartComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LineChartComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LineChartComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"autoScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"timeline\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], LineChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LineChartComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineChartComponent.prototype, \"rangeFillOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"trimXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"rotateXAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineChartComponent.prototype, \"maxXAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineChartComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], LineChartComponent.prototype, \"xAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], LineChartComponent.prototype, \"yAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"showRefLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"referenceLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineChartComponent.prototype, \"showRefLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"xScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineChartComponent.prototype, \"xScaleMax\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineChartComponent.prototype, \"yScaleMin\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineChartComponent.prototype, \"yScaleMax\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], LineChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], LineChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], LineChartComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ContentChild('seriesTooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _d : Object)\n    ], LineChartComponent.prototype, \"seriesTooltipTemplate\", void 0);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LineChartComponent.prototype, \"hideCircles\", null);\n    LineChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-line-chart',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"line-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [referenceLines]=\\\"referenceLines\\\"\\n          [showRefLines]=\\\"showRefLines\\\"\\n          [showRefLabels]=\\\"showRefLabels\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n            <svg:g\\n              ngx-charts-line-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [curve]=\\\"curve\\\"\\n              [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n              [hasRange]=\\\"hasRange\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        [legend]=\\\"legend\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-line-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [curve]=\\\"curve\\\"\\n            [hasRange]=\\\"hasRange\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1\n                        }),\n                        animate(500, style({\n                            opacity: 0\n                        }))\n                    ])\n                ])\n            ]\n        })\n    ], LineChartComponent);\n    return LineChartComponent;\n}(BaseChartComponent));\n\nvar LineSeriesComponent = /** @class */ (function () {\n    function LineSeriesComponent() {\n        this.animations = true;\n    }\n    LineSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    LineSeriesComponent.prototype.update = function () {\n        this.updateGradients();\n        var data = this.sortData(this.data.series);\n        var lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        var areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            var range$$1 = this.getRangeGenerator();\n            this.outerPath = range$$1(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            var values = this.data.series.map(function (d) { return d.value; });\n            var max$$1 = Math.max.apply(Math, values);\n            var min$$1 = Math.min.apply(Math, values);\n            if (max$$1 === min$$1) {\n                this.stroke = this.colors.getColor(max$$1);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    };\n    LineSeriesComponent.prototype.getLineGenerator = function () {\n        var _this = this;\n        return line()\n            .x(function (d) {\n            var label = d.name;\n            var value;\n            if (_this.scaleType === 'time') {\n                value = _this.xScale(label);\n            }\n            else if (_this.scaleType === 'linear') {\n                value = _this.xScale(Number(label));\n            }\n            else {\n                value = _this.xScale(label);\n            }\n            return value;\n        })\n            .y(function (d) { return _this.yScale(d.value); })\n            .curve(this.curve);\n    };\n    LineSeriesComponent.prototype.getRangeGenerator = function () {\n        var _this = this;\n        return area()\n            .x(function (d) {\n            var label = d.name;\n            var value;\n            if (_this.scaleType === 'time') {\n                value = _this.xScale(label);\n            }\n            else if (_this.scaleType === 'linear') {\n                value = _this.xScale(Number(label));\n            }\n            else {\n                value = _this.xScale(label);\n            }\n            return value;\n        })\n            .y0(function (d) { return _this.yScale(typeof d.min === 'number' ? d.min : d.value); })\n            .y1(function (d) { return _this.yScale(typeof d.max === 'number' ? d.max : d.value); })\n            .curve(this.curve);\n    };\n    LineSeriesComponent.prototype.getAreaGenerator = function () {\n        var _this = this;\n        var xProperty = function (d) {\n            var label = d.name;\n            return _this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(function () { return _this.yScale.range()[0]; })\n            .y1(function (d) { return _this.yScale(d.value); })\n            .curve(this.curve);\n    };\n    LineSeriesComponent.prototype.sortData = function (data) {\n        if (this.scaleType === 'linear') {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === 'time') {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    };\n    LineSeriesComponent.prototype.updateGradients = function () {\n        if (this.colors.scaleType === 'linear') {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = \"url(#\" + this.gradientId + \")\";\n            var values = this.data.series.map(function (d) { return d.value; });\n            var max$$1 = Math.max.apply(Math, values);\n            var min$$1 = Math.min.apply(Math, values);\n            this.gradientStops = this.colors.getLinearGradientStops(max$$1, min$$1);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max$$1);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    };\n    LineSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    LineSeriesComponent.prototype.isInactive = function (entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LineSeriesComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], LineSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LineSeriesComponent.prototype, \"rangeFillOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineSeriesComponent.prototype, \"hasRange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LineSeriesComponent.prototype, \"animations\", void 0);\n    LineSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-line-series]',\n            template: \"\\n    <svg:g>\\n      <defs>\\n        <svg:g ngx-charts-svg-linear-gradient *ngIf=\\\"hasGradient\\\"\\n          orientation=\\\"vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:g ngx-charts-area\\n        class=\\\"line-highlight\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"areaPath\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n        [opacity]=\\\"0.25\\\"\\n        [startOpacity]=\\\"0\\\"\\n        [gradient]=\\\"true\\\"\\n        [stops]=\\\"areaGradientStops\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n      <svg:g ngx-charts-line\\n        class=\\\"line-series\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"path\\\"\\n        [stroke]=\\\"stroke\\\"\\n        [animations]=\\\"animations\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n      />\\n     <svg:g ngx-charts-area\\n        *ngIf=\\\"hasRange\\\"\\n        class=\\\"line-series-range\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"outerPath\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n        [opacity]=\\\"rangeFillOpacity\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], LineSeriesComponent);\n    return LineSeriesComponent;\n}());\n\nvar LineChartModule = /** @class */ (function () {\n    function LineChartModule() {\n    }\n    LineChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                LineComponent,\n                LineChartComponent,\n                LineSeriesComponent\n            ],\n            exports: [\n                LineComponent,\n                LineChartComponent,\n                LineSeriesComponent\n            ]\n        })\n    ], LineChartModule);\n    return LineChartModule;\n}());\n\nvar twoPI = 2 * Math.PI;\nvar PolarChartComponent = /** @class */ (function (_super) {\n    __extends(PolarChartComponent, _super);\n    function PolarChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.showGridLines = true;\n        _this.curve = curveCardinalClosed;\n        _this.activeEntries = [];\n        _this.rangeFillOpacity = 0.15;\n        _this.trimYAxisTicks = true;\n        _this.maxYAxisTickLength = 16;\n        _this.roundDomains = false;\n        _this.tooltipDisabled = false;\n        _this.showSeriesOnHover = true;\n        _this.gradient = false;\n        _this.yAxisMinScale = 0;\n        _this.labelTrim = true;\n        _this.labelTrimSize = 10;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        return _this;\n    }\n    PolarChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    };\n    PolarChartComponent.prototype.setDims = function () {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        var halfWidth = Math.floor(this.dims.width / 2);\n        var halfHeight = Math.floor(this.dims.height / 2);\n        var outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        var yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = __assign({}, this.dims, { width: halfWidth });\n        this.transform = \"translate(\" + this.dims.xOffset + \", \" + this.margin[0] + \")\";\n        this.transformYAxis = \"translate(0, \" + yOffset + \")\";\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = \"translate(\" + halfWidth + \", \" + halfHeight + \")\";\n    };\n    PolarChartComponent.prototype.setScales = function () {\n        var xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    };\n    PolarChartComponent.prototype.setTicks = function () {\n        var _this = this;\n        var tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = function (d) {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        var outerRadius = this.outerRadius;\n        var s = 1.1;\n        this.thetaTicks = this.xDomain.map(function (d) {\n            var startAngle = _this.xScale(d);\n            var dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            var label = tickFormat(d);\n            var startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            var pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius: outerRadius,\n                startAngle: startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label: label,\n                startPos: startPos,\n                pos: pos\n            };\n        });\n        var minDistance = 10;\n        for (var i = 0; i < this.thetaTicks.length - 1; i++) {\n            var a = this.thetaTicks[i];\n            for (var j = i + 1; j < this.thetaTicks.length; j++) {\n                var b = this.thetaTicks[j];\n                if (b.pos[0] * a.pos[0] > 0) {\n                    var o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(function (d) { return _this.yScale(d); });\n    };\n    PolarChartComponent.prototype.getXValues = function () {\n        var values = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    };\n    PolarChartComponent.prototype.getXDomain = function (values) {\n        if (values === void 0) { values = this.getXValues(); }\n        if (this.scaleType === 'time') {\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            return [min$$1, max$$1];\n        }\n        else if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n            var min$$1 = Math.min.apply(Math, values);\n            var max$$1 = Math.max.apply(Math, values);\n            return [min$$1, max$$1];\n        }\n        return values;\n    };\n    PolarChartComponent.prototype.getYValues = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var results = _a[_i];\n            for (var _b = 0, _c = results.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    };\n    PolarChartComponent.prototype.getYDomain = function (domain) {\n        if (domain === void 0) { domain = this.getYValues(); }\n        var min$$1 = Math.min.apply(Math, domain);\n        var max$$1 = Math.max.apply(Math, [this.yAxisMinScale].concat(domain));\n        min$$1 = Math.max(0, min$$1);\n        if (!this.autoScale) {\n            min$$1 = Math.min(0, min$$1);\n        }\n        return [min$$1, max$$1];\n    };\n    PolarChartComponent.prototype.getSeriesDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    PolarChartComponent.prototype.getXScale = function (domain, width) {\n        switch (this.scaleType) {\n            case 'time':\n                return scaleTime()\n                    .range([0, width])\n                    .domain(domain);\n            case 'linear':\n                var scale = scaleLinear()\n                    .range([0, width])\n                    .domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    };\n    PolarChartComponent.prototype.getYScale = function (domain, height) {\n        var scale = scaleLinear()\n            .range([0, height])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    PolarChartComponent.prototype.onClick = function (data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    };\n    PolarChartComponent.prototype.setColors = function () {\n        var domain = this.schemeType === 'ordinal' ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    PolarChartComponent.prototype.getLegendOptions = function () {\n        if (this.schemeType === 'ordinal') {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    };\n    PolarChartComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    PolarChartComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    PolarChartComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item].concat(this.activeEntries) : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    PolarChartComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    PolarChartComponent.prototype.deactivateAll = function () {\n        this.activeEntries = this.activeEntries.slice();\n        for (var _i = 0, _a = this.activeEntries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    };\n    PolarChartComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PolarChartComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PolarChartComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"xAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"yAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"showXAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"showYAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PolarChartComponent.prototype, \"xAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PolarChartComponent.prototype, \"yAxisLabel\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"autoScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarChartComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PolarChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PolarChartComponent.prototype, \"schemeType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PolarChartComponent.prototype, \"rangeFillOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"trimYAxisTicks\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PolarChartComponent.prototype, \"maxYAxisTickLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], PolarChartComponent.prototype, \"xAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], PolarChartComponent.prototype, \"yAxisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"roundDomains\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"showSeriesOnHover\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PolarChartComponent.prototype, \"yAxisMinScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarChartComponent.prototype, \"labelTrim\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PolarChartComponent.prototype, \"labelTrimSize\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], PolarChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], PolarChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], PolarChartComponent.prototype, \"tooltipTemplate\", void 0);\n    PolarChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-polar-chart',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g class=\\\"polar-chart chart\\\" [attr.transform]=\\\"transform\\\">\\n        <svg:g [attr.transform]=\\\"transformPlot\\\">\\n          <svg:circle class=\\\"polar-chart-background\\\" cx=\\\"0\\\" cy=\\\"0\\\" [attr.r]=\\\"this.outerRadius\\\" />\\n          <svg:g *ngIf=\\\"showGridLines\\\">\\n            <svg:circle\\n              *ngFor=\\\"let r of radiusTicks\\\"\\n              class=\\\"gridline-path radial-gridline-path\\\"\\n              cx=\\\"0\\\"\\n              cy=\\\"0\\\"\\n              [attr.r]=\\\"r\\\"\\n            />\\n          </svg:g>\\n          <svg:g *ngIf=\\\"xAxis\\\">\\n            <svg:g\\n              ngx-charts-pie-label\\n              *ngFor=\\\"let tick of thetaTicks\\\"\\n              [data]=\\\"tick\\\"\\n              [radius]=\\\"outerRadius\\\"\\n              [label]=\\\"tick.label\\\"\\n              [max]=\\\"outerRadius\\\"\\n              [value]=\\\"showGridLines ? 1 : outerRadius\\\"\\n              [explodeSlices]=\\\"true\\\"\\n              [animations]=\\\"animations\\\"\\n              [labelTrim]=\\\"labelTrim\\\"\\n              [labelTrimSize]=\\\"labelTrimSize\\\"\\n            ></svg:g>\\n          </svg:g>\\n        </svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          [attr.transform]=\\\"transformYAxis\\\"\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yAxisScale\\\"\\n          [dims]=\\\"yAxisDims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-axis-label\\n          *ngIf=\\\"xAxis && showXAxisLabel\\\"\\n          [label]=\\\"xAxisLabel\\\"\\n          [offset]=\\\"labelOffset\\\"\\n          [orient]=\\\"'bottom'\\\"\\n          [height]=\\\"dims.height\\\"\\n          [width]=\\\"dims.width\\\"\\n        ></svg:g>\\n        <svg:g [attr.transform]=\\\"transformPlot\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n            <svg:g\\n              ngx-charts-polar-series\\n              [gradient]=\\\"gradient\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [curve]=\\\"curve\\\"\\n              [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n              [animations]=\\\"animations\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\n                \".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\",\n                \".pie-label{font-size:11px}.pie-label.animation{animation:750ms ease-in fadeIn}@keyframes fadeIn{from{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d 750ms}@keyframes drawOut{from{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\",\n                \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area{pointer-events:none}.polar-series-path{pointer-events:none}\"\n            ],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            animations: [\n                trigger('animationState', [\n                    transition(':leave', [\n                        style({\n                            opacity: 1\n                        }),\n                        animate(500, style({\n                            opacity: 0\n                        }))\n                    ])\n                ])\n            ]\n        })\n    ], PolarChartComponent);\n    return PolarChartComponent;\n}(BaseChartComponent));\n\nvar PolarSeriesComponent = /** @class */ (function () {\n    function PolarSeriesComponent() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n    }\n    PolarSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    PolarSeriesComponent.prototype.update = function () {\n        var _this = this;\n        this.updateGradients();\n        var line$$1 = this.getLineGenerator();\n        var data = this.sortData(this.data.series);\n        var seriesName = this.data.name;\n        var linearScaleType = this.colors.scaleType === 'linear';\n        var min$$1 = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min$$1 : seriesName);\n        this.path = line$$1(data) || '';\n        this.circles = data.map(function (d) {\n            var a = _this.getAngle(d);\n            var r = _this.getRadius(d);\n            var value = d.value;\n            var color = _this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            var cData = Object.assign({}, d, {\n                series: seriesName,\n                value: value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value: value,\n                color: color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (function (c) { return _this.defaultTooltipText(c); });\n    };\n    PolarSeriesComponent.prototype.getAngle = function (d) {\n        var label = d.name;\n        if (this.scaleType === 'time') {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === 'linear') {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    };\n    PolarSeriesComponent.prototype.getRadius = function (d) {\n        return this.yScale(d.value);\n    };\n    PolarSeriesComponent.prototype.getLineGenerator = function () {\n        var _this = this;\n        return lineRadial()\n            .angle(function (d) { return _this.getAngle(d); })\n            .radius(function (d) { return _this.getRadius(d); })\n            .curve(this.curve);\n    };\n    PolarSeriesComponent.prototype.sortData = function (data) {\n        if (this.scaleType === 'linear') {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === 'time') {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    };\n    PolarSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    PolarSeriesComponent.prototype.isInactive = function (entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    };\n    PolarSeriesComponent.prototype.defaultTooltipText = function (_a) {\n        var label = _a.label, value = _a.value;\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + this.data.name + \" \\u2022 \" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + value.toLocaleString() + \"</span>\\n    \";\n    };\n    PolarSeriesComponent.prototype.updateGradients = function () {\n        this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = \"url(#\" + this.gradientId + \")\";\n        if (this.colors.scaleType === 'linear') {\n            var values = this.data.series.map(function (d) { return d.value; });\n            var max$$1 = Math.max.apply(Math, values);\n            var min$$1 = Math.min.apply(Math, values);\n            this.gradientStops = this.colors.getLinearGradientStops(max$$1, min$$1);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"xScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"yScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"scaleType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"curve\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PolarSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PolarSeriesComponent.prototype, \"rangeFillOpacity\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], PolarSeriesComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarSeriesComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], PolarSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PolarSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PolarSeriesComponent.prototype, \"deactivate\", void 0);\n    PolarSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-polar-series]',\n            template: \"\\n    <svg:g class=\\\"polar-charts-series\\\">\\n      <defs>\\n        <svg:g\\n          ngx-charts-svg-radial-gradient\\n          *ngIf=\\\"hasGradient\\\"\\n          orientation=\\\"vertical\\\"\\n          [color]=\\\"seriesColor\\\"\\n          [name]=\\\"gradientId\\\"\\n          [startOpacity]=\\\"0.25\\\"\\n          [endOpacity]=\\\"1\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:g\\n        ngx-charts-line\\n        class=\\\"polar-series-path\\\"\\n        [path]=\\\"path\\\"\\n        [stroke]=\\\"hasGradient ? gradientUrl : seriesColor\\\"\\n        [class.active]=\\\"active\\\"\\n        [class.inactive]=\\\"inactive\\\"\\n        [attr.fill-opacity]=\\\"rangeFillOpacity\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : seriesColor\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n      <svg:g\\n        ngx-charts-circle\\n        *ngFor=\\\"let circle of circles\\\"\\n        class=\\\"circle\\\"\\n        [cx]=\\\"circle.cx\\\"\\n        [cy]=\\\"circle.cy\\\"\\n        [r]=\\\"circleRadius\\\"\\n        [fill]=\\\"circle.color\\\"\\n        [style.opacity]=\\\"inactive ? 0.2 : 1\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"'top'\\\"\\n        tooltipType=\\\"tooltip\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(circle)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"circle.data\\\"\\n        (select)=\\\"select.emit(circle.data)\\\"\\n        (activate)=\\\"activate.emit({ name: circle.data.series })\\\"\\n        (deactivate)=\\\"deactivate.emit({ name: circle.data.series })\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], PolarSeriesComponent);\n    return PolarSeriesComponent;\n}());\n\nvar AdvancedPieChartComponent = /** @class */ (function (_super) {\n    __extends(AdvancedPieChartComponent, _super);\n    function AdvancedPieChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.activeEntries = [];\n        _this.tooltipDisabled = false;\n        _this.label = 'Total';\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [20, 20, 20, 20];\n        return _this;\n    }\n    AdvancedPieChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        var xOffset = this.dims.width / 2;\n        var yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = \"translate(\" + xOffset + \" , \" + yOffset + \")\";\n    };\n    AdvancedPieChartComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    AdvancedPieChartComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    AdvancedPieChartComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    AdvancedPieChartComponent.prototype.onActivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    AdvancedPieChartComponent.prototype.onDeactivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AdvancedPieChartComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], AdvancedPieChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AdvancedPieChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AdvancedPieChartComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], AdvancedPieChartComponent.prototype, \"label\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], AdvancedPieChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], AdvancedPieChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], AdvancedPieChartComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedPieChartComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedPieChartComponent.prototype, \"nameFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], AdvancedPieChartComponent.prototype, \"percentageFormatting\", void 0);\n    AdvancedPieChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-advanced-pie-chart',\n            template: \"\\n    <div [style.width.px]=\\\"width\\\" [style.height.px]=\\\"height\\\">\\n      <div class=\\\"advanced-pie chart\\\" [style.width.px]=\\\"dims.width\\\" [style.height.px]=\\\"dims.height\\\">\\n        <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n          <svg:g [attr.transform]=\\\"transform\\\" class=\\\"pie chart\\\">\\n            <svg:g\\n              ngx-charts-pie-series\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"results\\\"\\n              [innerRadius]=\\\"innerRadius\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [outerRadius]=\\\"outerRadius\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [tooltipText]=\\\"tooltipText\\\"\\n              (select)=\\\"onClick($event)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n              [animations]=\\\"animations\\\"\\n            ></svg:g>\\n          </svg:g>\\n        </ngx-charts-chart>\\n      </div>\\n      <div class=\\\"advanced-pie-legend-wrapper\\\" [style.width.px]=\\\"width - dims.width\\\" [style.height.px]=\\\"height\\\">\\n        <ngx-charts-advanced-legend\\n          [data]=\\\"results\\\"\\n          [colors]=\\\"colors\\\"\\n          [width]=\\\"width - dims.width - margin[1]\\\"\\n          [label]=\\\"label\\\"\\n          [animations]=\\\"animations\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"nameFormatting\\\"\\n          [percentageFormatting]=\\\"percentageFormatting\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event, true)\\\"\\n          (deactivate)=\\\"onDeactivate($event, true)\\\"\\n        >\\n        </ngx-charts-advanced-legend>\\n      </div>\\n    </div>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], AdvancedPieChartComponent);\n    return AdvancedPieChartComponent;\n}(BaseChartComponent));\n\nvar PieLabelComponent = /** @class */ (function () {\n    function PieLabelComponent() {\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n        this.trimLabel = trimLabel;\n    }\n    PieLabelComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    PieLabelComponent.prototype.update = function () {\n        var startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = this.radius * this.value / this.max;\n        }\n        var innerArc = arc()\n            .innerRadius(startRadius)\n            .outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        var innerPos = innerArc.centroid(this.data);\n        var scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        var outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = \"M\" + innerPos + \"L\" + outerPos + \"L\" + this.data.pos;\n    };\n    Object.defineProperty(PieLabelComponent.prototype, \"textX\", {\n        get: function () {\n            return this.data.pos[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieLabelComponent.prototype, \"textY\", {\n        get: function () {\n            return this.data.pos[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieLabelComponent.prototype, \"styleTransform\", {\n        get: function () {\n            return this.isIE ? null : \"translate3d(\" + this.textX + \"px,\" + this.textY + \"px, 0)\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieLabelComponent.prototype, \"attrTransform\", {\n        get: function () {\n            return !this.isIE ? null : \"translate(\" + this.textX + \",\" + this.textY + \")\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieLabelComponent.prototype, \"textTransition\", {\n        get: function () {\n            return this.isIE || !this.animations ? null : 'transform 0.75s';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PieLabelComponent.prototype.textAnchor = function () {\n        return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\n    };\n    PieLabelComponent.prototype.midAngle = function (d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"radius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"color\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"value\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieLabelComponent.prototype, \"explodeSlices\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieLabelComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieLabelComponent.prototype, \"labelTrim\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieLabelComponent.prototype, \"labelTrimSize\", void 0);\n    PieLabelComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-pie-label]',\n            template: \"\\n    <title>{{label}}</title>\\n    <svg:g\\n      [attr.transform]=\\\"attrTransform\\\"\\n      [style.transform]=\\\"styleTransform\\\"\\n      [style.transition]=\\\"textTransition\\\">\\n      <svg:text\\n        class=\\\"pie-label\\\"\\n        [class.animation]=\\\"animations\\\"\\n        dy=\\\".35em\\\"\\n        [style.textAnchor]=\\\"textAnchor()\\\"\\n        [style.shapeRendering]=\\\"'crispEdges'\\\">\\n        {{labelTrim ? trimLabel(label, labelTrimSize) : label}}\\n      </svg:text>\\n    </svg:g>\\n    <svg:path\\n      [attr.d]=\\\"line\\\"\\n      [attr.stroke]=\\\"color\\\"\\n      fill=\\\"none\\\"\\n      class=\\\"pie-label-line line\\\"\\n      [class.animation]=\\\"animations\\\">\\n    </svg:path>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [])\n    ], PieLabelComponent);\n    return PieLabelComponent;\n}());\n\nvar PieArcComponent = /** @class */ (function () {\n    function PieArcComponent(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    PieArcComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    PieArcComponent.prototype.getGradient = function () {\n        return this.gradient ? this.gradientFill : this.fill;\n    };\n    PieArcComponent.prototype.getPointerEvents = function () {\n        return this.pointerEvents ? 'auto' : 'none';\n    };\n    PieArcComponent.prototype.update = function () {\n        var calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = \"url(#\" + this.radialGradientId + \")\";\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    };\n    PieArcComponent.prototype.calculateArc = function () {\n        var outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc()\n            .innerRadius(this.innerRadius)\n            .outerRadius(outerRadius)\n            .cornerRadius(this.cornerRadius);\n    };\n    PieArcComponent.prototype.loadAnimation = function () {\n        var node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        var calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            var copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            var interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            var interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    };\n    PieArcComponent.prototype.updateAnimation = function () {\n        var node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        var calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            var interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    };\n    PieArcComponent.prototype.onClick = function () {\n        var _this = this;\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(function () { return _this.select.emit(_this.data); }, 200);\n    };\n    PieArcComponent.prototype.onDblClick = function (event$$1) {\n        event$$1.preventDefault();\n        event$$1.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event$$1\n        });\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieArcComponent.prototype, \"startAngle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieArcComponent.prototype, \"endAngle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"outerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieArcComponent.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"value\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieArcComponent.prototype, \"explodeSlices\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieArcComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieArcComponent.prototype, \"animate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieArcComponent.prototype, \"pointerEvents\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieArcComponent.prototype, \"isActive\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieArcComponent.prototype, \"dblclick\", void 0);\n    PieArcComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-pie-arc]',\n            template: \"\\n    <svg:g class=\\\"arc-group\\\">\\n      <svg:defs *ngIf=\\\"gradient\\\">\\n        <svg:g ngx-charts-svg-radial-gradient\\n          [color]=\\\"fill\\\"\\n          orientation=\\\"vertical\\\"\\n          [name]=\\\"radialGradientId\\\"\\n          [startOpacity]=\\\"startOpacity\\\"\\n        />\\n      </svg:defs>\\n      <svg:path\\n        [attr.d]=\\\"path\\\"\\n        class=\\\"arc\\\"\\n        [class.active]=\\\"isActive\\\"\\n        [attr.fill]=\\\"getGradient()\\\"\\n        (click)=\\\"onClick()\\\"\\n        (dblclick)=\\\"onDblClick($event)\\\"\\n        (mouseenter)=\\\"activate.emit(data)\\\"\\n        (mouseleave)=\\\"deactivate.emit(data)\\\"\\n        [style.pointer-events]=\\\"getPointerEvents()\\\"\\n      />\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], PieArcComponent);\n    return PieArcComponent;\n}());\n\nvar PieChartComponent = /** @class */ (function (_super) {\n    __extends(PieChartComponent, _super);\n    function PieChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.labels = false;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.explodeSlices = false;\n        _this.doughnut = false;\n        _this.arcWidth = 0.25;\n        _this.activeEntries = [];\n        _this.tooltipDisabled = false;\n        _this.trimLabels = true;\n        _this.maxLabelLength = 10;\n        _this.dblclick = new EventEmitter();\n        _this.select = new EventEmitter();\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        return _this;\n    }\n    PieChartComponent.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        var xOffset = this.margins[3] + this.dims.width / 2;\n        var yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = \"translate(\" + xOffset + \", \" + yOffset + \")\";\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        this.data = this.results.sort(function (a, b) {\n            return _this.domain.indexOf(a.name) - _this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    };\n    PieChartComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    PieChartComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    PieChartComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    PieChartComponent.prototype.getLegendOptions = function () {\n        return {\n            scaleType: 'ordinal',\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    };\n    PieChartComponent.prototype.onActivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    PieChartComponent.prototype.onDeactivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    PieChartComponent.prototype.hasNoOptionalMarginsSet = function () {\n        return !this.margins || this.margins.length <= 0;\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"labels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PieChartComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PieChartComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"explodeSlices\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"doughnut\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"arcWidth\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieChartComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PieChartComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieChartComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieChartComponent.prototype, \"trimLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieChartComponent.prototype, \"maxLabelLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"dblclick\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PieChartComponent.prototype, \"margins\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieChartComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], PieChartComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], PieChartComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], PieChartComponent.prototype, \"tooltipTemplate\", void 0);\n    PieChartComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-pie-chart',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"translation\\\" class=\\\"pie-chart chart\\\">\\n        <svg:g\\n          ngx-charts-pie-series\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"data\\\"\\n          [showLabels]=\\\"labels\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [trimLabels]=\\\"trimLabels\\\"\\n          [maxLabelLength]=\\\"maxLabelLength\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [innerRadius]=\\\"innerRadius\\\"\\n          [outerRadius]=\\\"outerRadius\\\"\\n          [explodeSlices]=\\\"explodeSlices\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipText]=\\\"tooltipText\\\"\\n          (dblclick)=\\\"dblclick.emit($event)\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".pie-label{font-size:11px}.pie-label.animation{animation:750ms ease-in fadeIn}@keyframes fadeIn{from{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d 750ms}@keyframes drawOut{from{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], PieChartComponent);\n    return PieChartComponent;\n}(BaseChartComponent));\n\nfunction gridSize(dims, len, minWidth) {\n    var rows = 1;\n    var cols = len;\n    var width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    var xScale = scaleBand();\n    var yScale = scaleBand();\n    var width = dims.width;\n    var height = dims.height;\n    var _a = gridSize(dims, data.length, minWidth), columns = _a[0], rows = _a[1];\n    var xDomain = [];\n    var yDomain = [];\n    for (var i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (var i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    var res = [];\n    var total = designatedTotal ? designatedTotal : getTotal(data);\n    var cardWidth = xScale.bandwidth();\n    var cardHeight = yScale.bandwidth();\n    for (var i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(function (d) { return (d ? d.value : 0); }).reduce(function (sum, val) { return sum + val; }, 0);\n}\n\nvar PieGridComponent = /** @class */ (function (_super) {\n    __extends(PieGridComponent, _super);\n    function PieGridComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.tooltipDisabled = false;\n        _this.label = 'Total';\n        _this.minWidth = 150;\n        _this.activeEntries = [];\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [20, 20, 20, 20];\n        return _this;\n    }\n    PieGridComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = \"translate(\" + this.margin[3] + \" , \" + this.margin[0] + \")\";\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    };\n    PieGridComponent.prototype.defaultTooltipText = function (_a) {\n        var data = _a.data;\n        var label = trimLabel(formatLabel(data.name));\n        var val = data.value.toLocaleString();\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + val + \"</span>\\n    \";\n    };\n    PieGridComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    PieGridComponent.prototype.getSeries = function () {\n        var _this = this;\n        var total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(function (d) {\n            var baselineLabelHeight = 20;\n            var padding = 10;\n            var name = d.data.name;\n            var label = formatLabel(name);\n            var value = d.data.value;\n            var radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            var innerRadius = radius * 0.9;\n            var count = 0;\n            var colors = function () {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return _this.colorScale.getColor(label);\n                }\n            };\n            var xPos = d.x + (d.width - padding) / 2;\n            var yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: \"translate(\" + xPos + \", \" + yPos + \")\",\n                colors: colors,\n                innerRadius: innerRadius,\n                outerRadius: radius,\n                name: name,\n                label: trimLabel(label),\n                total: value,\n                value: value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    };\n    PieGridComponent.prototype.getTotal = function () {\n        return this.results.map(function (d) { return d.value; }).reduce(function (sum, d) { return sum + d; }, 0);\n    };\n    PieGridComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    PieGridComponent.prototype.setColors = function () {\n        this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    PieGridComponent.prototype.onActivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    PieGridComponent.prototype.onDeactivate = function (item, fromLegend) {\n        if (fromLegend === void 0) { fromLegend = false; }\n        item = this.results.find(function (d) {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    var _a, _b, _c;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieGridComponent.prototype, \"designatedTotal\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieGridComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], PieGridComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], PieGridComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieGridComponent.prototype, \"minWidth\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PieGridComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], PieGridComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], PieGridComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], PieGridComponent.prototype, \"tooltipTemplate\", void 0);\n    PieGridComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-pie-grid',\n            template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"pie-grid chart\\\">\\n        <svg:g *ngFor=\\\"let series of series\\\" class=\\\"pie-grid-item\\\" [attr.transform]=\\\"series.transform\\\">\\n          <svg:g\\n            ngx-charts-pie-grid-series\\n            [colors]=\\\"series.colors\\\"\\n            [data]=\\\"series.data\\\"\\n            [innerRadius]=\\\"series.innerRadius\\\"\\n            [outerRadius]=\\\"series.outerRadius\\\"\\n            [animations]=\\\"animations\\\"\\n            (select)=\\\"onClick($event)\\\"\\n            ngx-tooltip\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipPlacement]=\\\"'top'\\\"\\n            [tooltipType]=\\\"'tooltip'\\\"\\n            [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText({ data: series })\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [tooltipContext]=\\\"series.data[0].data\\\"\\n            (activate)=\\\"onActivate($event)\\\"\\n            (deactivate)=\\\"onDeactivate($event)\\\"\\n          />\\n          <svg:text\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"label percent-label\\\"\\n            dy=\\\"-0.5em\\\"\\n            x=\\\"0\\\"\\n            y=\\\"5\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"series.percent\\\"\\n            [countSuffix]=\\\"'%'\\\"\\n            text-anchor=\\\"middle\\\"\\n          ></svg:text>\\n          <svg:text *ngIf=\\\"!animations\\\" class=\\\"label percent-label\\\" dy=\\\"-0.5em\\\" x=\\\"0\\\" y=\\\"5\\\" text-anchor=\\\"middle\\\">\\n            {{ series.percent.toLocaleString() }}\\n          </svg:text>\\n          <svg:text class=\\\"label\\\" dy=\\\"0.5em\\\" x=\\\"0\\\" y=\\\"5\\\" text-anchor=\\\"middle\\\">\\n            {{ series.label }}\\n          </svg:text>\\n          <svg:text\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"label\\\"\\n            dy=\\\"1.23em\\\"\\n            x=\\\"0\\\"\\n            [attr.y]=\\\"series.outerRadius\\\"\\n            text-anchor=\\\"middle\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"series.total\\\"\\n            [countPrefix]=\\\"label + ': '\\\"\\n          ></svg:text>\\n          <svg:text\\n            *ngIf=\\\"!animations\\\"\\n            class=\\\"label\\\"\\n            dy=\\\"1.23em\\\"\\n            x=\\\"0\\\"\\n            [attr.y]=\\\"series.outerRadius\\\"\\n            text-anchor=\\\"middle\\\"\\n          >\\n            {{ label }}: {{ series.total.toLocaleString() }}\\n          </svg:text>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], PieGridComponent);\n    return PieGridComponent;\n}(BaseChartComponent));\n\nvar PieGridSeriesComponent = /** @class */ (function () {\n    function PieGridSeriesComponent(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    PieGridSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    PieGridSeriesComponent.prototype.update = function () {\n        this.layout = pie()\n            .value(function (d) { return d.data.value; })\n            .sort(null);\n        this.arcs = this.getArcs();\n    };\n    PieGridSeriesComponent.prototype.getArcs = function () {\n        var _this = this;\n        return this.layout(this.data).map(function (arc$$1, index) {\n            var label = arc$$1.data.data.name;\n            var other = arc$$1.data.data.other;\n            if (index === 0) {\n                arc$$1.startAngle = 0;\n            }\n            var color = _this.colors(label);\n            return {\n                data: arc$$1.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc$$1.startAngle,\n                endAngle: arc$$1.endAngle,\n                animate: _this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    };\n    PieGridSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(this.data[0].data);\n    };\n    PieGridSeriesComponent.prototype.trackBy = function (index, item) {\n        return item.data.name;\n    };\n    PieGridSeriesComponent.prototype.label = function (arc$$1) {\n        return arc$$1.data.name;\n    };\n    PieGridSeriesComponent.prototype.color = function (arc$$1) {\n        return this.colors(this.label(arc$$1));\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"outerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieGridSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieGridSeriesComponent.prototype, \"deactivate\", void 0);\n    PieGridSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-pie-grid-series]',\n            template: \"\\n    <svg:g class=\\\"pie-grid-arcs\\\">\\n      <svg:g\\n        ngx-charts-pie-arc\\n        *ngFor=\\\"let arc of arcs; trackBy: trackBy\\\"\\n        [attr.class]=\\\"arc.class\\\"\\n        [startAngle]=\\\"arc.startAngle\\\"\\n        [endAngle]=\\\"arc.endAngle\\\"\\n        [innerRadius]=\\\"innerRadius\\\"\\n        [outerRadius]=\\\"outerRadius\\\"\\n        [fill]=\\\"color(arc)\\\"\\n        [value]=\\\"arc.data.value\\\"\\n        [data]=\\\"arc.data\\\"\\n        [gradient]=\\\"false\\\"\\n        [pointerEvents]=\\\"arc.pointerEvents\\\"\\n        [animate]=\\\"arc.animate\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], PieGridSeriesComponent);\n    return PieGridSeriesComponent;\n}());\n\nvar PieSeriesComponent = /** @class */ (function () {\n    function PieSeriesComponent() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n    }\n    PieSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    PieSeriesComponent.prototype.update = function () {\n        var pieGenerator = pie()\n            .value(function (d) { return d.value; })\n            .sort(null);\n        var arcData = pieGenerator(this.series);\n        this.max = max(arcData, function (d) {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    };\n    PieSeriesComponent.prototype.midAngle = function (d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    };\n    PieSeriesComponent.prototype.outerArc = function () {\n        var factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    };\n    PieSeriesComponent.prototype.calculateLabelPositions = function (pieData) {\n        var _this = this;\n        var factor = 1.5;\n        var minDistance = 10;\n        var labelPositions = pieData;\n        labelPositions.forEach(function (d) {\n            d.pos = _this.outerArc().centroid(d);\n            d.pos[0] = factor * _this.outerRadius * (_this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (var i = 0; i < labelPositions.length - 1; i++) {\n            var a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (var j = i + 1; j < labelPositions.length; j++) {\n                var b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    var o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    };\n    PieSeriesComponent.prototype.labelVisible = function (myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    };\n    PieSeriesComponent.prototype.getTooltipTitle = function (a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    };\n    PieSeriesComponent.prototype.labelText = function (myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    };\n    PieSeriesComponent.prototype.label = function (myArc) {\n        return formatLabel(myArc.data.name);\n    };\n    PieSeriesComponent.prototype.defaultTooltipText = function (myArc) {\n        var label = this.label(myArc);\n        var val = formatLabel(myArc.data.value);\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + val + \"</span>\\n    \";\n    };\n    PieSeriesComponent.prototype.color = function (myArc) {\n        return this.colors.getColor(this.label(myArc));\n    };\n    PieSeriesComponent.prototype.trackBy = function (index, item) {\n        return item.data.name;\n    };\n    PieSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    PieSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"series\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"outerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"explodeSlices\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"showLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieSeriesComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], PieSeriesComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieSeriesComponent.prototype, \"trimLabels\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], PieSeriesComponent.prototype, \"maxLabelLength\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], PieSeriesComponent.prototype, \"tooltipText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], PieSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], PieSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], PieSeriesComponent.prototype, \"dblclick\", void 0);\n    PieSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-pie-series]',\n            template: \"\\n    <svg:g *ngFor=\\\"let arc of data; trackBy: trackBy\\\">\\n      <svg:g\\n        ngx-charts-pie-label\\n        *ngIf=\\\"labelVisible(arc)\\\"\\n        [data]=\\\"arc\\\"\\n        [radius]=\\\"outerRadius\\\"\\n        [color]=\\\"color(arc)\\\"\\n        [label]=\\\"labelText(arc)\\\"\\n        [labelTrim]=\\\"trimLabels\\\"\\n        [labelTrimSize]=\\\"maxLabelLength\\\"\\n        [max]=\\\"max\\\"\\n        [value]=\\\"arc.value\\\"\\n        [explodeSlices]=\\\"explodeSlices\\\"\\n        [animations]=\\\"animations\\\"\\n      ></svg:g>\\n      <svg:g\\n        ngx-charts-pie-arc\\n        [startAngle]=\\\"arc.startAngle\\\"\\n        [endAngle]=\\\"arc.endAngle\\\"\\n        [innerRadius]=\\\"innerRadius\\\"\\n        [outerRadius]=\\\"outerRadius\\\"\\n        [fill]=\\\"color(arc)\\\"\\n        [value]=\\\"arc.data.value\\\"\\n        [gradient]=\\\"gradient\\\"\\n        [data]=\\\"arc.data\\\"\\n        [max]=\\\"max\\\"\\n        [explodeSlices]=\\\"explodeSlices\\\"\\n        [isActive]=\\\"isActive(arc.data)\\\"\\n        [animate]=\\\"animations\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n        (dblclick)=\\\"dblclick.emit($event)\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"'top'\\\"\\n        [tooltipType]=\\\"'tooltip'\\\"\\n        [tooltipTitle]=\\\"getTooltipTitle(arc)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"arc.data\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], PieSeriesComponent);\n    return PieSeriesComponent;\n}());\n\nvar PieChartModule = /** @class */ (function () {\n    function PieChartModule() {\n    }\n    PieChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                AdvancedPieChartComponent,\n                PieLabelComponent,\n                PieArcComponent,\n                PieChartComponent,\n                PieGridComponent,\n                PieGridSeriesComponent,\n                PieSeriesComponent\n            ],\n            exports: [\n                AdvancedPieChartComponent,\n                PieLabelComponent,\n                PieArcComponent,\n                PieChartComponent,\n                PieGridComponent,\n                PieGridSeriesComponent,\n                PieSeriesComponent\n            ]\n        })\n    ], PieChartModule);\n    return PieChartModule;\n}());\n\nvar PolarChartModule = /** @class */ (function () {\n    function PolarChartModule() {\n    }\n    PolarChartModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule, PieChartModule, LineChartModule],\n            declarations: [\n                PolarChartComponent,\n                PolarSeriesComponent\n            ],\n            exports: [\n                PolarChartComponent,\n                PolarSeriesComponent\n            ]\n        })\n    ], PolarChartModule);\n    return PolarChartModule;\n}());\n\nvar CardComponent = /** @class */ (function () {\n    function CardComponent(element, cd, zone) {\n        this.cd = cd;\n        this.zone = zone;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    CardComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    CardComponent.prototype.ngOnDestroy = function () {\n        cancelAnimationFrame(this.animationReq);\n    };\n    CardComponent.prototype.update = function () {\n        var _this = this;\n        this.zone.run(function () {\n            var hasValue = _this.data && typeof _this.data.value !== 'undefined';\n            var valueFormatting = _this.valueFormatting || (function (card) { return card.value.toLocaleString(); });\n            var labelFormatting = _this.labelFormatting || (function (card) { return trimLabel(card.label, 55); });\n            _this.transform = \"translate(\" + _this.x + \" , \" + _this.y + \")\";\n            _this.textWidth = Math.max(0, _this.width) - _this.textPadding[1] - _this.textPadding[3];\n            _this.cardWidth = Math.max(0, _this.width);\n            _this.cardHeight = Math.max(0, _this.height);\n            _this.label = _this.label ? _this.label : _this.data.name;\n            var cardData = {\n                label: _this.label,\n                data: _this.data,\n                value: _this.data.value\n            };\n            _this.formattedLabel = labelFormatting(cardData);\n            _this.transformBand = \"translate(0 , \" + (_this.cardHeight - _this.bandHeight) + \")\";\n            var value = hasValue ? valueFormatting(cardData) : '';\n            _this.value = _this.paddedValue(value);\n            _this.setPadding();\n            _this.bandPath = roundedRect(0, 0, _this.cardWidth, _this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(function () {\n                _this.scaleText();\n                _this.value = value;\n                if (hasValue && !_this.initialized) {\n                    setTimeout(function () { return _this.startCount(); }, 20);\n                }\n            }, 8);\n        });\n    };\n    CardComponent.prototype.paddedValue = function (value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    };\n    CardComponent.prototype.startCount = function () {\n        var _this = this;\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            var val_1 = this.data.value;\n            var decs = decimalChecker(val_1);\n            var valueFormatting_1 = this.valueFormatting || (function (card) { return card.value.toLocaleString(); });\n            var callback = function (_a) {\n                var value = _a.value, finished = _a.finished;\n                _this.zone.run(function () {\n                    value = finished ? val_1 : value;\n                    _this.value = valueFormatting_1({ label: _this.label, data: _this.data, value: value });\n                    if (!finished) {\n                        _this.value = _this.paddedValue(_this.value);\n                    }\n                    _this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val_1, decs, 1, callback);\n            this.initialized = true;\n        }\n    };\n    CardComponent.prototype.scaleText = function () {\n        var _this = this;\n        this.zone.run(function () {\n            var _a = _this.textEl.nativeElement.getBoundingClientRect(), width = _a.width, height = _a.height;\n            if (width === 0 || height === 0) {\n                return;\n            }\n            var textPadding = (_this.textPadding[1] = _this.textPadding[3] = _this.cardWidth / 8);\n            var availableWidth = _this.cardWidth - 2 * textPadding;\n            var availableHeight = _this.cardHeight / 3;\n            var resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            _this.textFontSize = Math.floor(_this.textFontSize * resizeScale);\n            _this.labelFontSize = Math.min(_this.textFontSize, 15);\n            _this.setPadding();\n            _this.cd.markForCheck();\n        });\n    };\n    CardComponent.prototype.setPadding = function () {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        var padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    };\n    CardComponent.prototype.onClick = function () {\n        this.select.emit(this.data);\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"color\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"bandColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"textColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"x\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"y\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], CardComponent.prototype, \"medianSize\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], CardComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CardComponent.prototype, \"select\", void 0);\n    __decorate([\n        ViewChild('textEl', { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object)\n    ], CardComponent.prototype, \"textEl\", void 0);\n    CardComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-card]',\n            template: \"\\n    <svg:g [attr.transform]=\\\"transform\\\" class=\\\"cell\\\" (click)=\\\"onClick()\\\">\\n      <svg:rect class=\\\"card\\\" [style.fill]=\\\"color\\\" [attr.width]=\\\"cardWidth\\\" [attr.height]=\\\"cardHeight\\\" rx=\\\"3\\\" ry=\\\"3\\\" />\\n      <svg:path\\n        *ngIf=\\\"bandColor && bandColor !== color\\\"\\n        class=\\\"card-band\\\"\\n        [attr.fill]=\\\"bandColor\\\"\\n        [attr.transform]=\\\"transformBand\\\"\\n        stroke=\\\"none\\\"\\n        [attr.d]=\\\"bandPath\\\"\\n      />\\n      <title>{{ label }}</title>\\n      <svg:foreignObject\\n        class=\\\"trimmed-label\\\"\\n        x=\\\"5\\\"\\n        [attr.x]=\\\"textPadding[3]\\\"\\n        [attr.y]=\\\"cardHeight - textPadding[2]\\\"\\n        [attr.width]=\\\"textWidth\\\"\\n        [attr.height]=\\\"labelFontSize + textPadding[2]\\\"\\n        alignment-baseline=\\\"hanging\\\"\\n      >\\n        <xhtml:p\\n          [style.color]=\\\"textColor\\\"\\n          [style.fontSize.px]=\\\"labelFontSize\\\"\\n          [style.lineHeight.px]=\\\"labelFontSize\\\"\\n          [innerHTML]=\\\"formattedLabel\\\"\\n        >\\n        </xhtml:p>\\n      </svg:foreignObject>\\n      <svg:text\\n        #textEl\\n        class=\\\"value-text\\\"\\n        [attr.x]=\\\"textPadding[3]\\\"\\n        [attr.y]=\\\"textPadding[0]\\\"\\n        [style.fill]=\\\"textColor\\\"\\n        text-anchor=\\\"start\\\"\\n        alignment-baseline=\\\"hanging\\\"\\n        [style.font-size.pt]=\\\"textFontSize\\\"\\n      >\\n        {{ value }}\\n      </svg:text>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_b = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _b : Object, typeof (_c = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _c : Object, typeof (_d = typeof NgZone !== \"undefined\" && NgZone) === \"function\" ? _d : Object])\n    ], CardComponent);\n    return CardComponent;\n}());\n\nvar CardSeriesComponent = /** @class */ (function () {\n    function CardSeriesComponent() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    CardSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    CardSeriesComponent.prototype.update = function () {\n        if (this.data.length > 2) {\n            var valueFormatting_1 = this.valueFormatting || (function (card) { return card.value.toLocaleString(); });\n            var sortedLengths = this.data\n                .map(function (d) {\n                var hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting_1({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort(function (a, b) { return b - a; });\n            var idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        var cards = this.getCards();\n        this.cards = cards.filter(function (d) { return d.data.value !== null; });\n        this.emptySlots = cards.filter(function (d) { return d.data.value === null; });\n    };\n    CardSeriesComponent.prototype.getCards = function () {\n        var _this = this;\n        var yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        var xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map(function (d, index) {\n            var label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            var value = d.data.value;\n            var valueColor = label ? _this.colors.getColor(label) : _this.emptyColor;\n            var color = _this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color: color,\n                bandColor: _this.bandColor || valueColor,\n                textColor: _this.textColor || invertColor(color),\n                label: label,\n                data: d.data,\n                tooltipText: label + \": \" + value\n            };\n        });\n    };\n    CardSeriesComponent.prototype.trackBy = function (index, card) {\n        return card.label;\n    };\n    CardSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], CardSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], CardSeriesComponent.prototype, \"slots\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"innerPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"cardColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"bandColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"emptyColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"textColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], CardSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CardSeriesComponent.prototype, \"select\", void 0);\n    CardSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-card-series]',\n            template: \"\\n    <svg:rect\\n      *ngFor=\\\"let c of emptySlots; trackBy: trackBy\\\"\\n      class=\\\"card-empty\\\"\\n      [attr.x]=\\\"c.x\\\"\\n      [attr.y]=\\\"c.y\\\"\\n      [style.fill]=\\\"emptyColor\\\"\\n      [attr.width]=\\\"c.width\\\"\\n      [attr.height]=\\\"c.height\\\"\\n      rx=\\\"3\\\"\\n      ry=\\\"3\\\"\\n    />\\n    <svg:g\\n      ngx-charts-card\\n      *ngFor=\\\"let c of cards; trackBy: trackBy\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [color]=\\\"c.color\\\"\\n      [bandColor]=\\\"c.bandColor\\\"\\n      [textColor]=\\\"c.textColor\\\"\\n      [data]=\\\"c.data\\\"\\n      [label]=\\\"c.label\\\"\\n      [medianSize]=\\\"medianSize\\\"\\n      [valueFormatting]=\\\"valueFormatting\\\"\\n      [labelFormatting]=\\\"labelFormatting\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event)\\\"\\n    />\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], CardSeriesComponent);\n    return CardSeriesComponent;\n}());\n\nvar NumberCardComponent = /** @class */ (function (_super) {\n    __extends(NumberCardComponent, _super);\n    function NumberCardComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.emptyColor = 'rgba(0, 0, 0, 0)';\n        _this.innerPadding = 15;\n        _this.margin = [10, 10, 10, 10];\n        return _this;\n    }\n    Object.defineProperty(NumberCardComponent.prototype, \"clickable\", {\n        get: function () {\n            return !!this.select.observers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumberCardComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n        var size = gridSize(this.dims, this.results.length, 150);\n        var N = size[0] * size[1];\n        var data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    };\n    NumberCardComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.label; });\n    };\n    NumberCardComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    NumberCardComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NumberCardComponent.prototype, \"cardColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NumberCardComponent.prototype, \"bandColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NumberCardComponent.prototype, \"emptyColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NumberCardComponent.prototype, \"innerPadding\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NumberCardComponent.prototype, \"textColor\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NumberCardComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NumberCardComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], NumberCardComponent.prototype, \"designatedTotal\", void 0);\n    NumberCardComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-number-card',\n            template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"number-card chart\\\" [class.clickable]=\\\"clickable\\\">\\n        <svg:g\\n          ngx-charts-card-series\\n          [colors]=\\\"colors\\\"\\n          [cardColor]=\\\"cardColor\\\"\\n          [bandColor]=\\\"bandColor\\\"\\n          [textColor]=\\\"textColor\\\"\\n          [emptyColor]=\\\"emptyColor\\\"\\n          [data]=\\\"data\\\"\\n          [dims]=\\\"dims\\\"\\n          [innerPadding]=\\\"innerPadding\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [animations]=\\\"animations\\\"\\n          (select)=\\\"onClick($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], NumberCardComponent);\n    return NumberCardComponent;\n}(BaseChartComponent));\n\nvar NumberCardModule = /** @class */ (function () {\n    function NumberCardModule() {\n    }\n    NumberCardModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                CardComponent,\n                CardSeriesComponent,\n                NumberCardComponent\n            ],\n            exports: [\n                CardComponent,\n                CardSeriesComponent,\n                NumberCardComponent\n            ]\n        })\n    ], NumberCardModule);\n    return NumberCardModule;\n}());\n\nvar TreeMapCellComponent = /** @class */ (function () {\n    function TreeMapCellComponent(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    TreeMapCellComponent.prototype.ngOnChanges = function () {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (function (value) { return value.toLocaleString(); });\n        var labelFormatting = this.labelFormatting || (function (cell) { return trimLabel(cell.label, 55); });\n        var cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = \"url(#\" + this.gradientId + \")\";\n        this.gradientStops = this.getGradientStops();\n    };\n    TreeMapCellComponent.prototype.update = function () {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    };\n    TreeMapCellComponent.prototype.loadAnimation = function () {\n        var node = select(this.element).select('.cell');\n        node\n            .attr('opacity', 0)\n            .attr('x', this.x)\n            .attr('y', this.y);\n        this.animateToCurrentForm();\n    };\n    TreeMapCellComponent.prototype.getTextColor = function () {\n        return invertColor(this.fill);\n    };\n    TreeMapCellComponent.prototype.animateToCurrentForm = function () {\n        var node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n    };\n    TreeMapCellComponent.prototype.onClick = function () {\n        this.select.emit(this.data);\n    };\n    TreeMapCellComponent.prototype.getGradientStops = function () {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"fill\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"x\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"y\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"width\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"height\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"value\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"valueType\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapCellComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapCellComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellComponent.prototype, \"select\", void 0);\n    TreeMapCellComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-tree-map-cell]',\n            template: \"\\n    <svg:g>\\n      <defs *ngIf=\\\"gradient\\\">\\n        <svg:g ngx-charts-svg-linear-gradient orientation=\\\"vertical\\\" [name]=\\\"gradientId\\\" [stops]=\\\"gradientStops\\\" />\\n      </defs>\\n      <svg:rect\\n        [attr.fill]=\\\"gradient ? gradientUrl : fill\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        [attr.x]=\\\"x\\\"\\n        [attr.y]=\\\"y\\\"\\n        [style.cursor]=\\\"'pointer'\\\"\\n        class=\\\"cell\\\"\\n        (click)=\\\"onClick()\\\"\\n      />\\n      <svg:foreignObject\\n        *ngIf=\\\"width >= 70 && height >= 35\\\"\\n        [attr.x]=\\\"x\\\"\\n        [attr.y]=\\\"y\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        class=\\\"treemap-label\\\"\\n        [style.pointer-events]=\\\"'none'\\\"\\n      >\\n        <xhtml:p [style.color]=\\\"getTextColor()\\\" [style.height]=\\\"height + 'px'\\\" [style.width]=\\\"width + 'px'\\\">\\n          <xhtml:span class=\\\"treemap-label\\\" [innerHTML]=\\\"formattedLabel\\\"> </xhtml:span>\\n          <xhtml:br />\\n          <xhtml:span\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"treemap-val\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"value\\\"\\n            [valueFormatting]=\\\"valueFormatting\\\"\\n          >\\n          </xhtml:span>\\n          <xhtml:span *ngIf=\\\"!animations\\\" class=\\\"treemap-val\\\">\\n            {{ formattedValue }}\\n          </xhtml:span>\\n        </xhtml:p>\\n      </svg:foreignObject>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        }),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object])\n    ], TreeMapCellComponent);\n    return TreeMapCellComponent;\n}());\n\nvar TreeMapCellSeriesComponent = /** @class */ (function () {\n    function TreeMapCellSeriesComponent() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    TreeMapCellSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.cells = this.getCells();\n    };\n    TreeMapCellSeriesComponent.prototype.getCells = function () {\n        var _this = this;\n        return this.data.children\n            .filter(function (d) {\n            return d.depth === 1;\n        })\n            .map(function (d, index) {\n            var label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: _this.colors.getColor(label),\n                label: label,\n                value: d.value,\n                valueType: d.valueType\n            };\n        });\n    };\n    TreeMapCellSeriesComponent.prototype.getTooltipText = function (_a) {\n        var label = _a.label, value = _a.value;\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + value.toLocaleString() + \"</span>\\n    \";\n    };\n    TreeMapCellSeriesComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    TreeMapCellSeriesComponent.prototype.trackBy = function (index, item) {\n        return item.label;\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"data\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"dims\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapCellSeriesComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapCellSeriesComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], TreeMapCellSeriesComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapCellSeriesComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapCellSeriesComponent.prototype, \"select\", void 0);\n    TreeMapCellSeriesComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-tree-map-cell-series]',\n            template: \"\\n    <svg:g\\n      ngx-charts-tree-map-cell\\n      *ngFor=\\\"let c of cells; trackBy: trackBy\\\"\\n      [data]=\\\"c.data\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [fill]=\\\"c.fill\\\"\\n      [label]=\\\"c.label\\\"\\n      [value]=\\\"c.value\\\"\\n      [valueType]=\\\"c.valueType\\\"\\n      [valueFormatting]=\\\"valueFormatting\\\"\\n      [labelFormatting]=\\\"labelFormatting\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"'top'\\\"\\n      [tooltipType]=\\\"'tooltip'\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(c)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"c.data\\\"\\n    ></svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], TreeMapCellSeriesComponent);\n    return TreeMapCellSeriesComponent;\n}());\n\nvar TreeMapComponent = /** @class */ (function (_super) {\n    __extends(TreeMapComponent, _super);\n    function TreeMapComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.tooltipDisabled = false;\n        _this.gradient = false;\n        _this.select = new EventEmitter();\n        _this.margin = [10, 10, 10, 10];\n        return _this;\n    }\n    TreeMapComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        var rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        var root = stratify()\n            .id(function (d) {\n            var label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(function (d) { return (d.isRoot ? null : 'root'); })([rootNode].concat(this.results))\n            .sum(function (d) { return d.value; });\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    TreeMapComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    TreeMapComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    TreeMapComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    var _a;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapComponent.prototype, \"results\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapComponent.prototype, \"labelFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TreeMapComponent.prototype, \"gradient\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], TreeMapComponent.prototype, \"select\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _a : Object)\n    ], TreeMapComponent.prototype, \"tooltipTemplate\", void 0);\n    TreeMapComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-tree-map',\n            template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"tree-map chart\\\">\\n        <svg:g\\n          ngx-charts-tree-map-cell-series\\n          [colors]=\\\"colors\\\"\\n          [data]=\\\"data\\\"\\n          [dims]=\\\"dims\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          (select)=\\\"onClick($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], TreeMapComponent);\n    return TreeMapComponent;\n}(BaseChartComponent));\n\nvar TreeMapModule = /** @class */ (function () {\n    function TreeMapModule() {\n    }\n    TreeMapModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule],\n            declarations: [\n                TreeMapCellComponent,\n                TreeMapCellSeriesComponent,\n                TreeMapComponent\n            ],\n            exports: [\n                TreeMapCellComponent,\n                TreeMapCellSeriesComponent,\n                TreeMapComponent\n            ]\n        })\n    ], TreeMapModule);\n    return TreeMapModule;\n}());\n\nvar LinearGaugeComponent = /** @class */ (function (_super) {\n    __extends(LinearGaugeComponent, _super);\n    function LinearGaugeComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.min = 0;\n        _this.max = 100;\n        _this.value = 0;\n        _this.margin = [10, 20, 10, 20];\n        _this.valueResizeScale = 1;\n        _this.unitsResizeScale = 1;\n        _this.valueTextTransform = '';\n        _this.valueTranslate = '';\n        _this.unitsTextTransform = '';\n        _this.unitsTranslate = '';\n        return _this;\n    }\n    LinearGaugeComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        _super.prototype.ngAfterViewInit.call(this);\n        setTimeout(function () {\n            _this.scaleText('value');\n            _this.scaleText('units');\n        });\n    };\n    LinearGaugeComponent.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        var xOffset = this.margin[3] + this.dims.width / 2;\n        var yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = \"translate(\" + xOffset + \", \" + yOffset + \")\";\n        this.transformLine = \"translate(\" + (this.margin[3] + this.valueScale(this.previousValue)) + \", \" + yOffset + \")\";\n        this.valueTranslate = \"translate(0, -15)\";\n        this.unitsTranslate = \"translate(0, 15)\";\n        setTimeout(function () { return _this.scaleText('value'); }, 50);\n        setTimeout(function () { return _this.scaleText('units'); }, 50);\n    };\n    LinearGaugeComponent.prototype.getValueDomain = function () {\n        return [this.min, this.max];\n    };\n    LinearGaugeComponent.prototype.getValueScale = function () {\n        return scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.valueDomain);\n    };\n    LinearGaugeComponent.prototype.getDisplayValue = function () {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    };\n    LinearGaugeComponent.prototype.scaleText = function (element, repeat) {\n        var _this = this;\n        if (repeat === void 0) { repeat = true; }\n        var el;\n        var resizeScale;\n        if (element === 'value') {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        var _a = el.nativeElement.getBoundingClientRect(), width = _a.width, height = _a.height;\n        if (width === 0 || height === 0)\n            return;\n        var oldScale = resizeScale;\n        var availableWidth = this.dims.width;\n        var availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        var resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        var resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === 'value') {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = \"scale(\" + resizeScale + \", \" + resizeScale + \")\";\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = \"scale(\" + resizeScale + \", \" + resizeScale + \")\";\n            }\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(function () {\n                    _this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    };\n    LinearGaugeComponent.prototype.onClick = function () {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    };\n    LinearGaugeComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LinearGaugeComponent.prototype, \"min\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LinearGaugeComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LinearGaugeComponent.prototype, \"value\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LinearGaugeComponent.prototype, \"units\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LinearGaugeComponent.prototype, \"previousValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LinearGaugeComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        ViewChild('valueTextEl', { static: false }),\n        __metadata(\"design:type\", typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object)\n    ], LinearGaugeComponent.prototype, \"valueTextEl\", void 0);\n    __decorate([\n        ViewChild('unitsTextEl', { static: false }),\n        __metadata(\"design:type\", typeof (_b = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _b : Object)\n    ], LinearGaugeComponent.prototype, \"unitsTextEl\", void 0);\n    LinearGaugeComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-linear-gauge',\n            template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\" (click)=\\\"onClick()\\\">\\n      <svg:g class=\\\"linear-gauge chart\\\">\\n        <svg:g\\n          ngx-charts-bar\\n          class=\\\"background-bar\\\"\\n          [width]=\\\"dims.width\\\"\\n          [height]=\\\"3\\\"\\n          [x]=\\\"margin[3]\\\"\\n          [y]=\\\"dims.height / 2 + margin[0] - 2\\\"\\n          [data]=\\\"{}\\\"\\n          [orientation]=\\\"'horizontal'\\\"\\n          [roundEdges]=\\\"true\\\"\\n          [animations]=\\\"animations\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-bar\\n          [width]=\\\"valueScale(value)\\\"\\n          [height]=\\\"3\\\"\\n          [x]=\\\"margin[3]\\\"\\n          [y]=\\\"dims.height / 2 + margin[0] - 2\\\"\\n          [fill]=\\\"colors.getColor(units)\\\"\\n          [data]=\\\"{}\\\"\\n          [orientation]=\\\"'horizontal'\\\"\\n          [roundEdges]=\\\"true\\\"\\n          [animations]=\\\"animations\\\"\\n        ></svg:g>\\n\\n        <svg:line\\n          *ngIf=\\\"hasPreviousValue\\\"\\n          [attr.transform]=\\\"transformLine\\\"\\n          x1=\\\"0\\\"\\n          y1=\\\"5\\\"\\n          x2=\\\"0\\\"\\n          y2=\\\"15\\\"\\n          [attr.stroke]=\\\"colors.getColor(units)\\\"\\n        />\\n\\n        <svg:line\\n          *ngIf=\\\"hasPreviousValue\\\"\\n          [attr.transform]=\\\"transformLine\\\"\\n          x1=\\\"0\\\"\\n          y1=\\\"-5\\\"\\n          x2=\\\"0\\\"\\n          y2=\\\"-15\\\"\\n          [attr.stroke]=\\\"colors.getColor(units)\\\"\\n        />\\n\\n        <svg:g [attr.transform]=\\\"transform\\\">\\n          <svg:g [attr.transform]=\\\"valueTranslate\\\">\\n            <svg:text\\n              #valueTextEl\\n              class=\\\"value\\\"\\n              [style.textAnchor]=\\\"'middle'\\\"\\n              [attr.transform]=\\\"valueTextTransform\\\"\\n              alignment-baseline=\\\"after-edge\\\"\\n            >\\n              {{ displayValue }}\\n            </svg:text>\\n          </svg:g>\\n\\n          <svg:g [attr.transform]=\\\"unitsTranslate\\\">\\n            <svg:text\\n              #unitsTextEl\\n              class=\\\"units\\\"\\n              [style.textAnchor]=\\\"'middle'\\\"\\n              [attr.transform]=\\\"unitsTextTransform\\\"\\n              alignment-baseline=\\\"before-edge\\\"\\n            >\\n              {{ units }}\\n            </svg:text>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:rgba(0,0,0,.05)}.linear-gauge .units{fill:#666}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], LinearGaugeComponent);\n    return LinearGaugeComponent;\n}(BaseChartComponent));\n\nvar GaugeComponent = /** @class */ (function (_super) {\n    __extends(GaugeComponent, _super);\n    function GaugeComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.min = 0;\n        _this.max = 100;\n        _this.bigSegments = 10;\n        _this.smallSegments = 5;\n        _this.showAxis = true;\n        _this.startAngle = -120;\n        _this.angleSpan = 240;\n        _this.activeEntries = [];\n        _this.tooltipDisabled = false;\n        _this.showText = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.resizeScale = 1;\n        _this.rotation = '';\n        _this.textTransform = 'scale(1, 1)';\n        _this.cornerRadius = 10;\n        return _this;\n    }\n    GaugeComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        _super.prototype.ngAfterViewInit.call(this);\n        setTimeout(function () { return _this.scaleText(); });\n    };\n    GaugeComponent.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        var xOffset = this.margin[3] + this.dims.width / 2;\n        var yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = \"translate(\" + xOffset + \", \" + yOffset + \")\";\n        this.rotation = \"rotate(\" + this.startAngle + \")\";\n        setTimeout(function () { return _this.scaleText(); }, 50);\n    };\n    GaugeComponent.prototype.getArcs = function () {\n        var arcs = [];\n        var availableRadius = this.outerRadius * 0.7;\n        var radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        var arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        var i = 0;\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var d = _a[_i];\n            var outerRadius = this.outerRadius - i * radiusPerArc;\n            var innerRadius = outerRadius - arcWidth;\n            var backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            var valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            var arc$$1 = {\n                backgroundArc: backgroundArc,\n                valueArc: valueArc\n            };\n            arcs.push(arc$$1);\n            i++;\n        }\n        return arcs;\n    };\n    GaugeComponent.prototype.getDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    GaugeComponent.prototype.getValueDomain = function () {\n        var values = this.results.map(function (d) { return d.value; });\n        var dataMin = Math.min.apply(Math, values);\n        var dataMax = Math.max.apply(Math, values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    };\n    GaugeComponent.prototype.getValueScale = function () {\n        return scaleLinear()\n            .range([0, this.angleSpan])\n            .nice()\n            .domain(this.valueDomain);\n    };\n    GaugeComponent.prototype.getDisplayValue = function () {\n        var value = this.results.map(function (d) { return d.value; }).reduce(function (a, b) { return a + b; }, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    };\n    GaugeComponent.prototype.scaleText = function (repeat) {\n        var _this = this;\n        if (repeat === void 0) { repeat = true; }\n        if (!this.showText) {\n            return;\n        }\n        var width = this.textEl.nativeElement.getBoundingClientRect().width;\n        var oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            var availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = \"scale(\" + this.resizeScale + \", \" + this.resizeScale + \")\";\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(function () { return _this.scaleText(false); }, 50);\n            }\n        }\n    };\n    GaugeComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    GaugeComponent.prototype.getLegendOptions = function () {\n        return {\n            scaleType: 'ordinal',\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    };\n    GaugeComponent.prototype.setColors = function () {\n        this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n    };\n    GaugeComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    GaugeComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    GaugeComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    };\n    GaugeComponent.prototype.trackBy = function (index, item) {\n        return item.valueArc.data.name;\n    };\n    var _a, _b, _c, _d;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeComponent.prototype, \"legend\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], GaugeComponent.prototype, \"legendTitle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], GaugeComponent.prototype, \"legendPosition\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"min\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], GaugeComponent.prototype, \"textValue\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], GaugeComponent.prototype, \"units\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"bigSegments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"smallSegments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], GaugeComponent.prototype, \"results\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeComponent.prototype, \"showAxis\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"startAngle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeComponent.prototype, \"angleSpan\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], GaugeComponent.prototype, \"activeEntries\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeComponent.prototype, \"axisTickFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], GaugeComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeComponent.prototype, \"showText\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], GaugeComponent.prototype, \"margin\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_a = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _a : Object)\n    ], GaugeComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", typeof (_b = typeof EventEmitter !== \"undefined\" && EventEmitter) === \"function\" ? _b : Object)\n    ], GaugeComponent.prototype, \"deactivate\", void 0);\n    __decorate([\n        ContentChild('tooltipTemplate', { static: false }),\n        __metadata(\"design:type\", typeof (_c = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _c : Object)\n    ], GaugeComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        ViewChild('textEl', { static: false }),\n        __metadata(\"design:type\", typeof (_d = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _d : Object)\n    ], GaugeComponent.prototype, \"textEl\", void 0);\n    GaugeComponent = __decorate([\n        Component({\n            selector: 'ngx-charts-gauge',\n            template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"gauge chart\\\">\\n        <svg:g *ngFor=\\\"let arc of arcs; trackBy: trackBy\\\" [attr.transform]=\\\"rotation\\\">\\n          <svg:g\\n            ngx-charts-gauge-arc\\n            [backgroundArc]=\\\"arc.backgroundArc\\\"\\n            [valueArc]=\\\"arc.valueArc\\\"\\n            [cornerRadius]=\\\"cornerRadius\\\"\\n            [colors]=\\\"colors\\\"\\n            [isActive]=\\\"isActive(arc.valueArc.data)\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [valueFormatting]=\\\"valueFormatting\\\"\\n            [animations]=\\\"animations\\\"\\n            (select)=\\\"onClick($event)\\\"\\n            (activate)=\\\"onActivate($event)\\\"\\n            (deactivate)=\\\"onDeactivate($event)\\\"\\n          ></svg:g>\\n        </svg:g>\\n\\n        <svg:g\\n          ngx-charts-gauge-axis\\n          *ngIf=\\\"showAxis\\\"\\n          [bigSegments]=\\\"bigSegments\\\"\\n          [smallSegments]=\\\"smallSegments\\\"\\n          [min]=\\\"min\\\"\\n          [max]=\\\"max\\\"\\n          [radius]=\\\"outerRadius\\\"\\n          [angleSpan]=\\\"angleSpan\\\"\\n          [valueScale]=\\\"valueScale\\\"\\n          [startAngle]=\\\"startAngle\\\"\\n          [tickFormatting]=\\\"axisTickFormatting\\\"\\n        ></svg:g>\\n\\n        <svg:text\\n          #textEl\\n          *ngIf=\\\"showText\\\"\\n          [style.textAnchor]=\\\"'middle'\\\"\\n          [attr.transform]=\\\"textTransform\\\"\\n          alignment-baseline=\\\"central\\\"\\n        >\\n          <tspan x=\\\"0\\\" dy=\\\"0\\\">{{ displayValue }}</tspan>\\n          <tspan x=\\\"0\\\" dy=\\\"1.2em\\\">{{ units }}</tspan>\\n        </svg:text>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n            styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .polar-series-path.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\", \".gauge .background-arc path{fill:rgba(0,0,0,.05)}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\"],\n            encapsulation: ViewEncapsulation.None,\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], GaugeComponent);\n    return GaugeComponent;\n}(BaseChartComponent));\n\nvar GaugeArcComponent = /** @class */ (function () {\n    function GaugeArcComponent() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    GaugeArcComponent.prototype.tooltipText = function (arc$$1) {\n        var label = formatLabel(arc$$1.data.name);\n        var val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc$$1.data.value);\n        }\n        else {\n            val = formatLabel(arc$$1.data.value);\n        }\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + val + \"</span>\\n    \";\n    };\n    var _a, _b;\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"backgroundArc\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"valueArc\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_a = typeof ColorHelper !== \"undefined\" && ColorHelper) === \"function\" ? _a : Object)\n    ], GaugeArcComponent.prototype, \"colors\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeArcComponent.prototype, \"isActive\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeArcComponent.prototype, \"tooltipDisabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function)\n    ], GaugeArcComponent.prototype, \"valueFormatting\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", typeof (_b = typeof TemplateRef !== \"undefined\" && TemplateRef) === \"function\" ? _b : Object)\n    ], GaugeArcComponent.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], GaugeArcComponent.prototype, \"animations\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"select\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"activate\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], GaugeArcComponent.prototype, \"deactivate\", void 0);\n    GaugeArcComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-gauge-arc]',\n            template: \"\\n    <svg:g ngx-charts-pie-arc\\n      class=\\\"background-arc\\\"\\n      [startAngle]=\\\"0\\\"\\n      [endAngle]=\\\"backgroundArc.endAngle\\\"\\n      [innerRadius]=\\\"backgroundArc.innerRadius\\\"\\n      [outerRadius]=\\\"backgroundArc.outerRadius\\\"\\n      [cornerRadius]=\\\"cornerRadius\\\"\\n      [data]=\\\"backgroundArc.data\\\"\\n      [animate]=\\\"false\\\"\\n      [pointerEvents]=\\\"false\\\">\\n    </svg:g>\\n    <svg:g ngx-charts-pie-arc\\n      [startAngle]=\\\"0\\\"\\n      [endAngle]=\\\"valueArc.endAngle\\\"\\n      [innerRadius]=\\\"valueArc.innerRadius\\\"\\n      [outerRadius]=\\\"valueArc.outerRadius\\\"\\n      [cornerRadius]=\\\"cornerRadius\\\"\\n      [fill]=\\\"colors.getColor(valueArc.data.name)\\\"\\n      [data]=\\\"valueArc.data\\\"\\n      [animate]=\\\"animations\\\"\\n      [isActive]=\\\"isActive\\\"\\n      (select)=\\\"select.emit($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"'top'\\\"\\n      [tooltipType]=\\\"'tooltip'\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(valueArc)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"valueArc.data\\\">\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush,\n        })\n    ], GaugeArcComponent);\n    return GaugeArcComponent;\n}());\n\nvar GaugeAxisComponent = /** @class */ (function () {\n    function GaugeAxisComponent() {\n        this.rotate = '';\n    }\n    GaugeAxisComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    GaugeAxisComponent.prototype.update = function () {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = \"rotate(\" + this.rotationAngle + \")\";\n        this.ticks = this.getTicks();\n    };\n    GaugeAxisComponent.prototype.getTicks = function () {\n        var bigTickSegment = this.angleSpan / this.bigSegments;\n        var smallTickSegment = bigTickSegment / (this.smallSegments);\n        var tickLength = 20;\n        var ticks = {\n            big: [],\n            small: []\n        };\n        var startDistance = this.radius + 10;\n        var textDist = startDistance + tickLength + 10;\n        for (var i = 0; i <= this.bigSegments; i++) {\n            var angleDeg = i * bigTickSegment;\n            var angle = angleDeg * Math.PI / 180;\n            var textAnchor = this.getTextAnchor(angleDeg);\n            var skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                var text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor: textAnchor,\n                    text: text,\n                    textTransform: \"\\n            translate(\" + textDist * Math.cos(angle) + \", \" + textDist * Math.sin(angle) + \") rotate(\" + -this.rotationAngle + \")\\n          \"\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (var j = 1; j <= this.smallSegments; j++) {\n                var smallAngleDeg = angleDeg + j * smallTickSegment;\n                var smallAngle = smallAngleDeg * Math.PI / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    };\n    GaugeAxisComponent.prototype.getTextAnchor = function (angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        var textAnchor = 'middle';\n        if (angle > 45 && angle <= 135) {\n            textAnchor = 'start';\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = 'end';\n        }\n        return textAnchor;\n    };\n    GaugeAxisComponent.prototype.getTickPath = function (startDistance, tickLength, angle) {\n        var y1 = startDistance * Math.sin(angle);\n        var y2 = (startDistance + tickLength) * Math.sin(angle);\n        var x1 = startDistance * Math.cos(angle);\n        var x2 = (startDistance + tickLength) * Math.cos(angle);\n        var points = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\n        var lineGenerator = line().x(function (d) { return d.x; }).y(function (d) { return d.y; });\n        return lineGenerator(points);\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"bigSegments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"smallSegments\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"min\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"max\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeAxisComponent.prototype, \"angleSpan\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], GaugeAxisComponent.prototype, \"startAngle\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"radius\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"valueScale\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], GaugeAxisComponent.prototype, \"tickFormatting\", void 0);\n    GaugeAxisComponent = __decorate([\n        Component({\n            selector: 'g[ngx-charts-gauge-axis]',\n            template: \"\\n    <svg:g [attr.transform]=\\\"rotate\\\">\\n        <svg:g *ngFor=\\\"let tick of ticks.big\\\"\\n            class=\\\"gauge-tick gauge-tick-large\\\">\\n            <svg:path [attr.d]=\\\"tick.line\\\" />\\n        </svg:g>\\n        <svg:g *ngFor=\\\"let tick of ticks.big\\\"\\n            class=\\\"gauge-tick gauge-tick-large\\\">\\n            <svg:text\\n                [style.textAnchor]=\\\"tick.textAnchor\\\"\\n                [attr.transform]=\\\"tick.textTransform\\\"\\n                alignment-baseline=\\\"central\\\">\\n                {{tick.text}}\\n            </svg:text>\\n        </svg:g>\\n        <svg:g *ngFor=\\\"let tick of ticks.small\\\"\\n            class=\\\"gauge-tick gauge-tick-small\\\">\\n            <svg:path [attr.d]=\\\"tick.line\\\" />\\n        </svg:g>\\n    </svg:g>\\n  \",\n            changeDetection: ChangeDetectionStrategy.OnPush\n        })\n    ], GaugeAxisComponent);\n    return GaugeAxisComponent;\n}());\n\nvar GaugeModule = /** @class */ (function () {\n    function GaugeModule() {\n    }\n    GaugeModule = __decorate([\n        NgModule({\n            imports: [ChartCommonModule, PieChartModule, BarChartModule],\n            declarations: [\n                LinearGaugeComponent,\n                GaugeComponent,\n                GaugeArcComponent,\n                GaugeAxisComponent\n            ],\n            exports: [\n                LinearGaugeComponent,\n                GaugeComponent,\n                GaugeArcComponent,\n                GaugeAxisComponent\n            ]\n        })\n    ], GaugeModule);\n    return GaugeModule;\n}());\n\nvar NgxChartsModule = /** @class */ (function () {\n    function NgxChartsModule() {\n    }\n    NgxChartsModule = __decorate([\n        NgModule({\n            exports: [\n                ChartCommonModule,\n                AreaChartModule,\n                BarChartModule,\n                BubbleChartModule,\n                ForceDirectedGraphModule,\n                HeatMapModule,\n                LineChartModule,\n                PolarChartModule,\n                NumberCardModule,\n                PieChartModule,\n                TreeMapModule,\n                GaugeModule\n            ]\n        })\n    ], NgxChartsModule);\n    return NgxChartsModule;\n}());\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            var formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\nexport { NgxChartsModule, ChartCommonModule, LegendComponent, ScaleLegendComponent, LegendEntryComponent, AdvancedLegendComponent, TooltipModule, TooltipService, TooltipContentComponent, TooltipDirective, StyleTypes, AlignmentTypes, ShowTypes, AxesModule, AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, reduceTicks, CountUpDirective, count, decimalChecker, Timeline, ColorHelper, ChartComponent, AreaComponent, BaseChartComponent, CircleComponent, CircleSeriesComponent, gridSize, gridLayout, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, TooltipArea, tickFormat, trimLabel, calculateViewDimensions, formatLabel, getUniqueXDomainValues, getScaleType, AreaChartModule, AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent, BarChartModule, BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, SeriesHorizontal, BarLabelComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, D0Types, SeriesVerticalComponent, BubbleChartModule, BubbleChartComponent, getDomain, getScale, BubbleSeriesComponent, ForceDirectedGraphModule, ForceDirectedGraphComponent, HeatMapModule, HeatMapComponent, HeatMapCellComponent, HeatCellSeriesComponent, LineChartModule, LineChartComponent, LineComponent, LineSeriesComponent, PolarChartModule, PolarChartComponent, PolarSeriesComponent, NumberCardModule, NumberCardComponent, CardComponent, CardSeriesComponent, PieChartModule, AdvancedPieChartComponent, PieChartComponent, PieArcComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent, PieLabelComponent, TreeMapModule, TreeMapComponent, TreeMapCellComponent, TreeMapCellSeriesComponent, GaugeModule, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, LinearGaugeComponent };\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnChanges,\r\n    ChangeDetectionStrategy\r\n   } from '@angular/core';\r\n  import {\r\n    trigger,\r\n    state,\r\n    style,\r\n    animate,\r\n    transition\r\n  } from '@angular/animations';\r\n  import { formatLabel } from '@swimlane/ngx-charts';\r\n  \r\n  @Component({\r\n    selector: 'g[ngx-combo-charts-series-vertical]',\r\n    template: `\r\n      <svg:g ngx-charts-bar *ngFor=\"let bar of bars; trackBy: trackBy\"\r\n        [@animationState]=\"'active'\"\r\n        [width]=\"bar.width\"\r\n        [height]=\"bar.height\"\r\n        [x]=\"bar.x\"\r\n        [y]=\"bar.y\"\r\n        [fill]=\"bar.color\"\r\n        [stops]=\"bar.gradientStops\"\r\n        [data]=\"bar.data\"\r\n        [orientation]=\"'vertical'\"\r\n        [roundEdges]=\"bar.roundEdges\"\r\n        [gradient]=\"gradient\"\r\n        [isActive]=\"isActive(bar.data)\"\r\n        [animations]=\"animations\"\r\n        [noBarWhenZero]=\"noBarWhenZero\"\r\n        (select)=\"onClick($event)\"\r\n        (activate)=\"activate.emit($event)\"\r\n        (deactivate)=\"deactivate.emit($event)\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"bar.tooltipText\">\r\n      </svg:g>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations: [\r\n      trigger('animationState', [\r\n        transition('* => void', [\r\n          style({\r\n            opacity: 1,\r\n            transform: '*',\r\n          }),\r\n          animate(500, style({opacity: 0, transform: 'scale(0)'}))\r\n        ])\r\n      ])\r\n    ]\r\n  })\r\n  export class ComboSeriesVerticalComponent implements OnChanges {\r\n  \r\n    @Input() dims;\r\n    @Input() type = 'standard';\r\n    @Input() series;\r\n    @Input() seriesLine;\r\n    @Input() xScale;\r\n    @Input() yScale;\r\n    @Input() colors;\r\n    @Input() tooltipDisabled: boolean = true;\r\n    @Input() gradient: boolean;\r\n    @Input() activeEntries: any[];\r\n    @Input() seriesName: string;\r\n    @Input() animations: boolean = true;\r\n    @Input() noBarWhenZero: boolean = true;\r\n    \r\n    @Output() select = new EventEmitter();\r\n    @Output() activate = new EventEmitter();\r\n    @Output() deactivate = new EventEmitter();\r\n    @Output() bandwidth = new EventEmitter();\r\n  \r\n    bars: any;\r\n    x: any;\r\n    y: any;\r\n  \r\n    ngOnChanges(changes): void {\r\n      this.update();\r\n    }\r\n  \r\n    update(): void {\r\n      let width;\r\n      if (this.series.length) {\r\n        width = this.xScale.bandwidth();\r\n        this.bandwidth.emit(width);\r\n      }\r\n  \r\n      let d0 = 0;\r\n      let total;\r\n      if (this.type === 'normalized') {\r\n        total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n      }\r\n  \r\n      this.bars = this.series.map((d, index) => {\r\n  \r\n        let value = d.value;\r\n        const label = d.name;\r\n        const formattedLabel = formatLabel(label);\r\n        const roundEdges = this.type === 'standard';\r\n  \r\n        const bar: any = {\r\n          value,\r\n          label,\r\n          roundEdges,\r\n          data: d,\r\n          width,\r\n          formattedLabel,\r\n          height: 0,\r\n          x: 0,\r\n          y: 0\r\n        };\r\n  \r\n        if (this.type === 'standard') {\r\n          bar.height = Math.abs(this.yScale(value) - this.yScale(0));\r\n          bar.x = this.xScale(label);\r\n  \r\n          if (value < 0) {\r\n            bar.y = this.yScale(0);\r\n          } else {\r\n            bar.y = this.yScale(value);\r\n          }\r\n        } else if (this.type === 'stacked') {\r\n          const offset0 = d0;\r\n          const offset1 = offset0 + value;\r\n          d0 += value;\r\n  \r\n          bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n          bar.x = 0;\r\n          bar.y = this.yScale(offset1);\r\n          bar.offset0 = offset0;\r\n          bar.offset1 = offset1;\r\n        } else if (this.type === 'normalized') {\r\n          let offset0 = d0;\r\n          let offset1 = offset0 + value;\r\n          d0 += value;\r\n  \r\n          if (total > 0) {\r\n            offset0 = (offset0 * 100) / total;\r\n            offset1 = (offset1 * 100) / total;\r\n          } else {\r\n            offset0 = 0;\r\n            offset1 = 0;\r\n          }\r\n  \r\n          bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n          bar.x = 0;\r\n          bar.y = this.yScale(offset1);\r\n          bar.offset0 = offset0;\r\n          bar.offset1 = offset1;\r\n          value = (offset1 - offset0).toFixed(2) + '%';\r\n        }\r\n  \r\n        if (this.colors.scaleType === 'ordinal') {\r\n          bar.color = this.colors.getColor(label);\r\n        } else {\r\n          if (this.type === 'standard') {\r\n            bar.color = this.colors.getColor(value);\r\n            bar.gradientStops = this.colors.getLinearGradientStops(value);\r\n          } else {\r\n            bar.color = this.colors.getColor(bar.offset1);\r\n            bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\r\n          }\r\n        }\r\n  \r\n        let tooltipLabel = formattedLabel;\r\n        if (this.seriesName) {\r\n          tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\r\n        }\r\n        \r\n        this.getSeriesTooltips(this.seriesLine, index);\r\n        const lineValue = this.seriesLine[0].series[index].value;\r\n        const lineName = this.seriesLine[0].series[index].name;\r\n        bar.tooltipText = `\r\n          <span class=\"tooltip-label\">${tooltipLabel }</span>\r\n          <span class=\"tooltip-val\"> Y1 - ${value.toLocaleString()} • Y2 - ${lineValue.toLocaleString()}%</span>\r\n        `;\r\n  \r\n        return bar;\r\n      });\r\n    }\r\n    getSeriesTooltips(seriesLine, index) {\r\n      return seriesLine.map(d => {\r\n        return d.series[index];\r\n      });\r\n    }\r\n    isActive(entry): boolean {\r\n      if(!this.activeEntries) return false;\r\n      const item = this.activeEntries.find(d => {\r\n        return entry.name === d.name && entry.series === d.series;\r\n      });\r\n      return item !== undefined;\r\n    }\r\n  \r\n    onClick(data): void {\r\n      this.select.emit(data);\r\n    }\r\n  \r\n    trackBy(index, bar): string {\r\n      return bar.label;\r\n    }\r\n  \r\n  }","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../node_modules/@swimlane/ngx-charts/release/bar-chart/bar.component.ngfactory\";\nimport * as i2 from \"@swimlane/ngx-charts/release/common/tooltip/tooltip.directive\";\nimport * as i3 from \"@swimlane/ngx-charts/release/common/tooltip/tooltip.service\";\nimport * as i4 from \"@swimlane/ngx-charts/release/bar-chart/bar.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./combo-series-vertical.component\";\nvar styles_ComboSeriesVerticalComponent = [];\nvar RenderType_ComboSeriesVerticalComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ComboSeriesVerticalComponent, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \"* => void\", animation: [{ type: 6, styles: { opacity: 1, transform: \"*\" }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 0, transform: \"scale(0)\" }, offset: null }, timings: 500 }], options: null }], options: {} }] } });\nexport { RenderType_ComboSeriesVerticalComponent as RenderType_ComboSeriesVerticalComponent };\nfunction View_ComboSeriesVerticalComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 2, \":svg:g\", [[\"ngx-charts-bar\", \"\"], [\"ngx-tooltip\", \"\"]], [[24, \"@animationState\", 0]], [[null, \"select\"], [null, \"activate\"], [null, \"deactivate\"], [null, \"focusin\"], [null, \"blur\"], [null, \"mouseenter\"], [null, \"mouseleave\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"focusin\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1).onFocus() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 1).onBlur() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 1).onMouseEnter() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 1).onMouseLeave($event.target) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"click\" === en)) {\n        var pd_4 = (i0.ɵnov(_v, 1).onMouseClick() !== false);\n        ad = (pd_4 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_5 = (i0.ɵnov(_v, 2).onMouseEnter() !== false);\n        ad = (pd_5 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_6 = (i0.ɵnov(_v, 2).onMouseLeave() !== false);\n        ad = (pd_6 && ad);\n    } if ((\"select\" === en)) {\n        var pd_7 = (_co.onClick($event) !== false);\n        ad = (pd_7 && ad);\n    } if ((\"activate\" === en)) {\n        var pd_8 = (_co.activate.emit($event) !== false);\n        ad = (pd_8 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_9 = (_co.deactivate.emit($event) !== false);\n        ad = (pd_9 && ad);\n    } return ad; }, i1.View_BarComponent_0, i1.RenderType_BarComponent)), i0.ɵdid(1, 147456, null, 0, i2.TooltipDirective, [i3.TooltipService, i0.ViewContainerRef, i0.Renderer2], { tooltipTitle: [0, \"tooltipTitle\"], tooltipDisabled: [1, \"tooltipDisabled\"], tooltipPlacement: [2, \"tooltipPlacement\"], tooltipType: [3, \"tooltipType\"] }, null), i0.ɵdid(2, 573440, null, 0, i4.BarComponent, [i0.ElementRef], { fill: [0, \"fill\"], data: [1, \"data\"], width: [2, \"width\"], height: [3, \"height\"], x: [4, \"x\"], y: [5, \"y\"], orientation: [6, \"orientation\"], roundEdges: [7, \"roundEdges\"], gradient: [8, \"gradient\"], isActive: [9, \"isActive\"], stops: [10, \"stops\"], animations: [11, \"animations\"], noBarWhenZero: [12, \"noBarWhenZero\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_1 = _v.context.$implicit.tooltipText; var currVal_2 = _co.tooltipDisabled; var currVal_3 = \"top\"; var currVal_4 = \"tooltip\"; _ck(_v, 1, 0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_5 = _v.context.$implicit.color; var currVal_6 = _v.context.$implicit.data; var currVal_7 = _v.context.$implicit.width; var currVal_8 = _v.context.$implicit.height; var currVal_9 = _v.context.$implicit.x; var currVal_10 = _v.context.$implicit.y; var currVal_11 = \"vertical\"; var currVal_12 = _v.context.$implicit.roundEdges; var currVal_13 = _co.gradient; var currVal_14 = _co.isActive(_v.context.$implicit.data); var currVal_15 = _v.context.$implicit.gradientStops; var currVal_16 = _co.animations; var currVal_17 = _co.noBarWhenZero; _ck(_v, 2, 1, [currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17]); }, function (_ck, _v) { var currVal_0 = \"active\"; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_ComboSeriesVerticalComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_ComboSeriesVerticalComponent_1)), i0.ɵdid(1, 278528, null, 0, i5.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.bars; var currVal_1 = _co.trackBy; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nexport function View_ComboSeriesVerticalComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-combo-charts-series-vertical\", \"\"]], null, null, null, View_ComboSeriesVerticalComponent_0, RenderType_ComboSeriesVerticalComponent)), i0.ɵdid(1, 573440, null, 0, i6.ComboSeriesVerticalComponent, [], null, null)], null, null); }\nvar ComboSeriesVerticalComponentNgFactory = i0.ɵccf(\"g[ngx-combo-charts-series-vertical]\", i6.ComboSeriesVerticalComponent, View_ComboSeriesVerticalComponent_Host_0, { dims: \"dims\", type: \"type\", series: \"series\", seriesLine: \"seriesLine\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", animations: \"animations\", noBarWhenZero: \"noBarWhenZero\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", bandwidth: \"bandwidth\" }, []);\nexport { ComboSeriesVerticalComponentNgFactory as ComboSeriesVerticalComponentNgFactory };\n","\n      <svg:g ngx-charts-bar *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"'vertical'\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [isActive]=\"isActive(bar.data)\"\n        [animations]=\"animations\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"bar.tooltipText\">\n      </svg:g>\n    ","import {\r\n    Component,\r\n    Input,\r\n    ViewEncapsulation,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    HostListener,\r\n    ContentChild,\r\n    TemplateRef\r\n  } from '@angular/core';\r\n  \r\n  import {\r\n    BaseChartComponent,\r\n    LineSeriesComponent,\r\n    calculateViewDimensions,\r\n    ViewDimensions,\r\n    ColorHelper\r\n  } from '@swimlane/ngx-charts';\r\n  import * as shape from 'd3-shape';\r\n  import { scaleBand, scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\n  \r\n  @Component({\r\n    selector: 'combo-chart-component',\r\n    template: `\r\n      <ngx-charts-chart\r\n        [view]=\"[width + legendSpacing, height]\"\r\n        [showLegend]=\"legend\"\r\n        [legendOptions]=\"legendOptions\"\r\n        [activeEntries]=\"activeEntries\"\r\n        [animations]=\"animations\"\r\n        (legendLabelClick)=\"onClick($event)\"\r\n        (legendLabelActivate)=\"onActivate($event)\"\r\n        (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n      >\r\n        <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n          <svg:g\r\n            ngx-charts-x-axis\r\n            *ngIf=\"xAxis\"\r\n            [xScale]=\"xScale\"\r\n            [dims]=\"dims\"\r\n            [showLabel]=\"showXAxisLabel\"\r\n            [labelText]=\"xAxisLabel\"\r\n            [tickFormatting]=\"xAxisTickFormatting\"\r\n            (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n          ></svg:g>\r\n          <svg:g\r\n            ngx-charts-y-axis\r\n            *ngIf=\"yAxis\"\r\n            [yScale]=\"yScale\"\r\n            [dims]=\"dims\"\r\n            [yOrient]=\"yOrientLeft\"\r\n            [showGridLines]=\"showGridLines\"\r\n            [showLabel]=\"showYAxisLabel\"\r\n            [labelText]=\"yAxisLabel\"\r\n            [tickFormatting]=\"yAxisTickFormatting\"\r\n            (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n          ></svg:g>\r\n          <svg:g\r\n            ngx-charts-y-axis\r\n            *ngIf=\"yAxis\"\r\n            [yScale]=\"yScaleLine\"\r\n            [dims]=\"dims\"\r\n            [yOrient]=\"yOrientRight\"\r\n            [showGridLines]=\"showGridLines\"\r\n            [showLabel]=\"showRightYAxisLabel\"\r\n            [labelText]=\"yAxisLabelRight\"\r\n            [tickFormatting]=\"yRightAxisTickFormatting\"\r\n            (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n          ></svg:g>\r\n          <svg:g\r\n            ngx-combo-charts-series-vertical\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [colors]=\"colors\"\r\n            [series]=\"results\"\r\n            [seriesLine]=\"lineChart\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            tooltipDisabled=\"true\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [animations]=\"animations\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (activate)=\"onActivate($event)\"\r\n            (deactivate)=\"onDeactivate($event)\"\r\n            (bandwidth)=\"updateLineWidth($event)\"\r\n            (select)=\"onClick($event)\"\r\n          ></svg:g>\r\n        </svg:g>\r\n        <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\r\n          <svg:g>\r\n            <svg:g *ngFor=\"let series of lineChart; trackBy: trackBy\">\r\n              <svg:g\r\n                ngx-charts-line-series\r\n                [xScale]=\"xScaleLine\"\r\n                [yScale]=\"yScaleLine\"\r\n                [colors]=\"colorsLine\"\r\n                [data]=\"series\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [scaleType]=\"scaleType\"\r\n                [curve]=\"curve\"\r\n                [rangeFillOpacity]=\"rangeFillOpacity\"\r\n                [animations]=\"animations\"\r\n              />\r\n            </svg:g>\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              *ngIf=\"!tooltipDisabled\"\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScaleLine\"\r\n              [yScale]=\"yScaleLine\"\r\n              [results]=\"combinedSeries\"\r\n              [colors]=\"colorsLine\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n            <svg:g *ngFor=\"let series of lineChart\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                [xScale]=\"xScaleLine\"\r\n                [yScale]=\"yScaleLine\"\r\n                [colors]=\"colorsLine\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </ngx-charts-chart>\r\n    `,\r\n    styleUrls: ['./combo-chart.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n  })\r\n  export class ComboChartComponent extends BaseChartComponent {\r\n    @Input() curve: any = shape.curveMonotoneX\r\n    @Input() legend = false;\r\n    @Input() legendTitle: string = 'Legend';\r\n    @Input() legendPosition: string = 'right';\r\n    @Input() xAxis;\r\n    @Input() yAxis;\r\n    @Input() showXAxisLabel;\r\n    @Input() showYAxisLabel;\r\n    @Input() showRightYAxisLabel;\r\n    @Input() xAxisLabel;\r\n    @Input() yAxisLabel;\r\n    @Input() yAxisLabelRight;\r\n    @Input() tooltipDisabled: boolean = true;\r\n    @Input() gradient: boolean;\r\n    @Input() showGridLines: boolean = true;\r\n    @Input() activeEntries: any[] = [];\r\n    @Input() schemeType: string;\r\n    @Input() xAxisTickFormatting: any;\r\n    @Input() yAxisTickFormatting: any;\r\n    @Input() yRightAxisTickFormatting: any;\r\n    @Input() roundDomains: boolean = false;\r\n    @Input() colorSchemeLine: any[];\r\n    @Input() autoScale;\r\n    @Input() lineChart: any;\r\n    @Input() yLeftAxisScaleFactor: any;\r\n    @Input() yRightAxisScaleFactor: any;\r\n    @Input() rangeFillOpacity: number;\r\n    @Input() animations: boolean = true;\r\n    @Input() noBarWhenZero: boolean = true;\r\n  \r\n    @Output() activate: EventEmitter<any> = new EventEmitter();\r\n    @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n  \r\n    @ContentChild('tooltipTemplate', { static: false }) tooltipTemplate: TemplateRef<any>;\r\n    @ContentChild('seriesTooltipTemplate', { static: false }) seriesTooltipTemplate: TemplateRef<any>;\r\n  \r\n    @ViewChild(LineSeriesComponent, { static: false }) lineSeriesComponent: LineSeriesComponent;\r\n  \r\n    dims: ViewDimensions;\r\n    xScale: any;\r\n    yScale: any;\r\n    xDomain: any;\r\n    yDomain: any;\r\n    transform: string;\r\n    colors: ColorHelper;\r\n    colorsLine: ColorHelper;\r\n    margin: any[] = [10, 20, 10, 20];\r\n    xAxisHeight: number = 0;\r\n    yAxisWidth: number = 0;\r\n    legendOptions: any;\r\n    scaleType = 'linear';\r\n    xScaleLine;\r\n    yScaleLine;\r\n    xDomainLine;\r\n    yDomainLine;\r\n    seriesDomain;\r\n    scaledAxis;\r\n    combinedSeries;\r\n    xSet;\r\n    filteredDomain;\r\n    hoveredVertical;\r\n    yOrientLeft = 'left';\r\n    yOrientRight = 'right';\r\n    legendSpacing = 0;\r\n    bandwidth;\r\n    barPadding = 8;\r\n  \r\n    trackBy(index, item): string {\r\n      return item.name;\r\n    }\r\n  \r\n    update(): void {\r\n      super.update();\r\n      this.dims = calculateViewDimensions({\r\n        width: this.width,\r\n        height: this.height,\r\n        margins: this.margin,\r\n        showXAxis: this.xAxis,\r\n        showYAxis: this.yAxis,\r\n        xAxisHeight: this.xAxisHeight,\r\n        yAxisWidth: this.yAxisWidth,\r\n        showXLabel: this.showXAxisLabel,\r\n        showYLabel: this.showYAxisLabel,\r\n        showLegend: this.legend,\r\n        legendType: this.schemeType,\r\n        legendPosition: this.legendPosition\r\n      });\r\n  \r\n      if (!this.yAxis) {\r\n        this.legendSpacing = 0;\r\n      } else if (this.showYAxisLabel && this.yAxis) {\r\n        this.legendSpacing = 100;\r\n      } else {\r\n        this.legendSpacing = 40;\r\n      }\r\n      this.xScale = this.getXScale();\r\n      this.yScale = this.getYScale();\r\n  \r\n      // line chart\r\n      this.xDomainLine = this.getXDomainLine();\r\n      if (this.filteredDomain) {\r\n        this.xDomainLine = this.filteredDomain;\r\n      }\r\n  \r\n      this.yDomainLine = this.getYDomainLine();\r\n      this.seriesDomain = this.getSeriesDomain();\r\n  \r\n      this.scaleLines();\r\n  \r\n      this.setColors();\r\n      this.legendOptions = this.getLegendOptions();\r\n  \r\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n    }\r\n  \r\n    deactivateAll() {\r\n      this.activeEntries = [...this.activeEntries];\r\n      for (const entry of this.activeEntries) {\r\n        this.deactivate.emit({ value: entry, entries: [] });\r\n      }\r\n      this.activeEntries = [];\r\n    }\r\n  \r\n    @HostListener('mouseleave')\r\n    hideCircles(): void {\r\n      this.hoveredVertical = null;\r\n      this.deactivateAll();\r\n    }\r\n  \r\n    updateHoveredVertical(item): void {\r\n      this.hoveredVertical = item.value;\r\n      this.deactivateAll();\r\n    }\r\n  \r\n    updateDomain(domain): void {\r\n      this.filteredDomain = domain;\r\n      this.xDomainLine = this.filteredDomain;\r\n      this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\r\n    }\r\n  \r\n    scaleLines() {\r\n      this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\r\n      this.yScaleLine = this.getYScaleLine(this.yDomainLine, this.dims.height);\r\n    }\r\n  \r\n    getSeriesDomain(): any[] {\r\n      this.combinedSeries = this.lineChart.slice(0);\r\n      this.combinedSeries.push({\r\n        name: this.yAxisLabel,\r\n        series: this.results\r\n      });\r\n      return this.combinedSeries.map(d => d.name);\r\n    }\r\n  \r\n    isDate(value): boolean {\r\n      if (value instanceof Date) {\r\n        return true;\r\n      }\r\n  \r\n      return false;\r\n    }\r\n  \r\n    getScaleType(values): string {\r\n      let date = true;\r\n      let num = true;\r\n  \r\n      for (const value of values) {\r\n        if (!this.isDate(value)) {\r\n          date = false;\r\n        }\r\n  \r\n        if (typeof value !== 'number') {\r\n          num = false;\r\n        }\r\n      }\r\n  \r\n      if (date) return 'time';\r\n      if (num) return 'linear';\r\n      return 'ordinal';\r\n    }\r\n  \r\n    getXDomainLine(): any[] {\r\n      let values = [];\r\n  \r\n      for (const results of this.lineChart) {\r\n        for (const d of results.series) {\r\n          if (!values.includes(d.name)) {\r\n            values.push(d.name);\r\n          }\r\n        }\r\n      }\r\n  \r\n      this.scaleType = this.getScaleType(values);\r\n      let domain = [];\r\n  \r\n      if (this.scaleType === 'time') {\r\n        const min = Math.min(...values);\r\n        const max = Math.max(...values);\r\n        domain = [min, max];\r\n      } else if (this.scaleType === 'linear') {\r\n        values = values.map(v => Number(v));\r\n        const min = Math.min(...values);\r\n        const max = Math.max(...values);\r\n        domain = [min, max];\r\n      } else {\r\n        domain = values;\r\n      }\r\n  \r\n      this.xSet = values;\r\n      return domain;\r\n    }\r\n  \r\n    getYDomainLine(): any[] {\r\n      const domain = [];\r\n  \r\n      for (const results of this.lineChart) {\r\n        for (const d of results.series) {\r\n          if (domain.indexOf(d.value) < 0) {\r\n            domain.push(d.value);\r\n          }\r\n          if (d.min !== undefined) {\r\n            if (domain.indexOf(d.min) < 0) {\r\n              domain.push(d.min);\r\n            }\r\n          }\r\n          if (d.max !== undefined) {\r\n            if (domain.indexOf(d.max) < 0) {\r\n              domain.push(d.max);\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      let min = Math.min(...domain);\r\n      const max = Math.max(...domain);\r\n      if (this.yRightAxisScaleFactor) {\r\n        const minMax = this.yRightAxisScaleFactor(min, max);\r\n        return [Math.min(0, minMax.min), minMax.max];\r\n      } else {\r\n        min = Math.min(0, min);\r\n        return [min, max];\r\n      }\r\n    }\r\n  \r\n    getXScaleLine(domain, width): any {\r\n      let scale;\r\n      if (this.bandwidth === undefined) {\r\n        this.bandwidth = width - this.barPadding;\r\n      }\r\n      const offset = Math.floor((width + this.barPadding - (this.bandwidth + this.barPadding) * domain.length) / 2);\r\n  \r\n      if (this.scaleType === 'time') {\r\n        scale = scaleTime()\r\n          .range([0, width])\r\n          .domain(domain);\r\n      } else if (this.scaleType === 'linear') {\r\n        scale = scaleLinear()\r\n          .range([0, width])\r\n          .domain(domain);\r\n  \r\n        if (this.roundDomains) {\r\n          scale = scale.nice();\r\n        }\r\n      } else if (this.scaleType === 'ordinal') {\r\n        scale = scalePoint()\r\n          .range([offset + this.bandwidth / 2, width - offset - this.bandwidth / 2])\r\n          .domain(domain);\r\n      }\r\n  \r\n      return scale;\r\n    }\r\n  \r\n    getYScaleLine(domain, height): any {\r\n      const scale = scaleLinear()\r\n        .range([height, 0])\r\n        .domain(domain);\r\n  \r\n      return this.roundDomains ? scale.nice() : scale;\r\n    }\r\n  \r\n    getXScale(): any {\r\n      this.xDomain = this.getXDomain();\r\n      const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\r\n      return scaleBand()\r\n        .range([0, this.dims.width])\r\n        .paddingInner(spacing)\r\n        .domain(this.xDomain);\r\n    }\r\n  \r\n    getYScale(): any {\r\n      this.yDomain = this.getYDomain();\r\n      const scale = scaleLinear()\r\n        .range([this.dims.height, 0])\r\n        .domain(this.yDomain);\r\n      return this.roundDomains ? scale.nice() : scale;\r\n    }\r\n  \r\n    getXDomain(): any[] {\r\n      return this.results.map(d => d.name);\r\n    }\r\n  \r\n    getYDomain() {\r\n      const values = this.results.map(d => d.value);\r\n      const min = Math.min(0, ...values);\r\n      const max = Math.max(...values);\r\n      if (this.yLeftAxisScaleFactor) {\r\n        const minMax = this.yLeftAxisScaleFactor(min, max);\r\n        return [Math.min(0, minMax.min), minMax.max];\r\n      } else {\r\n        return [min, max];\r\n      }\r\n    }\r\n  \r\n    onClick(data) {\r\n      this.select.emit(data);\r\n    }\r\n  \r\n    setColors(): void {\r\n      let domain;\r\n      if (this.schemeType === 'ordinal') {\r\n        domain = this.xDomain;\r\n      } else {\r\n        domain = this.yDomain;\r\n      }\r\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n      this.colorsLine = new ColorHelper(this.colorSchemeLine, this.schemeType, domain, this.customColors);\r\n    }\r\n  \r\n    getLegendOptions() {\r\n      const opts = {\r\n        scaleType: this.schemeType,\r\n        colors: undefined,\r\n        domain: [],\r\n        title: undefined,\r\n        position: this.legendPosition\r\n      };\r\n      if (opts.scaleType === 'ordinal') {\r\n        opts.domain = this.seriesDomain;\r\n        opts.colors = this.colorsLine;\r\n        opts.title = this.legendTitle;\r\n      } else {\r\n        opts.domain = this.seriesDomain;\r\n        opts.colors = this.colors.scale;\r\n      }\r\n      return opts;\r\n    }\r\n  \r\n    updateLineWidth(width): void {\r\n      this.bandwidth = width;\r\n      this.scaleLines();\r\n    }\r\n  \r\n    updateYAxisWidth({ width }): void {\r\n      this.yAxisWidth = width + 20;\r\n      this.update();\r\n    }\r\n  \r\n    updateXAxisHeight({ height }): void {\r\n      this.xAxisHeight = height;\r\n      this.update();\r\n    }\r\n  \r\n    onActivate(item) {\r\n      const idx = this.activeEntries.findIndex(d => {\r\n        return d.name === item.name && d.value === item.value && d.series === item.series;\r\n      });\r\n      if (idx > -1) {\r\n        return;\r\n      }\r\n  \r\n      this.activeEntries = [item, ...this.activeEntries];\r\n      this.activate.emit({ value: item, entries: this.activeEntries });\r\n    }\r\n  \r\n    onDeactivate(item) {\r\n      const idx = this.activeEntries.findIndex(d => {\r\n        return d.name === item.name && d.value === item.value && d.series === item.series;\r\n      });\r\n  \r\n      this.activeEntries.splice(idx, 1);\r\n      this.activeEntries = [...this.activeEntries];\r\n  \r\n      this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n    }\r\n  }","import { __extends, __read, __spread, __values } from \"tslib\";\nimport { EventEmitter, TemplateRef } from '@angular/core';\nimport { BaseChartComponent, LineSeriesComponent, calculateViewDimensions, ColorHelper } from '@swimlane/ngx-charts';\nimport * as shape from 'd3-shape';\nimport { scaleBand, scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nvar ComboChartComponent = /** @class */ (function (_super) {\n    __extends(ComboChartComponent, _super);\n    function ComboChartComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.curve = shape.curveMonotoneX;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.legendPosition = 'right';\n        _this.tooltipDisabled = true;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.roundDomains = false;\n        _this.animations = true;\n        _this.noBarWhenZero = true;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.scaleType = 'linear';\n        _this.yOrientLeft = 'left';\n        _this.yOrientRight = 'right';\n        _this.legendSpacing = 0;\n        _this.barPadding = 8;\n        return _this;\n    }\n    ComboChartComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    ComboChartComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (!this.yAxis) {\n            this.legendSpacing = 0;\n        }\n        else if (this.showYAxisLabel && this.yAxis) {\n            this.legendSpacing = 100;\n        }\n        else {\n            this.legendSpacing = 40;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        // line chart\n        this.xDomainLine = this.getXDomainLine();\n        if (this.filteredDomain) {\n            this.xDomainLine = this.filteredDomain;\n        }\n        this.yDomainLine = this.getYDomainLine();\n        this.seriesDomain = this.getSeriesDomain();\n        this.scaleLines();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    ComboChartComponent.prototype.deactivateAll = function () {\n        var e_1, _a;\n        this.activeEntries = __spread(this.activeEntries);\n        try {\n            for (var _b = __values(this.activeEntries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var entry = _c.value;\n                this.deactivate.emit({ value: entry, entries: [] });\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.activeEntries = [];\n    };\n    ComboChartComponent.prototype.hideCircles = function () {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    };\n    ComboChartComponent.prototype.updateHoveredVertical = function (item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    };\n    ComboChartComponent.prototype.updateDomain = function (domain) {\n        this.filteredDomain = domain;\n        this.xDomainLine = this.filteredDomain;\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n    };\n    ComboChartComponent.prototype.scaleLines = function () {\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n        this.yScaleLine = this.getYScaleLine(this.yDomainLine, this.dims.height);\n    };\n    ComboChartComponent.prototype.getSeriesDomain = function () {\n        this.combinedSeries = this.lineChart.slice(0);\n        this.combinedSeries.push({\n            name: this.yAxisLabel,\n            series: this.results\n        });\n        return this.combinedSeries.map(function (d) { return d.name; });\n    };\n    ComboChartComponent.prototype.isDate = function (value) {\n        if (value instanceof Date) {\n            return true;\n        }\n        return false;\n    };\n    ComboChartComponent.prototype.getScaleType = function (values) {\n        var e_2, _a;\n        var date = true;\n        var num = true;\n        try {\n            for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n                var value = values_1_1.value;\n                if (!this.isDate(value)) {\n                    date = false;\n                }\n                if (typeof value !== 'number') {\n                    num = false;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        if (date)\n            return 'time';\n        if (num)\n            return 'linear';\n        return 'ordinal';\n    };\n    ComboChartComponent.prototype.getXDomainLine = function () {\n        var e_3, _a, e_4, _b;\n        var values = [];\n        try {\n            for (var _c = __values(this.lineChart), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var results = _d.value;\n                try {\n                    for (var _e = (e_4 = void 0, __values(results.series)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var d = _f.value;\n                        if (!values.includes(d.name)) {\n                            values.push(d.name);\n                        }\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this.scaleType = this.getScaleType(values);\n        var domain = [];\n        if (this.scaleType === 'time') {\n            var min = Math.min.apply(Math, __spread(values));\n            var max = Math.max.apply(Math, __spread(values));\n            domain = [min, max];\n        }\n        else if (this.scaleType === 'linear') {\n            values = values.map(function (v) { return Number(v); });\n            var min = Math.min.apply(Math, __spread(values));\n            var max = Math.max.apply(Math, __spread(values));\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        this.xSet = values;\n        return domain;\n    };\n    ComboChartComponent.prototype.getYDomainLine = function () {\n        var e_5, _a, e_6, _b;\n        var domain = [];\n        try {\n            for (var _c = __values(this.lineChart), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var results = _d.value;\n                try {\n                    for (var _e = (e_6 = void 0, __values(results.series)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var d = _f.value;\n                        if (domain.indexOf(d.value) < 0) {\n                            domain.push(d.value);\n                        }\n                        if (d.min !== undefined) {\n                            if (domain.indexOf(d.min) < 0) {\n                                domain.push(d.min);\n                            }\n                        }\n                        if (d.max !== undefined) {\n                            if (domain.indexOf(d.max) < 0) {\n                                domain.push(d.max);\n                            }\n                        }\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        var min = Math.min.apply(Math, __spread(domain));\n        var max = Math.max.apply(Math, __spread(domain));\n        if (this.yRightAxisScaleFactor) {\n            var minMax = this.yRightAxisScaleFactor(min, max);\n            return [Math.min(0, minMax.min), minMax.max];\n        }\n        else {\n            min = Math.min(0, min);\n            return [min, max];\n        }\n    };\n    ComboChartComponent.prototype.getXScaleLine = function (domain, width) {\n        var scale;\n        if (this.bandwidth === undefined) {\n            this.bandwidth = width - this.barPadding;\n        }\n        var offset = Math.floor((width + this.barPadding - (this.bandwidth + this.barPadding) * domain.length) / 2);\n        if (this.scaleType === 'time') {\n            scale = scaleTime()\n                .range([0, width])\n                .domain(domain);\n        }\n        else if (this.scaleType === 'linear') {\n            scale = scaleLinear()\n                .range([0, width])\n                .domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === 'ordinal') {\n            scale = scalePoint()\n                .range([offset + this.bandwidth / 2, width - offset - this.bandwidth / 2])\n                .domain(domain);\n        }\n        return scale;\n    };\n    ComboChartComponent.prototype.getYScaleLine = function (domain, height) {\n        var scale = scaleLinear()\n            .range([height, 0])\n            .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    ComboChartComponent.prototype.getXScale = function () {\n        this.xDomain = this.getXDomain();\n        var spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand()\n            .range([0, this.dims.width])\n            .paddingInner(spacing)\n            .domain(this.xDomain);\n    };\n    ComboChartComponent.prototype.getYScale = function () {\n        this.yDomain = this.getYDomain();\n        var scale = scaleLinear()\n            .range([this.dims.height, 0])\n            .domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    ComboChartComponent.prototype.getXDomain = function () {\n        return this.results.map(function (d) { return d.name; });\n    };\n    ComboChartComponent.prototype.getYDomain = function () {\n        var values = this.results.map(function (d) { return d.value; });\n        var min = Math.min.apply(Math, __spread([0], values));\n        var max = Math.max.apply(Math, __spread(values));\n        if (this.yLeftAxisScaleFactor) {\n            var minMax = this.yLeftAxisScaleFactor(min, max);\n            return [Math.min(0, minMax.min), minMax.max];\n        }\n        else {\n            return [min, max];\n        }\n    };\n    ComboChartComponent.prototype.onClick = function (data) {\n        this.select.emit(data);\n    };\n    ComboChartComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n        this.colorsLine = new ColorHelper(this.colorSchemeLine, this.schemeType, domain, this.customColors);\n    };\n    ComboChartComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colorsLine;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    ComboChartComponent.prototype.updateLineWidth = function (width) {\n        this.bandwidth = width;\n        this.scaleLines();\n    };\n    ComboChartComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width + 20;\n        this.update();\n    };\n    ComboChartComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    ComboChartComponent.prototype.onActivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = __spread([item], this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    ComboChartComponent.prototype.onDeactivate = function (item) {\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = __spread(this.activeEntries);\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    return ComboChartComponent;\n}(BaseChartComponent));\nexport { ComboChartComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./combo-chart.component.scss.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@swimlane/ngx-charts/release/common/axes/x-axis.component.ngfactory\";\nimport * as i3 from \"@swimlane/ngx-charts/release/common/axes/x-axis.component\";\nimport * as i4 from \"../../../../../node_modules/@swimlane/ngx-charts/release/common/axes/y-axis.component.ngfactory\";\nimport * as i5 from \"@swimlane/ngx-charts/release/common/axes/y-axis.component\";\nimport * as i6 from \"../../../../../node_modules/@swimlane/ngx-charts/release/line-chart/line-series.component.ngfactory\";\nimport * as i7 from \"@swimlane/ngx-charts/release/line-chart/line-series.component\";\nimport * as i8 from \"../../../../../node_modules/@swimlane/ngx-charts/release/common/tooltip-area.component.ngfactory\";\nimport * as i9 from \"@swimlane/ngx-charts/release/common/tooltip-area.component\";\nimport * as i10 from \"../../../../../node_modules/@swimlane/ngx-charts/release/common/circle-series.component.ngfactory\";\nimport * as i11 from \"@swimlane/ngx-charts/release/common/circle-series.component\";\nimport * as i12 from \"../../../../../node_modules/@swimlane/ngx-charts/release/common/charts/chart.component.ngfactory\";\nimport * as i13 from \"@swimlane/ngx-charts/release/common/tooltip/tooltip.service\";\nimport * as i14 from \"@swimlane/ngx-charts/release/common/tooltip/injection.service\";\nimport * as i15 from \"@swimlane/ngx-charts/release/common/charts/chart.component\";\nimport * as i16 from \"@angular/common\";\nimport * as i17 from \"./combo-series-vertical.component.ngfactory\";\nimport * as i18 from \"./combo-series-vertical.component\";\nimport * as i19 from \"./combo-chart.component\";\nvar styles_ComboChartComponent = [i0.styles];\nvar RenderType_ComboChartComponent = i1.ɵcrt({ encapsulation: 2, styles: styles_ComboChartComponent, data: {} });\nexport { RenderType_ComboChartComponent as RenderType_ComboChartComponent };\nfunction View_ComboChartComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-x-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateXAxisHeight($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_XAxisComponent_0, i2.RenderType_XAxisComponent)), i1.ɵdid(1, 573440, null, 0, i3.XAxisComponent, [], { xScale: [0, \"xScale\"], dims: [1, \"dims\"], tickFormatting: [2, \"tickFormatting\"], showLabel: [3, \"showLabel\"], labelText: [4, \"labelText\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.xScale; var currVal_1 = _co.dims; var currVal_2 = _co.xAxisTickFormatting; var currVal_3 = _co.showXAxisLabel; var currVal_4 = _co.xAxisLabel; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }, null); }\nfunction View_ComboChartComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-y-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateYAxisWidth($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_YAxisComponent_0, i4.RenderType_YAxisComponent)), i1.ɵdid(1, 573440, null, 0, i5.YAxisComponent, [], { yScale: [0, \"yScale\"], dims: [1, \"dims\"], tickFormatting: [2, \"tickFormatting\"], showGridLines: [3, \"showGridLines\"], showLabel: [4, \"showLabel\"], labelText: [5, \"labelText\"], yOrient: [6, \"yOrient\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.yScale; var currVal_1 = _co.dims; var currVal_2 = _co.yAxisTickFormatting; var currVal_3 = _co.showGridLines; var currVal_4 = _co.showYAxisLabel; var currVal_5 = _co.yAxisLabel; var currVal_6 = _co.yOrientLeft; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, null); }\nfunction View_ComboChartComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-y-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateYAxisWidth($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_YAxisComponent_0, i4.RenderType_YAxisComponent)), i1.ɵdid(1, 573440, null, 0, i5.YAxisComponent, [], { yScale: [0, \"yScale\"], dims: [1, \"dims\"], tickFormatting: [2, \"tickFormatting\"], showGridLines: [3, \"showGridLines\"], showLabel: [4, \"showLabel\"], labelText: [5, \"labelText\"], yOrient: [6, \"yOrient\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.yScaleLine; var currVal_1 = _co.dims; var currVal_2 = _co.yRightAxisTickFormatting; var currVal_3 = _co.showGridLines; var currVal_4 = _co.showRightYAxisLabel; var currVal_5 = _co.yAxisLabelRight; var currVal_6 = _co.yOrientRight; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, null); }\nfunction View_ComboChartComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \":svg:g\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-line-series\", \"\"]], null, null, null, i6.View_LineSeriesComponent_0, i6.RenderType_LineSeriesComponent)), i1.ɵdid(2, 573440, [[1, 4]], 0, i7.LineSeriesComponent, [], { data: [0, \"data\"], xScale: [1, \"xScale\"], yScale: [2, \"yScale\"], colors: [3, \"colors\"], scaleType: [4, \"scaleType\"], curve: [5, \"curve\"], activeEntries: [6, \"activeEntries\"], rangeFillOpacity: [7, \"rangeFillOpacity\"], animations: [8, \"animations\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit; var currVal_1 = _co.xScaleLine; var currVal_2 = _co.yScaleLine; var currVal_3 = _co.colorsLine; var currVal_4 = _co.scaleType; var currVal_5 = _co.curve; var currVal_6 = _co.activeEntries; var currVal_7 = _co.rangeFillOpacity; var currVal_8 = _co.animations; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, null); }\nfunction View_ComboChartComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-tooltip-area\", \"\"]], null, [[null, \"hover\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"hover\" === en)) {\n        var pd_0 = (_co.updateHoveredVertical($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i8.View_TooltipArea_0, i8.RenderType_TooltipArea)), i1.ɵdid(1, 49152, null, 0, i9.TooltipArea, [], { dims: [0, \"dims\"], xSet: [1, \"xSet\"], xScale: [2, \"xScale\"], yScale: [3, \"yScale\"], results: [4, \"results\"], colors: [5, \"colors\"], tooltipDisabled: [6, \"tooltipDisabled\"] }, { hover: \"hover\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dims; var currVal_1 = _co.xSet; var currVal_2 = _co.xScaleLine; var currVal_3 = _co.yScaleLine; var currVal_4 = _co.combinedSeries; var currVal_5 = _co.colorsLine; var currVal_6 = _co.tooltipDisabled; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, null); }\nfunction View_ComboChartComponent_6(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \":svg:g\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-circle-series\", \"\"]], null, [[null, \"select\"], [null, \"activate\"], [null, \"deactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"select\" === en)) {\n        var pd_0 = (_co.onClick($event, _v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"activate\" === en)) {\n        var pd_1 = (_co.onActivate($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_2 = (_co.onDeactivate($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i10.View_CircleSeriesComponent_0, i10.RenderType_CircleSeriesComponent)), i1.ɵdid(2, 638976, null, 0, i11.CircleSeriesComponent, [], { data: [0, \"data\"], xScale: [1, \"xScale\"], yScale: [2, \"yScale\"], colors: [3, \"colors\"], scaleType: [4, \"scaleType\"], visibleValue: [5, \"visibleValue\"], activeEntries: [6, \"activeEntries\"], tooltipDisabled: [7, \"tooltipDisabled\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit; var currVal_1 = _co.xScaleLine; var currVal_2 = _co.yScaleLine; var currVal_3 = _co.colorsLine; var currVal_4 = _co.scaleType; var currVal_5 = _co.hoveredVertical; var currVal_6 = _co.activeEntries; var currVal_7 = _co.tooltipDisabled; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }, null); }\nexport function View_ComboChartComponent_0(_l) { return i1.ɵvid(0, [i1.ɵqud(671088640, 1, { lineSeriesComponent: 0 }), (_l()(), i1.ɵeld(1, 16777216, null, null, 20, \"ngx-charts-chart\", [], null, [[null, \"legendLabelClick\"], [null, \"legendLabelActivate\"], [null, \"legendLabelDeactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"legendLabelClick\" === en)) {\n        var pd_0 = (_co.onClick($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"legendLabelActivate\" === en)) {\n        var pd_1 = (_co.onActivate($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"legendLabelDeactivate\" === en)) {\n        var pd_2 = (_co.onDeactivate($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i12.View_ChartComponent_0, i12.RenderType_ChartComponent)), i1.ɵprd(512, null, i13.TooltipService, i13.TooltipService, [i14.InjectionService]), i1.ɵdid(3, 573440, null, 0, i15.ChartComponent, [i1.ViewContainerRef, i13.TooltipService], { view: [0, \"view\"], showLegend: [1, \"showLegend\"], legendOptions: [2, \"legendOptions\"], activeEntries: [3, \"activeEntries\"], animations: [4, \"animations\"] }, { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }), i1.ɵpad(4, 2), (_l()(), i1.ɵeld(5, 0, null, 0, 8, \":svg:g\", [[\"class\", \"bar-chart chart\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_1)), i1.ɵdid(7, 16384, null, 0, i16.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_2)), i1.ɵdid(9, 16384, null, 0, i16.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_3)), i1.ɵdid(11, 16384, null, 0, i16.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(12, 0, null, null, 1, \":svg:g\", [[\"ngx-combo-charts-series-vertical\", \"\"], [\"tooltipDisabled\", \"true\"]], null, [[null, \"activate\"], [null, \"deactivate\"], [null, \"bandwidth\"], [null, \"select\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"activate\" === en)) {\n        var pd_0 = (_co.onActivate($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_1 = (_co.onDeactivate($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"bandwidth\" === en)) {\n        var pd_2 = (_co.updateLineWidth($event) !== false);\n        ad = (pd_2 && ad);\n    } if ((\"select\" === en)) {\n        var pd_3 = (_co.onClick($event) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, i17.View_ComboSeriesVerticalComponent_0, i17.RenderType_ComboSeriesVerticalComponent)), i1.ɵdid(13, 573440, null, 0, i18.ComboSeriesVerticalComponent, [], { dims: [0, \"dims\"], series: [1, \"series\"], seriesLine: [2, \"seriesLine\"], xScale: [3, \"xScale\"], yScale: [4, \"yScale\"], colors: [5, \"colors\"], tooltipDisabled: [6, \"tooltipDisabled\"], gradient: [7, \"gradient\"], activeEntries: [8, \"activeEntries\"], animations: [9, \"animations\"], noBarWhenZero: [10, \"noBarWhenZero\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", bandwidth: \"bandwidth\" }), (_l()(), i1.ɵeld(14, 0, null, 0, 7, \":svg:g\", [[\"class\", \"line-chart chart\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 6, \":svg:g\", [], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_4)), i1.ɵdid(17, 278528, null, 0, i16.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_5)), i1.ɵdid(19, 16384, null, 0, i16.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ComboChartComponent_6)), i1.ɵdid(21, 278528, null, 0, i16.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 4, 0, (_co.width + _co.legendSpacing), _co.height); var currVal_1 = _co.legend; var currVal_2 = _co.legendOptions; var currVal_3 = _co.activeEntries; var currVal_4 = _co.animations; _ck(_v, 3, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_6 = _co.xAxis; _ck(_v, 7, 0, currVal_6); var currVal_7 = _co.yAxis; _ck(_v, 9, 0, currVal_7); var currVal_8 = _co.yAxis; _ck(_v, 11, 0, currVal_8); var currVal_9 = _co.dims; var currVal_10 = _co.results; var currVal_11 = _co.lineChart; var currVal_12 = _co.xScale; var currVal_13 = _co.yScale; var currVal_14 = _co.colors; var currVal_15 = \"true\"; var currVal_16 = _co.gradient; var currVal_17 = _co.activeEntries; var currVal_18 = _co.animations; var currVal_19 = _co.noBarWhenZero; _ck(_v, 13, 1, [currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19]); var currVal_21 = _co.lineChart; var currVal_22 = _co.trackBy; _ck(_v, 17, 0, currVal_21, currVal_22); var currVal_23 = !_co.tooltipDisabled; _ck(_v, 19, 0, currVal_23); var currVal_24 = _co.lineChart; _ck(_v, 21, 0, currVal_24); }, function (_ck, _v) { var _co = _v.component; var currVal_5 = _co.transform; _ck(_v, 5, 0, currVal_5); var currVal_20 = _co.transform; _ck(_v, 14, 0, currVal_20); }); }\nexport function View_ComboChartComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"combo-chart-component\", [], null, [[null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; if ((\"mouseleave\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).hideCircles() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_ComboChartComponent_0, RenderType_ComboChartComponent)), i1.ɵdid(1, 4898816, null, 2, i19.ComboChartComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], null, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵqud(603979776, 2, { seriesTooltipTemplate: 0 })], null, null); }\nvar ComboChartComponentNgFactory = i1.ɵccf(\"combo-chart-component\", i19.ComboChartComponent, View_ComboChartComponent_Host_0, { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\", curve: \"curve\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", showRightYAxisLabel: \"showRightYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", yAxisLabelRight: \"yAxisLabelRight\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", yRightAxisTickFormatting: \"yRightAxisTickFormatting\", roundDomains: \"roundDomains\", colorSchemeLine: \"colorSchemeLine\", autoScale: \"autoScale\", lineChart: \"lineChart\", yLeftAxisScaleFactor: \"yLeftAxisScaleFactor\", yRightAxisScaleFactor: \"yRightAxisScaleFactor\", rangeFillOpacity: \"rangeFillOpacity\", noBarWhenZero: \"noBarWhenZero\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, []);\nexport { ComboChartComponentNgFactory as ComboChartComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".ngx-charts{float:left;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus{outline:0}.ngx-charts .arc.hidden,.ngx-charts .bar.hidden,.ngx-charts .card.hidden,.ngx-charts .cell.hidden{display:none}.ngx-charts g:focus{outline:0}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}\"];\nexport { styles as styles };\n","\n      <ngx-charts-chart\n        [view]=\"[width + legendSpacing, height]\"\n        [showLegend]=\"legend\"\n        [legendOptions]=\"legendOptions\"\n        [activeEntries]=\"activeEntries\"\n        [animations]=\"animations\"\n        (legendLabelClick)=\"onClick($event)\"\n        (legendLabelActivate)=\"onActivate($event)\"\n        (legendLabelDeactivate)=\"onDeactivate($event)\"\n      >\n        <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n          <svg:g\n            ngx-charts-x-axis\n            *ngIf=\"xAxis\"\n            [xScale]=\"xScale\"\n            [dims]=\"dims\"\n            [showLabel]=\"showXAxisLabel\"\n            [labelText]=\"xAxisLabel\"\n            [tickFormatting]=\"xAxisTickFormatting\"\n            (dimensionsChanged)=\"updateXAxisHeight($event)\"\n          ></svg:g>\n          <svg:g\n            ngx-charts-y-axis\n            *ngIf=\"yAxis\"\n            [yScale]=\"yScale\"\n            [dims]=\"dims\"\n            [yOrient]=\"yOrientLeft\"\n            [showGridLines]=\"showGridLines\"\n            [showLabel]=\"showYAxisLabel\"\n            [labelText]=\"yAxisLabel\"\n            [tickFormatting]=\"yAxisTickFormatting\"\n            (dimensionsChanged)=\"updateYAxisWidth($event)\"\n          ></svg:g>\n          <svg:g\n            ngx-charts-y-axis\n            *ngIf=\"yAxis\"\n            [yScale]=\"yScaleLine\"\n            [dims]=\"dims\"\n            [yOrient]=\"yOrientRight\"\n            [showGridLines]=\"showGridLines\"\n            [showLabel]=\"showRightYAxisLabel\"\n            [labelText]=\"yAxisLabelRight\"\n            [tickFormatting]=\"yRightAxisTickFormatting\"\n            (dimensionsChanged)=\"updateYAxisWidth($event)\"\n          ></svg:g>\n          <svg:g\n            ngx-combo-charts-series-vertical\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"results\"\n            [seriesLine]=\"lineChart\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            tooltipDisabled=\"true\"\n            [activeEntries]=\"activeEntries\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (bandwidth)=\"updateLineWidth($event)\"\n            (select)=\"onClick($event)\"\n          ></svg:g>\n        </svg:g>\n        <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n          <svg:g>\n            <svg:g *ngFor=\"let series of lineChart; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScaleLine\"\n                [yScale]=\"yScaleLine\"\n                [colors]=\"colorsLine\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n            <svg:g\n              ngx-charts-tooltip-area\n              *ngIf=\"!tooltipDisabled\"\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScaleLine\"\n              [yScale]=\"yScaleLine\"\n              [results]=\"combinedSeries\"\n              [colors]=\"colorsLine\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n            <svg:g *ngFor=\"let series of lineChart\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScaleLine\"\n                [yScale]=\"yScaleLine\"\n                [colors]=\"colorsLine\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </ngx-charts-chart>\n    ","import { Component, OnInit, ChangeDetectionStrategy, Host } from '@angular/core';\r\nimport { ToolsService } from '@services/tools.service';\r\nimport { DataService } from '@services/data.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { WorkerService } from '@services/worker.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\n@Component({\r\n  selector: 'cism-system-performance',\r\n  templateUrl: './system-performance.component.html',\r\n  styleUrls: ['./system-performance.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SystemPerformanceComponent implements OnInit {\r\n\r\n  // This Subject will be used for the chart to show the data\r\n  chartData = new BehaviorSubject<Object[]>([])\r\n\r\n  seriesData = new BehaviorSubject<Object[]>([])\r\n\r\n  // Title Change Subscription\r\n  titleChangeSub: Subscription\r\n\r\n  constructor(\r\n    private _data: DataService,\r\n    private _tools: ToolsService,\r\n    private _config: ConfigService,\r\n    private _worker: WorkerService,\r\n    @Host() private _holder: SystemGraphicHolderComponent) {\r\n      this._holder.titles.next([this._config.config.system.titles.S4])\r\n     }\r\n\r\n     // This function is executed when this component is destroyed\r\n    ngOnDestroy() {\r\n      if (this.titleChangeSub) this.titleChangeSub.unsubscribe()\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n      var csvdata = this._data.system;\r\n      csvdata = csvdata.filter(type => type[0] == 'S4');\r\n      var newData = []\r\n      var barData = []\r\n      var linesData = []\r\n      for(let key in csvdata){\r\n        // Lines data pushing\r\n        let pushedData = {\r\n          name: csvdata[key][1],\r\n          value: csvdata[key][3]\r\n        }\r\n        linesData.push(pushedData);\r\n        // Bar data pushing\r\n        let barsPush = {\r\n          \"name\": csvdata[key][1],\r\n          \"value\": csvdata[key][2]\r\n        }\r\n        barData.push(barsPush);\r\n      }\r\n      newData.push(barData);\r\n      // Formatting the lines data\r\n      newData.push([\r\n        {\r\n          \"name\": 'Average Silt',\r\n          \"series\": linesData\r\n        }\r\n      ]);\r\n          this.chartData.next(\r\n            newData[0]\r\n          )\r\n          console.log(\"seriesData:\", newData[1])\r\n          // Pushing into chart\r\n          this.seriesData.next(\r\n            newData[1]\r\n          )\r\n      }\r\n\r\n  // Chart data\r\n  showXAxis = true;\r\n  showYAxis = true;\r\n  showLegend = true;\r\n  showXAxisLabel = true;\r\n  innerPadding = '10%';\r\n  animations: boolean = true;\r\n\r\n  // Graph colors and config\r\n  lineChartScheme = {\r\n    name: 'coolthree',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: ['#ffb74d']\r\n  };\r\n\r\n  comboBarScheme = {\r\n    name: 'singleLightBlue',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: ['#00bcd4']\r\n  };\r\n\r\n}\r\n\r\nexport interface PIRData {\r\n  tickets: any[]\r\n  configColumns: any\r\n}\r\n\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-performance.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../combo-chart/combo-chart.component.ngfactory\";\nimport * as i3 from \"../combo-chart/combo-chart.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./system-performance.component\";\nimport * as i6 from \"../../../services/data.service\";\nimport * as i7 from \"../../../services/tools.service\";\nimport * as i8 from \"../../../services/config.service\";\nimport * as i9 from \"../../../services/worker.service\";\nimport * as i10 from \"../system-graphic-holder/system-graphic-holder.component\";\nvar styles_SystemPerformanceComponent = [i0.styles];\nvar RenderType_SystemPerformanceComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemPerformanceComponent, data: {} });\nexport { RenderType_SystemPerformanceComponent as RenderType_SystemPerformanceComponent };\nexport function View_SystemPerformanceComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 5, \"combo-chart-component\", [], null, [[null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; if ((\"mouseleave\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).hideCircles() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_ComboChartComponent_0, i2.RenderType_ComboChartComponent)), i1.ɵdid(1, 4898816, null, 2, i3.ComboChartComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], { results: [0, \"results\"], scheme: [1, \"scheme\"], xAxis: [2, \"xAxis\"], yAxis: [3, \"yAxis\"], showGridLines: [4, \"showGridLines\"], colorSchemeLine: [5, \"colorSchemeLine\"], lineChart: [6, \"lineChart\"] }, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 }), i1.ɵqud(603979776, 2, { seriesTooltipTemplate: 0 }), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef]), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 1, 0, i1.ɵnov(_v, 4).transform(_co.chartData)); var currVal_1 = _co.comboBarScheme; var currVal_2 = _co.showXAxis; var currVal_3 = _co.showYAxis; var currVal_4 = false; var currVal_5 = _co.lineChartScheme; var currVal_6 = i1.ɵunv(_v, 1, 6, i1.ɵnov(_v, 5).transform(_co.seriesData)); _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, null); }\nexport function View_SystemPerformanceComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-performance\", [], null, null, null, View_SystemPerformanceComponent_0, RenderType_SystemPerformanceComponent)), i1.ɵdid(1, 245760, null, 0, i5.SystemPerformanceComponent, [i6.DataService, i7.ToolsService, i8.ConfigService, i9.WorkerService, i10.SystemGraphicHolderComponent], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SystemPerformanceComponentNgFactory = i1.ɵccf(\"cism-system-performance\", i5.SystemPerformanceComponent, View_SystemPerformanceComponent_Host_0, {}, {}, []);\nexport { SystemPerformanceComponentNgFactory as SystemPerformanceComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]  ngx-charts-chart .line-chart.chart g.line-series path{stroke-width:3px}[_nghost-%COMP%]  [ngx-combo-charts-series-vertical]{opacity:.5!important}[_nghost-%COMP%]{display:block;height:270px;padding-right:15px}\"];\nexport { styles as styles };\n","<combo-chart-component\r\n    [scheme]=\"comboBarScheme\"\r\n    [colorSchemeLine]=\"lineChartScheme\"\r\n    [results]=\"chartData | async\"\r\n    [lineChart]=\"seriesData | async\"\r\n    [showGridLines]=\"false\"\r\n    [xAxis]=\"showXAxis\"\r\n    [yAxis]=\"showYAxis\">\r\n</combo-chart-component>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./grid-panel.component\";\nvar styles_GridPanelComponent = [];\nvar RenderType_GridPanelComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_GridPanelComponent, data: {} });\nexport { RenderType_GridPanelComponent as RenderType_GridPanelComponent };\nexport function View_GridPanelComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \":svg:rect\", [[\"class\", \"gridpanel\"], [\"stroke\", \"none\"]], [[1, \"height\", 0], [1, \"width\", 0], [1, \"x\", 0], [1, \"y\", 0]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.height; var currVal_1 = _co.width; var currVal_2 = _co.x; var currVal_3 = _co.y; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_GridPanelComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-grid-panel\", \"\"]], null, null, null, View_GridPanelComponent_0, RenderType_GridPanelComponent)), i0.ɵdid(1, 49152, null, 0, i1.GridPanelComponent, [], null, null)], null, null); }\nvar GridPanelComponentNgFactory = i0.ɵccf(\"g[ngx-charts-grid-panel]\", i1.GridPanelComponent, View_GridPanelComponent_Host_0, { path: \"path\", width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, {}, []);\nexport { GridPanelComponentNgFactory as GridPanelComponentNgFactory };\n","\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      class=\"gridpanel\"\n    />\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./grid-panel.component.ngfactory\";\nimport * as i2 from \"./grid-panel.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./grid-panel-series.component\";\nvar styles_GridPanelSeriesComponent = [];\nvar RenderType_GridPanelSeriesComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_GridPanelSeriesComponent, data: {} });\nexport { RenderType_GridPanelSeriesComponent as RenderType_GridPanelSeriesComponent };\nfunction View_GridPanelSeriesComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-grid-panel\", \"\"]], [[2, \"grid-panel\", null], [2, \"odd\", null], [2, \"even\", null]], null, null, i1.View_GridPanelComponent_0, i1.RenderType_GridPanelComponent)), i0.ɵdid(1, 49152, null, 0, i2.GridPanelComponent, [], { width: [0, \"width\"], height: [1, \"height\"], x: [2, \"x\"], y: [3, \"y\"] }, null)], function (_ck, _v) { var currVal_3 = _v.context.$implicit.width; var currVal_4 = _v.context.$implicit.height; var currVal_5 = _v.context.$implicit.x; var currVal_6 = _v.context.$implicit.y; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = (_v.context.$implicit.class === \"odd\"); var currVal_2 = (_v.context.$implicit.class === \"even\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_GridPanelSeriesComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_GridPanelSeriesComponent_1)), i0.ɵdid(1, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.gridPanels; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_GridPanelSeriesComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"g\", [[\"ngx-charts-grid-panel-series\", \"\"]], null, null, null, View_GridPanelSeriesComponent_0, RenderType_GridPanelSeriesComponent)), i0.ɵdid(1, 573440, null, 0, i4.GridPanelSeriesComponent, [], null, null)], null, null); }\nvar GridPanelSeriesComponentNgFactory = i0.ɵccf(\"g[ngx-charts-grid-panel-series]\", i4.GridPanelSeriesComponent, View_GridPanelSeriesComponent_Host_0, { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, {}, []);\nexport { GridPanelSeriesComponentNgFactory as GridPanelSeriesComponentNgFactory };\n","\n    <svg:g ngx-charts-grid-panel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\">\n    </svg:g>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"../common/base-chart.component.css.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../common/axes/x-axis.component.ngfactory\";\nimport * as i3 from \"../common/axes/x-axis.component\";\nimport * as i4 from \"../common/axes/y-axis.component.ngfactory\";\nimport * as i5 from \"../common/axes/y-axis.component\";\nimport * as i6 from \"./series-vertical.component.ngfactory\";\nimport * as i7 from \"./series-vertical.component\";\nimport * as i8 from \"../common/charts/chart.component.ngfactory\";\nimport * as i9 from \"../common/tooltip/tooltip.service\";\nimport * as i10 from \"../common/tooltip/injection.service\";\nimport * as i11 from \"../common/charts/chart.component\";\nimport * as i12 from \"../common/grid-panel-series.component.ngfactory\";\nimport * as i13 from \"../common/grid-panel-series.component\";\nimport * as i14 from \"@angular/common\";\nimport * as i15 from \"./bar-vertical-2d.component\";\nvar styles_BarVertical2DComponent = [i0.styles];\nvar RenderType_BarVertical2DComponent = i1.ɵcrt({ encapsulation: 2, styles: styles_BarVertical2DComponent, data: { \"animation\": [{ type: 7, name: \"animationState\", definitions: [{ type: 1, expr: \":leave\", animation: [{ type: 6, styles: { opacity: 1, transform: \"*\" }, offset: null }, { type: 4, styles: { type: 6, styles: { opacity: 0, transform: \"scale(0)\" }, offset: null }, timings: 500 }], options: null }], options: {} }] } });\nexport { RenderType_BarVertical2DComponent as RenderType_BarVertical2DComponent };\nfunction View_BarVertical2DComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-x-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateXAxisHeight($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_XAxisComponent_0, i2.RenderType_XAxisComponent)), i1.ɵdid(1, 573440, null, 0, i3.XAxisComponent, [], { xScale: [0, \"xScale\"], dims: [1, \"dims\"], trimTicks: [2, \"trimTicks\"], rotateTicks: [3, \"rotateTicks\"], maxTickLength: [4, \"maxTickLength\"], tickFormatting: [5, \"tickFormatting\"], showLabel: [6, \"showLabel\"], labelText: [7, \"labelText\"], ticks: [8, \"ticks\"], xAxisOffset: [9, \"xAxisOffset\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.groupScale; var currVal_1 = _co.dims; var currVal_2 = _co.trimXAxisTicks; var currVal_3 = _co.rotateXAxisTicks; var currVal_4 = _co.maxXAxisTickLength; var currVal_5 = _co.xAxisTickFormatting; var currVal_6 = _co.showXAxisLabel; var currVal_7 = _co.xAxisLabel; var currVal_8 = _co.xAxisTicks; var currVal_9 = _co.dataLabelMaxHeight.negative; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }, null); }\nfunction View_BarVertical2DComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-y-axis\", \"\"]], null, [[null, \"dimensionsChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"dimensionsChanged\" === en)) {\n        var pd_0 = (_co.updateYAxisWidth($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_YAxisComponent_0, i4.RenderType_YAxisComponent)), i1.ɵdid(1, 573440, null, 0, i5.YAxisComponent, [], { yScale: [0, \"yScale\"], dims: [1, \"dims\"], trimTicks: [2, \"trimTicks\"], maxTickLength: [3, \"maxTickLength\"], tickFormatting: [4, \"tickFormatting\"], ticks: [5, \"ticks\"], showGridLines: [6, \"showGridLines\"], showLabel: [7, \"showLabel\"], labelText: [8, \"labelText\"] }, { dimensionsChanged: \"dimensionsChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.valueScale; var currVal_1 = _co.dims; var currVal_2 = _co.trimYAxisTicks; var currVal_3 = _co.maxYAxisTickLength; var currVal_4 = _co.yAxisTickFormatting; var currVal_5 = _co.yAxisTicks; var currVal_6 = _co.showGridLines; var currVal_7 = _co.showYAxisLabel; var currVal_8 = _co.yAxisLabel; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, null); }\nfunction View_BarVertical2DComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-series-vertical\", \"\"]], [[24, \"@animationState\", 0], [1, \"transform\", 0]], [[null, \"select\"], [null, \"activate\"], [null, \"deactivate\"], [null, \"dataLabelHeightChanged\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"select\" === en)) {\n        var pd_0 = (_co.onClick($event, _v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"activate\" === en)) {\n        var pd_1 = (_co.onActivate($event, _v.context.$implicit) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_2 = (_co.onDeactivate($event, _v.context.$implicit) !== false);\n        ad = (pd_2 && ad);\n    } if ((\"dataLabelHeightChanged\" === en)) {\n        var pd_3 = (_co.onDataLabelMaxHeightChanged($event, _v.context.index) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, i6.View_SeriesVerticalComponent_0, i6.RenderType_SeriesVerticalComponent)), i1.ɵdid(1, 573440, null, 0, i7.SeriesVerticalComponent, [], { dims: [0, \"dims\"], series: [1, \"series\"], xScale: [2, \"xScale\"], yScale: [3, \"yScale\"], colors: [4, \"colors\"], gradient: [5, \"gradient\"], activeEntries: [6, \"activeEntries\"], seriesName: [7, \"seriesName\"], tooltipDisabled: [8, \"tooltipDisabled\"], tooltipTemplate: [9, \"tooltipTemplate\"], roundEdges: [10, \"roundEdges\"], animations: [11, \"animations\"], showDataLabel: [12, \"showDataLabel\"], dataLabelFormatting: [13, \"dataLabelFormatting\"], noBarWhenZero: [14, \"noBarWhenZero\"] }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" })], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.dims; var currVal_3 = _v.context.$implicit.series; var currVal_4 = _co.innerScale; var currVal_5 = _co.valueScale; var currVal_6 = _co.colors; var currVal_7 = _co.gradient; var currVal_8 = _co.activeEntries; var currVal_9 = _v.context.$implicit.name; var currVal_10 = _co.tooltipDisabled; var currVal_11 = _co.tooltipTemplate; var currVal_12 = _co.roundEdges; var currVal_13 = _co.animations; var currVal_14 = _co.showDataLabel; var currVal_15 = _co.dataLabelFormatting; var currVal_16 = _co.noBarWhenZero; _ck(_v, 1, 1, [currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16]); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = \"active\"; var currVal_1 = _co.groupTransform(_v.context.$implicit); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nexport function View_BarVertical2DComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 16777216, null, null, 12, \"ngx-charts-chart\", [], null, [[null, \"legendLabelActivate\"], [null, \"legendLabelDeactivate\"], [null, \"legendLabelClick\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"legendLabelActivate\" === en)) {\n        var pd_0 = (_co.onActivate($event, undefined, true) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"legendLabelDeactivate\" === en)) {\n        var pd_1 = (_co.onDeactivate($event, undefined, true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"legendLabelClick\" === en)) {\n        var pd_2 = (_co.onClick($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i8.View_ChartComponent_0, i8.RenderType_ChartComponent)), i1.ɵprd(512, null, i9.TooltipService, i9.TooltipService, [i10.InjectionService]), i1.ɵdid(2, 573440, null, 0, i11.ChartComponent, [i1.ViewContainerRef, i9.TooltipService], { view: [0, \"view\"], showLegend: [1, \"showLegend\"], legendOptions: [2, \"legendOptions\"], activeEntries: [3, \"activeEntries\"], animations: [4, \"animations\"] }, { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }), i1.ɵpad(3, 2), (_l()(), i1.ɵeld(4, 0, null, 0, 8, \":svg:g\", [[\"class\", \"bar-chart chart\"]], [[1, \"transform\", 0]], null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 1, \":svg:g\", [[\"ngx-charts-grid-panel-series\", \"\"], [\"orient\", \"vertical\"]], null, null, null, i12.View_GridPanelSeriesComponent_0, i12.RenderType_GridPanelSeriesComponent)), i1.ɵdid(6, 573440, null, 0, i13.GridPanelSeriesComponent, [], { data: [0, \"data\"], dims: [1, \"dims\"], xScale: [2, \"xScale\"], yScale: [3, \"yScale\"], orient: [4, \"orient\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_BarVertical2DComponent_1)), i1.ɵdid(8, 16384, null, 0, i14.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_BarVertical2DComponent_2)), i1.ɵdid(10, 16384, null, 0, i14.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_BarVertical2DComponent_3)), i1.ɵdid(12, 278528, null, 0, i14.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co.width, _co.height); var currVal_1 = _co.legend; var currVal_2 = _co.legendOptions; var currVal_3 = _co.activeEntries; var currVal_4 = _co.animations; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_6 = _co.results; var currVal_7 = _co.dims; var currVal_8 = _co.groupScale; var currVal_9 = _co.valueScale; var currVal_10 = \"vertical\"; _ck(_v, 6, 0, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_11 = _co.xAxis; _ck(_v, 8, 0, currVal_11); var currVal_12 = _co.yAxis; _ck(_v, 10, 0, currVal_12); var currVal_13 = _co.results; var currVal_14 = _co.trackBy; _ck(_v, 12, 0, currVal_13, currVal_14); }, function (_ck, _v) { var _co = _v.component; var currVal_5 = _co.transform; _ck(_v, 4, 0, currVal_5); }); }\nexport function View_BarVertical2DComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"ngx-charts-bar-vertical-2d\", [], null, null, null, View_BarVertical2DComponent_0, RenderType_BarVertical2DComponent)), i1.ɵdid(1, 4898816, null, 1, i15.BarVertical2DComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], null, null), i1.ɵqud(603979776, 1, { tooltipTemplate: 0 })], null, null); }\nvar BarVertical2DComponentNgFactory = i1.ɵccf(\"ngx-charts-bar-vertical-2d\", i15.BarVertical2DComponent, View_BarVertical2DComponent_Host_0, { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, []);\nexport { BarVertical2DComponentNgFactory as BarVertical2DComponentNgFactory };\n","\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  ","import { Component, OnInit, ChangeDetectionStrategy, Host, ViewChild, OnDestroy} from '@angular/core';\r\nimport { ToolsService } from '@services/tools.service';\r\nimport { DataService } from '@services/data.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { SystemScrollerComponent } from '@components/system/system-scroller/system-scroller.component';\r\nimport { SystemGraphicHolderComponent } from '@components/system/system-graphic-holder/system-graphic-holder.component';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { filter } from 'rxjs/internal/operators/filter';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cism-overview-management',\r\n  templateUrl: './overview-management.component.html',\r\n  styleUrls: ['./overview-management.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [SystemScrollerComponent],\r\n})\r\nexport class OverviewManagementComponent implements OnInit, OnDestroy {\r\n\r\n  // This Subject will be used for the chart to show the data\r\n  chartData = new BehaviorSubject<Object[]>([])\r\n\r\n  // Title Change Subscription\r\n  titleChangeSub: Subscription\r\n\r\n  constructor(\r\n    private _data: DataService,\r\n    private _tools: ToolsService,\r\n    private _config: ConfigService,\r\n    @Host() private _holder: SystemGraphicHolderComponent\r\n  ) {\r\n    this._holder.titles.next([this._config.config.system.titles.S5])\r\n  }\r\n\r\n  // This function is executed when this component is destroyed\r\n  ngOnDestroy() {\r\n    if (this.titleChangeSub) this.titleChangeSub.unsubscribe()\r\n  }\r\n\r\n  @ViewChild(SystemScrollerComponent, { static: true }) _scroller: SystemScrollerComponent  \r\n  ngOnInit() {\r\n    // Handle title click change\r\n    this.titleChangeSub = this._holder.click.pipe(\r\n      distinctUntilChanged(),\r\n      filter(val => val != null && val.titles[0] == this._config.config.system.titles.S5)\r\n    ).subscribe(titleChanged => {\r\n      console.log(titleChanged)\r\n      switch(titleChanged.indexClicked){\r\n        case 0: \r\n          this.changeData();\r\n          this._holder.titles.next([this._config.config.system.titles.S5])\r\n          break;\r\n        case 1:\r\n          this.changeData({\r\n            series: titleChanged.nameClicked,\r\n            extra: {\r\n              drill: 2,\r\n              service: titleChanged.nameClicked\r\n            }\r\n          })\r\n          this._holder.titles.next([this._config.config.system.titles.S5, titleChanged.nameClicked])\r\n          break\r\n        default:\r\n      }\r\n    })\r\n    this.changeData()\r\n  }\r\n\r\n  changeData(event?){\r\n    const nextDrill = event ? event.extra.drill : 1\r\n    // Only accepts 3 levels\r\n    if (nextDrill >= 1 && nextDrill <= 3) {\r\n      // Check if it's default drill, first drill, or second drill\r\n      let csvdata = this._data.system.filter(type => type[0] == 'S5')\r\n      if (event !== undefined) {\r\n        csvdata = csvdata.filter(type => type[7] == event.extra.service)\r\n        if (nextDrill == 3) {\r\n          csvdata = csvdata.filter(type => type[8] == event.series)\r\n        }\r\n        if (nextDrill == 2) {\r\n          csvdata = this._tools.classifyByIndex(csvdata, this._config.config.columns.external)\r\n        } else {\r\n          csvdata = this._tools.classifyByIndex(csvdata, this._config.config.columns.classification)\r\n        }\r\n      } else {\r\n        csvdata = this._tools.classifyByIndex(csvdata, this._config.config.columns.description)\r\n      }\r\n      if (event !== undefined) {\r\n        switch (nextDrill) {\r\n          case 2:\r\n            this._holder.titles.next([this._config.config.system.titles.S5, event.extra.service])\r\n            break\r\n          case 3:\r\n            this._holder.titles.next(this._holder.titles.getValue().concat([event.series]))\r\n            break\r\n          default:\r\n        }\r\n      }\r\n      const newData = Object.keys(csvdata).map(key => {\r\n        let incidentTickets = this._tools.sumByIndex(csvdata[key], 2)\r\n        let wipTickets = this._tools.sumByIndex(csvdata[key], 3)\r\n        let sleepTickets = this._tools.sumByIndex(csvdata[key], 4)\r\n        let assignedTickets = this._tools.sumByIndex(csvdata[key], 5)\r\n        const drill = {\r\n          drill: event !== undefined ? nextDrill + 1 : 2,\r\n          service: event !== undefined ? event.extra.service : key\r\n        }\r\n        return {\r\n          name: key,\r\n          series: [\r\n            { name: \"Incident\", value: incidentTickets, extra: drill },\r\n            { name: \"\", value: \"\", extra: drill },\r\n            { name: \"WIP\", value: wipTickets, extra: drill },\r\n            { name: \"Sleep\", value: sleepTickets, extra: drill },\r\n            { name: \"Assigned\", value: assignedTickets, extra: drill }\r\n          ]\r\n        }\r\n      })\r\n      this.chartData.next(newData)\r\n      this._scroller.bars.next(newData.length)\r\n      this._scroller.barsWidth.next(100)\r\n    }\r\n  }\r\n\r\n  // options\r\n  colorScheme = {\r\n    domain: ['#00bcd4','lightgrey', '#ffb74d', '#7e57c2', '#039be5']\r\n  }\r\n}\r\n\r\nexport interface PIRData {\r\n  tickets: any[]\r\n  configColumns: any\r\n}","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./overview-management.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../system-scroller/system-scroller.component.ngfactory\";\nimport * as i3 from \"../system-scroller/system-scroller.component\";\nimport * as i4 from \"../../../../../node_modules/@swimlane/ngx-charts/release/bar-chart/bar-vertical-2d.component.ngfactory\";\nimport * as i5 from \"@swimlane/ngx-charts/release/bar-chart/bar-vertical-2d.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"./overview-management.component\";\nimport * as i8 from \"../../../services/data.service\";\nimport * as i9 from \"../../../services/tools.service\";\nimport * as i10 from \"../../../services/config.service\";\nimport * as i11 from \"../system-graphic-holder/system-graphic-holder.component\";\nvar styles_OverviewManagementComponent = [i0.styles];\nvar RenderType_OverviewManagementComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_OverviewManagementComponent, data: {} });\nexport { RenderType_OverviewManagementComponent as RenderType_OverviewManagementComponent };\nexport function View_OverviewManagementComponent_0(_l) { return i1.ɵvid(2, [i1.ɵqud(402653184, 1, { _scroller: 0 }), (_l()(), i1.ɵeld(1, 0, null, null, 6, \"cism-system-scroller\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 2).resize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_SystemScrollerComponent_0, i2.RenderType_SystemScrollerComponent)), i1.ɵdid(2, 114688, [[1, 4]], 0, i3.SystemScrollerComponent, [i1.ElementRef], null, null), (_l()(), i1.ɵeld(3, 0, null, 0, 4, \"div\", [[\"class\", \"groupedbarcontainer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 3, \"ngx-charts-bar-vertical-2d\", [], null, [[null, \"select\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"select\" === en)) {\n        var pd_0 = (_co.changeData($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_BarVertical2DComponent_0, i4.RenderType_BarVertical2DComponent)), i1.ɵdid(5, 4898816, null, 1, i5.BarVertical2DComponent, [i1.ElementRef, i1.NgZone, i1.ChangeDetectorRef], { results: [0, \"results\"], scheme: [1, \"scheme\"], xAxis: [2, \"xAxis\"], yAxis: [3, \"yAxis\"], showGridLines: [4, \"showGridLines\"], groupPadding: [5, \"groupPadding\"], barPadding: [6, \"barPadding\"] }, { select: \"select\" }), i1.ɵqud(603979776, 2, { tooltipTemplate: 0 }), i1.ɵpid(131072, i6.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; _ck(_v, 2, 0); var currVal_0 = i1.ɵunv(_v, 5, 0, i1.ɵnov(_v, 7).transform(_co.chartData)); var currVal_1 = _co.colorScheme; var currVal_2 = true; var currVal_3 = true; var currVal_4 = false; var currVal_5 = 15; var currVal_6 = 3; _ck(_v, 5, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }, null); }\nexport function View_OverviewManagementComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"cism-overview-management\", [], null, null, null, View_OverviewManagementComponent_0, RenderType_OverviewManagementComponent)), i1.ɵprd(4608, null, i3.SystemScrollerComponent, i3.SystemScrollerComponent, [i1.ElementRef]), i1.ɵdid(2, 245760, null, 0, i7.OverviewManagementComponent, [i8.DataService, i9.ToolsService, i10.ConfigService, i11.SystemGraphicHolderComponent], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, null); }\nvar OverviewManagementComponentNgFactory = i1.ɵccf(\"cism-overview-management\", i7.OverviewManagementComponent, View_OverviewManagementComponent_Host_0, {}, {}, []);\nexport { OverviewManagementComponentNgFactory as OverviewManagementComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:block;height:100%}  .ngx-charts text{fill:rgba(255,255,255,.6)!important}.groupedbarcontainer[_ngcontent-%COMP%]{height:200px}\"];\nexport { styles as styles };\n","<cism-system-scroller>\r\n    <div class='groupedbarcontainer'>\r\n        <ngx-charts-bar-vertical-2d\r\n            [results]=\"chartData | async\"\r\n            [xAxis]=\"true\"\r\n            [yAxis]=\"true\"\r\n            [scheme]=\"colorScheme\"\r\n            [barPadding]=\"3\"\r\n            [showGridLines]=\"false\"\r\n            [groupPadding]=\"15\"\r\n            (select)=\"changeData($event)\" >\r\n        </ngx-charts-bar-vertical-2d>\r\n    </div>\r\n</cism-system-scroller>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./system-wrapper.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../system/system-graphic-holder/system-graphic-holder.component.ngfactory\";\nimport * as i3 from \"../../system/system-graphic-holder/system-graphic-holder.component\";\nimport * as i4 from \"../../system/system-availability/system-availability.component.ngfactory\";\nimport * as i5 from \"../../system/system-availability/system-availability.component\";\nimport * as i6 from \"../../../services/data.service\";\nimport * as i7 from \"../../../services/config.service\";\nimport * as i8 from \"../../../services/tools.service\";\nimport * as i9 from \"../../system/system-robustness/system-robustness.component.ngfactory\";\nimport * as i10 from \"../../system/system-robustness/system-robustness.component\";\nimport * as i11 from \"../../system/system-root-cause/system-root-cause.component.ngfactory\";\nimport * as i12 from \"../../system/system-root-cause/system-root-cause.component\";\nimport * as i13 from \"../../system/system-performance/system-performance.component.ngfactory\";\nimport * as i14 from \"../../system/system-performance/system-performance.component\";\nimport * as i15 from \"../../../services/worker.service\";\nimport * as i16 from \"../../system/overview-management/overview-management.component.ngfactory\";\nimport * as i17 from \"../../system/system-scroller/system-scroller.component\";\nimport * as i18 from \"../../system/overview-management/overview-management.component\";\nimport * as i19 from \"./system-wrapper.component\";\nvar styles_SystemWrapperComponent = [i0.styles];\nvar RenderType_SystemWrapperComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SystemWrapperComponent, data: {} });\nexport { RenderType_SystemWrapperComponent as RenderType_SystemWrapperComponent };\nexport function View_SystemWrapperComponent_0(_l) { return i1.ɵvid(2, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"cism-system-graphic-holder\", [], null, null, null, i2.View_SystemGraphicHolderComponent_0, i2.RenderType_SystemGraphicHolderComponent)), i1.ɵdid(1, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null), (_l()(), i1.ɵeld(2, 0, null, 0, 1, \"cism-system-availability\", [], null, null, null, i4.View_SystemAvailabilityComponent_0, i4.RenderType_SystemAvailabilityComponent)), i1.ɵdid(3, 114688, null, 0, i5.SystemAvailabilityComponent, [i6.DataService, i7.ConfigService, i8.ToolsService, i3.SystemGraphicHolderComponent], null, null), (_l()(), i1.ɵeld(4, 0, null, null, 3, \"cism-system-graphic-holder\", [], null, null, null, i2.View_SystemGraphicHolderComponent_0, i2.RenderType_SystemGraphicHolderComponent)), i1.ɵdid(5, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null), (_l()(), i1.ɵeld(6, 0, null, 0, 1, \"cism-system-robustness\", [], null, null, null, i9.View_SystemRobustnessComponent_0, i9.RenderType_SystemRobustnessComponent)), i1.ɵdid(7, 49152, null, 0, i10.SystemRobustnessComponent, [i7.ConfigService, i3.SystemGraphicHolderComponent], null, null), (_l()(), i1.ɵeld(8, 0, null, null, 3, \"cism-system-graphic-holder\", [], null, null, null, i2.View_SystemGraphicHolderComponent_0, i2.RenderType_SystemGraphicHolderComponent)), i1.ɵdid(9, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null), (_l()(), i1.ɵeld(10, 0, null, 0, 1, \"cism-system-root-cause\", [], null, null, null, i11.View_SystemRootCauseComponent_0, i11.RenderType_SystemRootCauseComponent)), i1.ɵdid(11, 114688, null, 0, i12.SystemRootCauseComponent, [i7.ConfigService, i6.DataService, i8.ToolsService, i3.SystemGraphicHolderComponent], null, null), (_l()(), i1.ɵeld(12, 0, null, null, 3, \"cism-system-graphic-holder\", [], null, null, null, i2.View_SystemGraphicHolderComponent_0, i2.RenderType_SystemGraphicHolderComponent)), i1.ɵdid(13, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null), (_l()(), i1.ɵeld(14, 0, null, 0, 1, \"cism-system-performance\", [], null, null, null, i13.View_SystemPerformanceComponent_0, i13.RenderType_SystemPerformanceComponent)), i1.ɵdid(15, 245760, null, 0, i14.SystemPerformanceComponent, [i6.DataService, i8.ToolsService, i7.ConfigService, i15.WorkerService, i3.SystemGraphicHolderComponent], null, null), (_l()(), i1.ɵeld(16, 0, null, null, 4, \"cism-system-graphic-holder\", [], null, null, null, i2.View_SystemGraphicHolderComponent_0, i2.RenderType_SystemGraphicHolderComponent)), i1.ɵdid(17, 49152, null, 0, i3.SystemGraphicHolderComponent, [], null, null), (_l()(), i1.ɵeld(18, 0, null, 0, 2, \"cism-overview-management\", [], null, null, null, i16.View_OverviewManagementComponent_0, i16.RenderType_OverviewManagementComponent)), i1.ɵprd(4608, null, i17.SystemScrollerComponent, i17.SystemScrollerComponent, [i1.ElementRef]), i1.ɵdid(20, 245760, null, 0, i18.OverviewManagementComponent, [i6.DataService, i8.ToolsService, i7.ConfigService, i3.SystemGraphicHolderComponent], null, null)], function (_ck, _v) { _ck(_v, 3, 0); _ck(_v, 11, 0); _ck(_v, 15, 0); _ck(_v, 20, 0); }, null); }\nexport function View_SystemWrapperComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"cism-system-wrapper\", [], null, null, null, View_SystemWrapperComponent_0, RenderType_SystemWrapperComponent)), i1.ɵdid(1, 49152, null, 0, i19.SystemWrapperComponent, [], null, null)], null, null); }\nvar SystemWrapperComponentNgFactory = i1.ɵccf(\"cism-system-wrapper\", i19.SystemWrapperComponent, View_SystemWrapperComponent_Host_0, {}, {}, []);\nexport { SystemWrapperComponentNgFactory as SystemWrapperComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{display:-ms-flexbox;display:flex;margin-bottom:50px;-ms-flex-wrap:wrap;flex-wrap:wrap}@media (max-width:1200px){cism-system-graphic-holder[_ngcontent-%COMP%]:nth-child(2n+2){background-color:rgba(255,255,255,.04)}}@media (min-width:1200px){cism-system-graphic-holder[_ngcontent-%COMP%]{-ms-flex:1 50%;flex:1 50%;max-width:50%}cism-system-graphic-holder[_ngcontent-%COMP%]:nth-child(2n+1):after{position:absolute;content:\\\"\\\";right:0;height:80%;top:0;bottom:0;margin:auto;width:1px;background-color:rgba(255,255,255,.05)}cism-system-graphic-holder[_ngcontent-%COMP%]:nth-child(4n+3), cism-system-graphic-holder[_ngcontent-%COMP%]:nth-child(4n+4){background-color:rgba(255,255,255,.04)}cism-system-graphic-holder[_ngcontent-%COMP%]:last-child{-ms-flex:1 100%;flex:1 100%;max-width:100%}}\"];\nexport { styles as styles };\n","<cism-system-graphic-holder>\r\n    <cism-system-availability></cism-system-availability>\r\n</cism-system-graphic-holder>\r\n<cism-system-graphic-holder>\r\n    <cism-system-robustness></cism-system-robustness>\r\n</cism-system-graphic-holder>\r\n<cism-system-graphic-holder>\r\n    <cism-system-root-cause></cism-system-root-cause>\r\n</cism-system-graphic-holder>\r\n<cism-system-graphic-holder>\r\n    <cism-system-performance></cism-system-performance>\r\n</cism-system-graphic-holder>\r\n<cism-system-graphic-holder>\r\n    <cism-overview-management></cism-overview-management>\r\n</cism-system-graphic-holder>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./system.module\";\nimport * as i2 from \"../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"../../../node_modules/@swimlane/ngx-charts/release/common/tooltip/tooltip.component.ngfactory\";\nimport * as i4 from \"../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i5 from \"../components/pages/system-wrapper/system-wrapper.component.ngfactory\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@swimlane/ngx-charts/release/common/tooltip/injection.service\";\nimport * as i8 from \"@swimlane/ngx-charts/release/common/tooltip/tooltip.service\";\nimport * as i9 from \"@angular/cdk/observers\";\nimport * as i10 from \"@angular/cdk/overlay\";\nimport * as i11 from \"@angular/cdk/bidi\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"@angular/platform-browser\";\nimport * as i14 from \"@angular/material/core\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/router\";\nimport * as i17 from \"@swimlane/ngx-charts/release/common/axes/axes.module\";\nimport * as i18 from \"@swimlane/ngx-charts/release/common/tooltip/tooltip.module\";\nimport * as i19 from \"@swimlane/ngx-charts/release/common/chart-common.module\";\nimport * as i20 from \"@swimlane/ngx-charts/release/area-chart/area-chart.module\";\nimport * as i21 from \"@swimlane/ngx-charts/release/bar-chart/bar-chart.module\";\nimport * as i22 from \"@swimlane/ngx-charts/release/bubble-chart/bubble-chart.module\";\nimport * as i23 from \"@swimlane/ngx-charts/release/force-directed-graph/force-directed-graph.module\";\nimport * as i24 from \"@swimlane/ngx-charts/release/heat-map/heat-map.module\";\nimport * as i25 from \"@swimlane/ngx-charts/release/line-chart/line-chart.module\";\nimport * as i26 from \"@swimlane/ngx-charts/release/pie-chart/pie-chart.module\";\nimport * as i27 from \"@swimlane/ngx-charts/release/polar-chart/polar-chart.module\";\nimport * as i28 from \"@swimlane/ngx-charts/release/number-card/number-card.module\";\nimport * as i29 from \"@swimlane/ngx-charts/release/tree-map/tree-map.module\";\nimport * as i30 from \"@swimlane/ngx-charts/release/gauge/gauge.module\";\nimport * as i31 from \"@swimlane/ngx-charts/release/ngx-charts.module\";\nimport * as i32 from \"@angular/cdk/platform\";\nimport * as i33 from \"@angular/cdk/a11y\";\nimport * as i34 from \"@angular/cdk/portal\";\nimport * as i35 from \"@angular/cdk/scrolling\";\nimport * as i36 from \"@angular/material/form-field\";\nimport * as i37 from \"./shared.module\";\nimport * as i38 from \"../components/pages/system-wrapper/system-wrapper.component\";\nvar SystemModuleNgFactory = i0.ɵcmf(i1.SystemModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.TooltipContentComponentNgFactory, i4.TooltipComponentNgFactory, i5.SystemWrapperComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i6.NgLocalization, i6.NgLocaleLocalization, [i0.LOCALE_ID, [2, i6.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i7.InjectionService, i7.InjectionService, [i0.ApplicationRef, i0.ComponentFactoryResolver, i0.Injector]), i0.ɵmpd(4608, i8.TooltipService, i8.TooltipService, [i7.InjectionService]), i0.ɵmpd(4608, i9.MutationObserverFactory, i9.MutationObserverFactory, []), i0.ɵmpd(4608, i10.Overlay, i10.Overlay, [i10.ScrollStrategyOptions, i10.OverlayContainer, i0.ComponentFactoryResolver, i10.OverlayPositionBuilder, i10.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i6.DOCUMENT, i11.Directionality, [2, i6.Location]]), i0.ɵmpd(5120, i10.ɵc, i10.ɵd, [i10.Overlay]), i0.ɵmpd(5120, i12.MAT_TOOLTIP_SCROLL_STRATEGY, i12.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i10.Overlay]), i0.ɵmpd(4608, i13.HAMMER_GESTURE_CONFIG, i14.GestureConfig, [[2, i14.MAT_HAMMER_OPTIONS], [2, i14.MatCommonModule]]), i0.ɵmpd(5120, i15.MAT_SELECT_SCROLL_STRATEGY, i15.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i10.Overlay]), i0.ɵmpd(1073742336, i16.RouterModule, i16.RouterModule, [[2, i16.ɵangular_packages_router_router_a], [2, i16.Router]]), i0.ɵmpd(1073742336, i6.CommonModule, i6.CommonModule, []), i0.ɵmpd(1073742336, i17.AxesModule, i17.AxesModule, []), i0.ɵmpd(1073742336, i18.TooltipModule, i18.TooltipModule, []), i0.ɵmpd(1073742336, i19.ChartCommonModule, i19.ChartCommonModule, []), i0.ɵmpd(1073742336, i20.AreaChartModule, i20.AreaChartModule, []), i0.ɵmpd(1073742336, i21.BarChartModule, i21.BarChartModule, []), i0.ɵmpd(1073742336, i22.BubbleChartModule, i22.BubbleChartModule, []), i0.ɵmpd(1073742336, i23.ForceDirectedGraphModule, i23.ForceDirectedGraphModule, []), i0.ɵmpd(1073742336, i24.HeatMapModule, i24.HeatMapModule, []), i0.ɵmpd(1073742336, i25.LineChartModule, i25.LineChartModule, []), i0.ɵmpd(1073742336, i26.PieChartModule, i26.PieChartModule, []), i0.ɵmpd(1073742336, i27.PolarChartModule, i27.PolarChartModule, []), i0.ɵmpd(1073742336, i28.NumberCardModule, i28.NumberCardModule, []), i0.ɵmpd(1073742336, i29.TreeMapModule, i29.TreeMapModule, []), i0.ɵmpd(1073742336, i30.GaugeModule, i30.GaugeModule, []), i0.ɵmpd(1073742336, i31.NgxChartsModule, i31.NgxChartsModule, []), i0.ɵmpd(1073742336, i32.PlatformModule, i32.PlatformModule, []), i0.ɵmpd(1073742336, i9.ObserversModule, i9.ObserversModule, []), i0.ɵmpd(1073742336, i33.A11yModule, i33.A11yModule, []), i0.ɵmpd(1073742336, i11.BidiModule, i11.BidiModule, []), i0.ɵmpd(1073742336, i34.PortalModule, i34.PortalModule, []), i0.ɵmpd(1073742336, i35.ScrollingModule, i35.ScrollingModule, []), i0.ɵmpd(1073742336, i10.OverlayModule, i10.OverlayModule, []), i0.ɵmpd(1073742336, i14.MatCommonModule, i14.MatCommonModule, [[2, i14.MATERIAL_SANITY_CHECKS], [2, i13.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i12.MatTooltipModule, i12.MatTooltipModule, []), i0.ɵmpd(1073742336, i36.MatFormFieldModule, i36.MatFormFieldModule, []), i0.ɵmpd(1073742336, i14.MatRippleModule, i14.MatRippleModule, []), i0.ɵmpd(1073742336, i14.MatPseudoCheckboxModule, i14.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i14.MatOptionModule, i14.MatOptionModule, []), i0.ɵmpd(1073742336, i15.MatSelectModule, i15.MatSelectModule, []), i0.ɵmpd(1073742336, i37.SharedModule, i37.SharedModule, []), i0.ɵmpd(1073742336, i1.SystemModule, i1.SystemModule, []), i0.ɵmpd(1024, i16.ROUTES, function () { return [[{ path: \"\", pathMatch: \"prefix\", component: i38.SystemWrapperComponent }]]; }, [])]); });\nexport { SystemModuleNgFactory as SystemModuleNgFactory };\n"],"sourceRoot":"webpack:///"}